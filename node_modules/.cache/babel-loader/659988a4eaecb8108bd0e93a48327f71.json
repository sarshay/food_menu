{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_interaction_DragBox_ from '../interaction/dragbox.js';\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {ol.interaction.DragBox}\n * @param {olx.interaction.DragZoomOptions=} opt_options Options.\n * @api\n */\n\nvar _ol_interaction_DragZoom_ = function (opt_options) {\n  var options = opt_options ? opt_options : {};\n  var condition = options.condition ? options.condition : _ol_events_condition_.shiftKeyOnly;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  _ol_interaction_DragBox_.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n};\n\n_ol_.inherits(_ol_interaction_DragZoom_, _ol_interaction_DragBox_);\n/**\n * @inheritDoc\n */\n\n\n_ol_interaction_DragZoom_.prototype.onBoxEnd = function () {\n  var map = this.getMap();\n  var view =\n  /** @type {!ol.View} */\n  map.getView();\n  var size =\n  /** @type {!ol.Size} */\n  map.getSize();\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n\n    var boxPixelExtent = _ol_extent_.createOrUpdateFromCoordinates([map.getPixelFromCoordinate(_ol_extent_.getBottomLeft(extent)), map.getPixelFromCoordinate(_ol_extent_.getTopRight(extent))]);\n\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    _ol_extent_.scaleFromCenter(mapExtent, 1 / factor);\n\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n\n  var center = _ol_extent_.getCenter(extent);\n\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: _ol_easing_.easeOut\n  });\n};\n\nexport default _ol_interaction_DragZoom_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/interaction/dragzoom.js"],"names":["_ol_","_ol_easing_","_ol_events_condition_","_ol_extent_","_ol_interaction_DragBox_","_ol_interaction_DragZoom_","opt_options","options","condition","shiftKeyOnly","duration_","duration","undefined","out_","out","call","className","inherits","prototype","onBoxEnd","map","getMap","view","getView","size","getSize","extent","getGeometry","getExtent","mapExtent","calculateExtent","boxPixelExtent","createOrUpdateFromCoordinates","getPixelFromCoordinate","getBottomLeft","getTopRight","factor","getResolutionForExtent","scaleFromCenter","resolution","constrainResolution","center","getCenter","constrainCenter","animate","easing","easeOut"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,qBAAP,MAAkC,wBAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB,GAAG,UAASC,WAAT,EAAsB;AACpD,MAAIC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA1C;AAEA,MAAIE,SAAS,GAAGD,OAAO,CAACC,SAAR,GACdD,OAAO,CAACC,SADM,GACMN,qBAAqB,CAACO,YAD5C;AAGA;AACF;AACA;AACA;;AACE,OAAKC,SAAL,GAAiBH,OAAO,CAACI,QAAR,KAAqBC,SAArB,GAAiCL,OAAO,CAACI,QAAzC,GAAoD,GAArE;AAEA;AACF;AACA;AACA;;AACE,OAAKE,IAAL,GAAYN,OAAO,CAACO,GAAR,KAAgBF,SAAhB,GAA4BL,OAAO,CAACO,GAApC,GAA0C,KAAtD;;AAEAV,EAAAA,wBAAwB,CAACW,IAAzB,CAA8B,IAA9B,EAAoC;AAClCP,IAAAA,SAAS,EAAEA,SADuB;AAElCQ,IAAAA,SAAS,EAAET,OAAO,CAACS,SAAR,IAAqB;AAFE,GAApC;AAKD,CAvBD;;AAyBAhB,IAAI,CAACiB,QAAL,CAAcZ,yBAAd,EAAyCD,wBAAzC;AAGA;AACA;AACA;;;AACAC,yBAAyB,CAACa,SAA1B,CAAoCC,QAApC,GAA+C,YAAW;AACxD,MAAIC,GAAG,GAAG,KAAKC,MAAL,EAAV;AAEA,MAAIC,IAAI;AAAG;AAAyBF,EAAAA,GAAG,CAACG,OAAJ,EAApC;AAEA,MAAIC,IAAI;AAAG;AAAyBJ,EAAAA,GAAG,CAACK,OAAJ,EAApC;AAEA,MAAIC,MAAM,GAAG,KAAKC,WAAL,GAAmBC,SAAnB,EAAb;;AAEA,MAAI,KAAKf,IAAT,EAAe;AACb,QAAIgB,SAAS,GAAGP,IAAI,CAACQ,eAAL,CAAqBN,IAArB,CAAhB;;AACA,QAAIO,cAAc,GAAG5B,WAAW,CAAC6B,6BAAZ,CAA0C,CAC7DZ,GAAG,CAACa,sBAAJ,CAA2B9B,WAAW,CAAC+B,aAAZ,CAA0BR,MAA1B,CAA3B,CAD6D,EAE7DN,GAAG,CAACa,sBAAJ,CAA2B9B,WAAW,CAACgC,WAAZ,CAAwBT,MAAxB,CAA3B,CAF6D,CAA1C,CAArB;;AAGA,QAAIU,MAAM,GAAGd,IAAI,CAACe,sBAAL,CAA4BN,cAA5B,EAA4CP,IAA5C,CAAb;;AAEArB,IAAAA,WAAW,CAACmC,eAAZ,CAA4BT,SAA5B,EAAuC,IAAIO,MAA3C;;AACAV,IAAAA,MAAM,GAAGG,SAAT;AACD;;AAED,MAAIU,UAAU,GAAGjB,IAAI,CAACkB,mBAAL,CACblB,IAAI,CAACe,sBAAL,CAA4BX,MAA5B,EAAoCF,IAApC,CADa,CAAjB;;AAGA,MAAIiB,MAAM,GAAGtC,WAAW,CAACuC,SAAZ,CAAsBhB,MAAtB,CAAb;;AACAe,EAAAA,MAAM,GAAGnB,IAAI,CAACqB,eAAL,CAAqBF,MAArB,CAAT;AAEAnB,EAAAA,IAAI,CAACsB,OAAL,CAAa;AACXL,IAAAA,UAAU,EAAEA,UADD;AAEXE,IAAAA,MAAM,EAAEA,MAFG;AAGX9B,IAAAA,QAAQ,EAAE,KAAKD,SAHJ;AAIXmC,IAAAA,MAAM,EAAE5C,WAAW,CAAC6C;AAJT,GAAb;AAOD,CAjCD;;AAkCA,eAAezC,yBAAf","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_easing_ from '../easing.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_interaction_DragBox_ from '../interaction/dragbox.js';\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link ol.events.condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {ol.interaction.DragBox}\n * @param {olx.interaction.DragZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DragZoom_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  var condition = options.condition ?\n    options.condition : _ol_events_condition_.shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  _ol_interaction_DragBox_.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\n_ol_.inherits(_ol_interaction_DragZoom_, _ol_interaction_DragBox_);\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_DragZoom_.prototype.onBoxEnd = function() {\n  var map = this.getMap();\n\n  var view = /** @type {!ol.View} */ (map.getView());\n\n  var size = /** @type {!ol.Size} */ (map.getSize());\n\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = _ol_extent_.createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(_ol_extent_.getBottomLeft(extent)),\n      map.getPixelFromCoordinate(_ol_extent_.getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    _ol_extent_.scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n      view.getResolutionForExtent(extent, size));\n\n  var center = _ol_extent_.getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: _ol_easing_.easeOut\n  });\n\n};\nexport default _ol_interaction_DragZoom_;\n"]},"metadata":{},"sourceType":"module"}
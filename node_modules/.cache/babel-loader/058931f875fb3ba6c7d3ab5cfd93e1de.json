{"ast":null,"code":"import _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_structs_LRUCache_ from '../structs/lrucache.js';\nimport _ol_transform_ from '../transform.js';\nvar _ol_render_canvas_ = {};\n/**\n * @const\n * @type {string}\n */\n\n_ol_render_canvas_.defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {ol.Color}\n */\n\n_ol_render_canvas_.defaultFillStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\n_ol_render_canvas_.defaultLineCap = 'round';\n/**\n * @const\n * @type {Array.<number>}\n */\n\n_ol_render_canvas_.defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\n_ol_render_canvas_.defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\n\n_ol_render_canvas_.defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\n_ol_render_canvas_.defaultMiterLimit = 10;\n/**\n * @const\n * @type {ol.Color}\n */\n\n_ol_render_canvas_.defaultStrokeStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\n_ol_render_canvas_.defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\n_ol_render_canvas_.defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array.<number>}\n */\n\n_ol_render_canvas_.defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\n_ol_render_canvas_.defaultLineWidth = 1;\n/**\n * @type {ol.structs.LRUCache.<HTMLCanvasElement>}\n */\n\n_ol_render_canvas_.labelCache = new _ol_structs_LRUCache_();\n/**\n * @type {!Object.<string, number>}\n */\n\n_ol_render_canvas_.checkedFonts_ = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\n_ol_render_canvas_.measureContext_ = null;\n/**\n * @type {!Object.<string, number>}\n */\n\n_ol_render_canvas_.textHeights_ = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\n_ol_render_canvas_.checkFont = function () {\n  var retries = 60;\n  var checked = _ol_render_canvas_.checkedFonts_;\n  var labelCache = _ol_render_canvas_.labelCache;\n  var font = '32px monospace';\n  var text = 'wmytzilWMYTZIL@#/&?$%10';\n  var interval, referenceWidth;\n\n  function isAvailable(fontFamily) {\n    var context = _ol_render_canvas_.getMeasureContext();\n\n    context.font = font;\n    referenceWidth = context.measureText(text).width;\n    var available = true;\n\n    if (fontFamily != 'monospace') {\n      context.font = '32px ' + fontFamily + ',monospace';\n      var width = context.measureText(text).width; // If width and referenceWidth are the same, then the 'monospace'\n      // fallback was used instead of the font we wanted, so the font is not\n      // available.\n\n      available = width != referenceWidth;\n    }\n\n    return available;\n  }\n\n  function check() {\n    var done = true;\n\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n\n          _ol_obj_.clear(_ol_render_canvas_.textHeights_); // Make sure that loaded fonts are picked up by Safari\n\n\n          _ol_render_canvas_.measureContext_ = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      window.clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var fontFamilies = _ol_css_.getFontFamilies(fontSpec);\n\n    if (!fontFamilies) {\n      return;\n    }\n\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n\n          if (interval === undefined) {\n            interval = window.setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n\n\n_ol_render_canvas_.getMeasureContext = function () {\n  var context = _ol_render_canvas_.measureContext_;\n\n  if (!context) {\n    context = _ol_render_canvas_.measureContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n  }\n\n  return context;\n};\n/**\n * @param {string} font Font to use for measuring.\n * @return {ol.Size} Measurement.\n */\n\n\n_ol_render_canvas_.measureTextHeight = function () {\n  var span;\n  var heights = _ol_render_canvas_.textHeights_;\n  return function (font) {\n    var height = heights[font];\n\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\n\n_ol_render_canvas_.measureTextWidth = function (font, text) {\n  var measureContext = _ol_render_canvas_.getMeasureContext();\n\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n\n  return measureContext.measureText(text).width;\n};\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\n\n_ol_render_canvas_.rotateAtOffset = function (context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n};\n\n_ol_render_canvas_.resetTransform_ = _ol_transform_.create();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n\n_ol_render_canvas_.drawImage = function (context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\n\nexport default _ol_render_canvas_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/render/canvas.js"],"names":["_ol_css_","_ol_dom_","_ol_obj_","_ol_structs_LRUCache_","_ol_transform_","_ol_render_canvas_","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts_","measureContext_","textHeights_","checkFont","retries","checked","font","text","interval","referenceWidth","isAvailable","fontFamily","context","getMeasureContext","measureText","width","available","check","done","clear","window","clearInterval","undefined","fontSpec","fontFamilies","getFontFamilies","i","ii","length","setInterval","createCanvasContext2D","measureTextHeight","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","measureContext","rotateAtOffset","rotation","offsetX","offsetY","translate","rotate","resetTransform_","create","drawImage","transform","opacity","image","originX","originY","w","h","x","y","scale","alpha","globalAlpha","setTransform","apply"],"mappings":"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","sourcesContent":["import _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_structs_LRUCache_ from '../structs/lrucache.js';\nimport _ol_transform_ from '../transform.js';\nvar _ol_render_canvas_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {ol.Color}\n */\n_ol_render_canvas_.defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_render_canvas_.defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_render_canvas_.defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\n_ol_render_canvas_.defaultLineWidth = 1;\n\n\n/**\n * @type {ol.structs.LRUCache.<HTMLCanvasElement>}\n */\n_ol_render_canvas_.labelCache = new _ol_structs_LRUCache_();\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.checkedFonts_ = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\n_ol_render_canvas_.measureContext_ = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\n_ol_render_canvas_.textHeights_ = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n_ol_render_canvas_.checkFont = (function() {\n  var retries = 60;\n  var checked = _ol_render_canvas_.checkedFonts_;\n  var labelCache = _ol_render_canvas_.labelCache;\n  var font = '32px monospace';\n  var text = 'wmytzilWMYTZIL@#/&?$%10';\n  var interval, referenceWidth;\n\n  function isAvailable(fontFamily) {\n    var context = _ol_render_canvas_.getMeasureContext();\n    context.font = font;\n    referenceWidth = context.measureText(text).width;\n    var available = true;\n    if (fontFamily != 'monospace') {\n      context.font = '32px ' + fontFamily + ',monospace';\n      var width = context.measureText(text).width;\n      // If width and referenceWidth are the same, then the 'monospace'\n      // fallback was used instead of the font we wanted, so the font is not\n      // available.\n      available = width != referenceWidth;\n    }\n    return available;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          _ol_obj_.clear(_ol_render_canvas_.textHeights_);\n          // Make sure that loaded fonts are picked up by Safari\n          _ol_render_canvas_.measureContext_ = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      window.clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = _ol_css_.getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = window.setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n_ol_render_canvas_.getMeasureContext = function() {\n  var context = _ol_render_canvas_.measureContext_;\n  if (!context) {\n    context = _ol_render_canvas_.measureContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n  }\n  return context;\n};\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {ol.Size} Measurement.\n */\n_ol_render_canvas_.measureTextHeight = (function() {\n  var span;\n  var heights = _ol_render_canvas_.textHeights_;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n_ol_render_canvas_.measureTextWidth = function(font, text) {\n  var measureContext = _ol_render_canvas_.getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n_ol_render_canvas_.rotateAtOffset = function(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n};\n\n\n_ol_render_canvas_.resetTransform_ = _ol_transform_.create();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n_ol_render_canvas_.drawImage = function(context,\n    transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, _ol_render_canvas_.resetTransform_);\n  }\n};\nexport default _ol_render_canvas_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_color_ from '../color.js';\n/**\n * Singleton class. Available through {@link ol.style.iconImageCache}.\n * @constructor\n */\n\nvar _ol_style_IconImageCache_ = function () {\n  /**\n   * @type {Object.<string, ol.style.IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this.cacheSize_ = 0;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this.maxCacheSize_ = 32;\n};\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {string} Cache key.\n */\n\n\n_ol_style_IconImageCache_.getKey = function (src, crossOrigin, color) {\n  var colorString = color ? _ol_color_.asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\n_ol_style_IconImageCache_.prototype.clear = function () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\n_ol_style_IconImageCache_.prototype.expire = function () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    var key, iconImage;\n\n    for (key in this.cache_) {\n      iconImage = this.cache_[key];\n\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {ol.style.IconImage} Icon image.\n */\n\n\n_ol_style_IconImageCache_.prototype.get = function (src, crossOrigin, color) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @param {ol.style.IconImage} iconImage Icon image.\n */\n\n\n_ol_style_IconImageCache_.prototype.set = function (src, crossOrigin, color, iconImage) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\n\n\n_ol_style_IconImageCache_.prototype.setSize = function (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\nexport default _ol_style_IconImageCache_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/style/iconimagecache.js"],"names":["_ol_color_","_ol_style_IconImageCache_","cache_","cacheSize_","maxCacheSize_","getKey","src","crossOrigin","color","colorString","asString","prototype","clear","expire","i","key","iconImage","hasListener","get","set","setSize","maxCacheSize"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB,GAAG,YAAW;AAEzC;AACF;AACA;AACA;AACE,OAAKC,MAAL,GAAc,EAAd;AAEA;AACF;AACA;AACA;;AACE,OAAKC,UAAL,GAAkB,CAAlB;AAEA;AACF;AACA;AACA;;AACE,OAAKC,aAAL,GAAqB,EAArB;AACD,CAnBD;AAsBA;AACA;AACA;AACA;AACA;AACA;;;AACAH,yBAAyB,CAACI,MAA1B,GAAmC,UAASC,GAAT,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AACnE,MAAIC,WAAW,GAAGD,KAAK,GAAGR,UAAU,CAACU,QAAX,CAAoBF,KAApB,CAAH,GAAgC,MAAvD;AACA,SAAOD,WAAW,GAAG,GAAd,GAAoBD,GAApB,GAA0B,GAA1B,GAAgCG,WAAvC;AACD,CAHD;AAMA;AACA;AACA;;;AACAR,yBAAyB,CAACU,SAA1B,CAAoCC,KAApC,GAA4C,YAAW;AACrD,OAAKV,MAAL,GAAc,EAAd;AACA,OAAKC,UAAL,GAAkB,CAAlB;AACD,CAHD;AAMA;AACA;AACA;;;AACAF,yBAAyB,CAACU,SAA1B,CAAoCE,MAApC,GAA6C,YAAW;AACtD,MAAI,KAAKV,UAAL,GAAkB,KAAKC,aAA3B,EAA0C;AACxC,QAAIU,CAAC,GAAG,CAAR;AACA,QAAIC,GAAJ,EAASC,SAAT;;AACA,SAAKD,GAAL,IAAY,KAAKb,MAAjB,EAAyB;AACvBc,MAAAA,SAAS,GAAG,KAAKd,MAAL,CAAYa,GAAZ,CAAZ;;AACA,UAAI,CAACD,CAAC,KAAK,CAAP,MAAc,CAAd,IAAmB,CAACE,SAAS,CAACC,WAAV,EAAxB,EAAiD;AAC/C,eAAO,KAAKf,MAAL,CAAYa,GAAZ,CAAP;AACA,UAAE,KAAKZ,UAAP;AACD;AACF;AACF;AACF,CAZD;AAeA;AACA;AACA;AACA;AACA;AACA;;;AACAF,yBAAyB,CAACU,SAA1B,CAAoCO,GAApC,GAA0C,UAASZ,GAAT,EAAcC,WAAd,EAA2BC,KAA3B,EAAkC;AAC1E,MAAIO,GAAG,GAAGd,yBAAyB,CAACI,MAA1B,CAAiCC,GAAjC,EAAsCC,WAAtC,EAAmDC,KAAnD,CAAV;;AACA,SAAOO,GAAG,IAAI,KAAKb,MAAZ,GAAqB,KAAKA,MAAL,CAAYa,GAAZ,CAArB,GAAwC,IAA/C;AACD,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACU,SAA1B,CAAoCQ,GAApC,GAA0C,UAASb,GAAT,EAAcC,WAAd,EAA2BC,KAA3B,EAAkCQ,SAAlC,EAA6C;AACrF,MAAID,GAAG,GAAGd,yBAAyB,CAACI,MAA1B,CAAiCC,GAAjC,EAAsCC,WAAtC,EAAmDC,KAAnD,CAAV;;AACA,OAAKN,MAAL,CAAYa,GAAZ,IAAmBC,SAAnB;AACA,IAAE,KAAKb,UAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,yBAAyB,CAACU,SAA1B,CAAoCS,OAApC,GAA8C,UAASC,YAAT,EAAuB;AACnE,OAAKjB,aAAL,GAAqBiB,YAArB;AACA,OAAKR,MAAL;AACD,CAHD;;AAIA,eAAeZ,yBAAf","sourcesContent":["import _ol_color_ from '../color.js';\n\n/**\n * Singleton class. Available through {@link ol.style.iconImageCache}.\n * @constructor\n */\nvar _ol_style_IconImageCache_ = function() {\n\n  /**\n   * @type {Object.<string, ol.style.IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {string} Cache key.\n */\n_ol_style_IconImageCache_.getKey = function(src, crossOrigin, color) {\n  var colorString = color ? _ol_color_.asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_style_IconImageCache_.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    var key, iconImage;\n    for (key in this.cache_) {\n      iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @return {ol.style.IconImage} Icon image.\n */\n_ol_style_IconImageCache_.prototype.get = function(src, crossOrigin, color) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.Color} color Color.\n * @param {ol.style.IconImage} iconImage Icon image.\n */\n_ol_style_IconImageCache_.prototype.set = function(src, crossOrigin, color, iconImage) {\n  var key = _ol_style_IconImageCache_.getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\n_ol_style_IconImageCache_.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default _ol_style_IconImageCache_;\n"]},"metadata":{},"sourceType":"module"}
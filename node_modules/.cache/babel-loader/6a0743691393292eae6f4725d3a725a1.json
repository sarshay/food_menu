{"ast":null,"code":"/**\n * An implementation of Google Maps' MVCArray.\n * @see https://developers.google.com/maps/documentation/javascript/reference\n */\nimport _ol_ from './index.js';\nimport _ol_AssertionError_ from './assertionerror.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_Object_ from './object.js';\nimport _ol_events_Event_ from './events/event.js';\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {ol.Object}\n * @fires ol.Collection.Event\n * @param {Array.<T>=} opt_array Array.\n * @param {olx.CollectionOptions=} opt_options Collection options.\n * @template T\n * @api\n */\n\nvar _ol_Collection_ = function (opt_array, opt_options) {\n  _ol_Object_.call(this);\n\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.unique_ = !!options.unique;\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n};\n\n_ol_.inherits(_ol_Collection_, _ol_Object_);\n/**\n * Remove all elements from the collection.\n * @api\n */\n\n\n_ol_Collection_.prototype.clear = function () {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {ol.Collection.<T>} This collection.\n * @api\n */\n\n\n_ol_Collection_.prototype.extend = function (arr) {\n  var i, ii;\n\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n\n  return this;\n};\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(this: S, T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n * @api\n */\n\n\n_ol_Collection_.prototype.forEach = function (f, opt_this) {\n  var fn = opt_this ? f.bind(opt_this) : f;\n  var array = this.array_;\n\n  for (var i = 0, ii = array.length; i < ii; ++i) {\n    fn(array[i], i, array);\n  }\n};\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\n\n\n_ol_Collection_.prototype.getArray = function () {\n  return this.array_;\n};\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\n\n\n_ol_Collection_.prototype.item = function (index) {\n  return this.array_[index];\n};\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\n\n\n_ol_Collection_.prototype.getLength = function () {\n  return (\n    /** @type {number} */\n    this.get(_ol_Collection_.Property_.LENGTH)\n  );\n};\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n\n\n_ol_Collection_.prototype.insertAt = function (index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n};\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\n\n\n_ol_Collection_.prototype.pop = function () {\n  return this.removeAt(this.getLength() - 1);\n};\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\n\n\n_ol_Collection_.prototype.push = function (elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n\n  var n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\n\n\n_ol_Collection_.prototype.remove = function (elem) {\n  var arr = this.array_;\n  var i, ii;\n\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n\n  return undefined;\n};\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\n\n\n_ol_Collection_.prototype.removeAt = function (index) {\n  var prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n  return prev;\n};\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n\n\n_ol_Collection_.prototype.setAt = function (index, elem) {\n  var n = this.getLength();\n\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n\n    var prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n    this.dispatchEvent(new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n  } else {\n    var j;\n\n    for (j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n\n    this.insertAt(index, elem);\n  }\n};\n/**\n * @private\n */\n\n\n_ol_Collection_.prototype.updateLength_ = function () {\n  this.set(_ol_Collection_.Property_.LENGTH, this.array_.length);\n};\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\n\n\n_ol_Collection_.prototype.assertUnique_ = function (elem, opt_except) {\n  for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new _ol_AssertionError_(58);\n    }\n  }\n};\n/**\n * @enum {string}\n * @private\n */\n\n\n_ol_Collection_.Property_ = {\n  LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link ol.Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.Collection.Event}\n * @param {ol.CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\n\n_ol_Collection_.Event = function (type, opt_element) {\n  _ol_events_Event_.call(this, type);\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n\n\n  this.element = opt_element;\n};\n\n_ol_.inherits(_ol_Collection_.Event, _ol_events_Event_);\n\nexport default _ol_Collection_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/collection.js"],"names":["_ol_","_ol_AssertionError_","_ol_CollectionEventType_","_ol_Object_","_ol_events_Event_","_ol_Collection_","opt_array","opt_options","call","options","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","inherits","prototype","clear","getLength","pop","extend","arr","push","forEach","f","opt_this","fn","bind","array","getArray","item","index","get","Property_","LENGTH","insertAt","elem","splice","dispatchEvent","Event","ADD","removeAt","n","remove","undefined","prev","REMOVE","setAt","j","set","opt_except","type","opt_element","element"],"mappings":"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","sourcesContent":["/**\n * An implementation of Google Maps' MVCArray.\n * @see https://developers.google.com/maps/documentation/javascript/reference\n */\n\nimport _ol_ from './index.js';\nimport _ol_AssertionError_ from './assertionerror.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_Object_ from './object.js';\nimport _ol_events_Event_ from './events/event.js';\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {ol.Object}\n * @fires ol.Collection.Event\n * @param {Array.<T>=} opt_array Array.\n * @param {olx.CollectionOptions=} opt_options Collection options.\n * @template T\n * @api\n */\nvar _ol_Collection_ = function(opt_array, opt_options) {\n\n  _ol_Object_.call(this);\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\n_ol_.inherits(_ol_Collection_, _ol_Object_);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\n_ol_Collection_.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {ol.Collection.<T>} This collection.\n * @api\n */\n_ol_Collection_.prototype.extend = function(arr) {\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(this: S, T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n * @api\n */\n_ol_Collection_.prototype.forEach = function(f, opt_this) {\n  var fn = (opt_this) ? f.bind(opt_this) : f;\n  var array = this.array_;\n  for (var i = 0, ii = array.length; i < ii; ++i) {\n    fn(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\n_ol_Collection_.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\n_ol_Collection_.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\n_ol_Collection_.prototype.getLength = function() {\n  return (\n    /** @type {number} */ this.get(_ol_Collection_.Property_.LENGTH)\n  );\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\n_ol_Collection_.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\n_ol_Collection_.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  var n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\n_ol_Collection_.prototype.remove = function(elem) {\n  var arr = this.array_;\n  var i, ii;\n  for (i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\n_ol_Collection_.prototype.removeAt = function(index) {\n  var prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(\n      new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\n_ol_Collection_.prototype.setAt = function(index, elem) {\n  var n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    var prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.REMOVE, prev));\n    this.dispatchEvent(\n        new _ol_Collection_.Event(_ol_CollectionEventType_.ADD, elem));\n  } else {\n    var j;\n    for (j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\n_ol_Collection_.prototype.updateLength_ = function() {\n  this.set(_ol_Collection_.Property_.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\n_ol_Collection_.prototype.assertUnique_ = function(elem, opt_except) {\n  for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new _ol_AssertionError_(58);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_Collection_.Property_ = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.Collection.Event}\n * @param {ol.CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\n_ol_Collection_.Event = function(type, opt_element) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n_ol_.inherits(_ol_Collection_.Event, _ol_events_Event_);\nexport default _ol_Collection_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilecoord_ from './tilecoord.js';\nvar _ol_TileUrlFunction_ = {};\n/**\n * @param {string} template Template.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n\n_ol_TileUrlFunction_.createFromTemplate = function (template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, function () {\n          var y = -tileCoord[2] - 1;\n          return y.toString();\n        }).replace(dashYRegEx, function () {\n          var z = tileCoord[0];\n          var range = tileGrid.getFullTileRange(z);\n\n          _ol_asserts_.assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n\n\n          var y = range.getHeight() + tileCoord[2];\n          return y.toString();\n        });\n      }\n    }\n  );\n};\n/**\n * @param {Array.<string>} templates Templates.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n\n\n_ol_TileUrlFunction_.createFromTemplates = function (templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = _ol_TileUrlFunction_.createFromTemplate(templates[i], tileGrid);\n  }\n\n  return _ol_TileUrlFunction_.createFromTileUrlFunctions(tileUrlFunctions);\n};\n/**\n * @param {Array.<ol.TileUrlFunctionType>} tileUrlFunctions Tile URL Functions.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n\n\n_ol_TileUrlFunction_.createFromTileUrlFunctions = function (tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = _ol_tilecoord_.hash(tileCoord);\n\n        var index = _ol_math_.modulo(h, tileUrlFunctions.length);\n\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n};\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n\n\n_ol_TileUrlFunction_.nullTileUrlFunction = function (tileCoord, pixelRatio, projection) {\n  return undefined;\n};\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\n\n\n_ol_TileUrlFunction_.expandUrl = function (url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n\n    return urls;\n  }\n\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n\n    return urls;\n  }\n\n  urls.push(url);\n  return urls;\n};\n\nexport default _ol_TileUrlFunction_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/tileurlfunction.js"],"names":["_ol_asserts_","_ol_math_","_ol_tilecoord_","_ol_TileUrlFunction_","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","pixelRatio","projection","undefined","replace","toString","y","z","range","getFullTileRange","assert","getHeight","createFromTemplates","templates","len","length","tileUrlFunctions","Array","i","createFromTileUrlFunctions","h","hash","index","modulo","nullTileUrlFunction","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","String","fromCharCode","stop","parseInt"],"mappings":"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","sourcesContent":["import _ol_asserts_ from './asserts.js';\nimport _ol_math_ from './math.js';\nimport _ol_tilecoord_ from './tilecoord.js';\nvar _ol_TileUrlFunction_ = {};\n\n\n/**\n * @param {string} template Template.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplate = function(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n            .replace(xRegEx, tileCoord[1].toString())\n            .replace(yRegEx, function() {\n              var y = -tileCoord[2] - 1;\n              return y.toString();\n            })\n            .replace(dashYRegEx, function() {\n              var z = tileCoord[0];\n              var range = tileGrid.getFullTileRange(z);\n              _ol_asserts_.assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n              var y = range.getHeight() + tileCoord[2];\n              return y.toString();\n            });\n      }\n    }\n  );\n};\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTemplates = function(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = _ol_TileUrlFunction_.createFromTemplate(\n        templates[i], tileGrid);\n  }\n  return _ol_TileUrlFunction_.createFromTileUrlFunctions(tileUrlFunctions);\n};\n\n\n/**\n * @param {Array.<ol.TileUrlFunctionType>} tileUrlFunctions Tile URL Functions.\n * @return {ol.TileUrlFunctionType} Tile URL function.\n */\n_ol_TileUrlFunction_.createFromTileUrlFunctions = function(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {ol.TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {ol.proj.Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = _ol_tilecoord_.hash(tileCoord);\n        var index = _ol_math_.modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n_ol_TileUrlFunction_.nullTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n  return undefined;\n};\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\n_ol_TileUrlFunction_.expandUrl = function(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n};\nexport default _ol_TileUrlFunction_;\n"]},"metadata":{},"sourceType":"module"}
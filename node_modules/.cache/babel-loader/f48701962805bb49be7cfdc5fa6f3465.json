{"ast":null,"code":"// FIXME handle date line wrap\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_obj_ from '../obj.js';\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.AttributionOptions=} opt_options Attribution options.\n * @api\n */\n\nvar _ol_control_Attribution_ = function (opt_options) {\n  var options = opt_options ? opt_options : {};\n  /**\n   * @private\n   * @type {Element}\n   */\n\n  this.ulElement_ = document.createElement('UL');\n  /**\n   * @private\n   * @type {Element}\n   */\n\n  this.logoLi_ = document.createElement('LI');\n  this.ulElement_.appendChild(this.logoLi_);\n  this.logoLi_.style.display = 'none';\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  var className = options.className !== undefined ? options.className : 'ol-attribution';\n  var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n  var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  var label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  var activeLabel = this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n  var button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK, this.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' + _ol_css_.CLASS_CONTROL + (this.collapsed_ && this.collapsible_ ? ' ol-collapsed' : '') + (this.collapsible_ ? '' : ' ol-uncollapsible');\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n  var render = options.render ? options.render : _ol_control_Attribution_.render;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n\n\n  this.renderedAttributions_ = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.renderedVisible_ = true;\n  /**\n   * @private\n   * @type {Object.<string, Element>}\n   */\n\n  this.logoElements_ = {};\n};\n\n_ol_.inherits(_ol_control_Attribution_, _ol_control_Control_);\n/**\n * Get a list of visible attributions.\n * @param {olx.FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\n\n\n_ol_control_Attribution_.prototype.getSourceAttributions_ = function (frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {Object.<string, boolean>}\n   */\n  var lookup = {};\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n\n  var visibleAttributions = [];\n  var layerStatesArray = frameState.layerStatesArray;\n  var resolution = frameState.viewState.resolution;\n\n  for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    var layerState = layerStatesArray[i];\n\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    var source = layerState.layer.getSource();\n\n    if (!source) {\n      continue;\n    }\n\n    var attributionGetter = source.getAttributions2();\n\n    if (!attributionGetter) {\n      continue;\n    }\n\n    var attributions = attributionGetter(frameState);\n\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (var j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n\n  return visibleAttributions;\n};\n/**\n * Update the attribution element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Attribution}\n * @api\n */\n\n\n_ol_control_Attribution_.render = function (mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n};\n/**\n * @private\n * @param {?olx.FrameState} frameState Frame state.\n */\n\n\n_ol_control_Attribution_.prototype.updateElement_ = function (frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n\n    return;\n  }\n\n  var attributions = this.getSourceAttributions_(frameState);\n\n  if (_ol_array_.equals(attributions, this.renderedAttributions_)) {\n    return;\n  } // remove everything but the logo\n\n\n  while (this.ulElement_.lastChild !== this.logoLi_) {\n    this.ulElement_.removeChild(this.ulElement_.lastChild);\n  } // append the attributions\n\n\n  for (var i = 0, ii = attributions.length; i < ii; ++i) {\n    var element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  if (attributions.length === 0 && this.renderedAttributions_.length > 0) {\n    this.element.classList.add('ol-logo-only');\n  } else if (this.renderedAttributions_.length === 0 && attributions.length > 0) {\n    this.element.classList.remove('ol-logo-only');\n  }\n\n  var visible = attributions.length > 0 || !_ol_obj_.isEmpty(frameState.logos);\n\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  this.renderedAttributions_ = attributions;\n  this.insertLogos_(frameState);\n};\n/**\n * @param {?olx.FrameState} frameState Frame state.\n * @private\n */\n\n\n_ol_control_Attribution_.prototype.insertLogos_ = function (frameState) {\n  var logo;\n  var logos = frameState.logos;\n  var logoElements = this.logoElements_;\n\n  for (logo in logoElements) {\n    if (!(logo in logos)) {\n      _ol_dom_.removeNode(logoElements[logo]);\n\n      delete logoElements[logo];\n    }\n  }\n\n  var image, logoElement, logoKey;\n\n  for (logoKey in logos) {\n    var logoValue = logos[logoKey];\n\n    if (logoValue instanceof HTMLElement) {\n      this.logoLi_.appendChild(logoValue);\n      logoElements[logoKey] = logoValue;\n    }\n\n    if (!(logoKey in logoElements)) {\n      image = new Image();\n      image.src = logoKey;\n\n      if (logoValue === '') {\n        logoElement = image;\n      } else {\n        logoElement = document.createElement('a');\n        logoElement.href = logoValue;\n        logoElement.appendChild(image);\n      }\n\n      this.logoLi_.appendChild(logoElement);\n      logoElements[logoKey] = logoElement;\n    }\n  }\n\n  this.logoLi_.style.display = !_ol_obj_.isEmpty(logos) ? '' : 'none';\n};\n/**\n * @param {Event} event The event to handle\n * @private\n */\n\n\n_ol_control_Attribution_.prototype.handleClick_ = function (event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n/**\n * @private\n */\n\n\n_ol_control_Attribution_.prototype.handleToggle_ = function () {\n  this.element.classList.toggle('ol-collapsed');\n\n  if (this.collapsed_) {\n    _ol_dom_.replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    _ol_dom_.replaceNode(this.label_, this.collapseLabel_);\n  }\n\n  this.collapsed_ = !this.collapsed_;\n};\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\n\n\n_ol_control_Attribution_.prototype.getCollapsible = function () {\n  return this.collapsible_;\n};\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\n\n\n_ol_control_Attribution_.prototype.setCollapsible = function (collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\n\n\n_ol_control_Attribution_.prototype.setCollapsed = function (collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n\n  this.handleToggle_();\n};\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\n\n\n_ol_control_Attribution_.prototype.getCollapsed = function () {\n  return this.collapsed_;\n};\n\nexport default _ol_control_Attribution_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/control/attribution.js"],"names":["_ol_","_ol_array_","_ol_control_Control_","_ol_css_","_ol_dom_","_ol_events_","_ol_events_EventType_","_ol_layer_Layer_","_ol_obj_","_ol_control_Attribution_","opt_options","options","ulElement_","document","createElement","logoLi_","appendChild","style","display","collapsed_","collapsed","undefined","collapsible_","collapsible","className","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","listen","CLICK","handleClick_","cssClasses","CLASS_UNSELECTABLE","CLASS_CONTROL","element","render","call","target","renderedAttributions_","renderedVisible_","logoElements_","inherits","prototype","getSourceAttributions_","frameState","lookup","visibleAttributions","layerStatesArray","resolution","viewState","i","ii","length","layerState","visibleAtResolution","source","layer","getSource","attributionGetter","getAttributions2","attributions","Array","isArray","j","jj","push","mapEvent","updateElement_","equals","lastChild","removeChild","innerHTML","classList","add","remove","visible","isEmpty","logos","insertLogos_","logo","logoElements","removeNode","image","logoElement","logoKey","logoValue","HTMLElement","Image","src","href","event","preventDefault","handleToggle_","toggle","replaceNode","getCollapsible","setCollapsible","setCollapsed","getCollapsed"],"mappings":"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","sourcesContent":["// FIXME handle date line wrap\n\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_css_ from '../css.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.AttributionOptions=} opt_options Attribution options.\n * @api\n */\nvar _ol_control_Attribution_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.logoLi_ = document.createElement('LI');\n\n  this.ulElement_.appendChild(this.logoLi_);\n  this.logoLi_.style.display = 'none';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  var label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  var button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  _ol_events_.listen(button, _ol_events_EventType_.CLICK, this.handleClick_, this);\n\n  var cssClasses = className + ' ' + _ol_css_.CLASS_UNSELECTABLE + ' ' +\n      _ol_css_.CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ol-collapsed' : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  var element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  var render = options.render ? options.render : _ol_control_Attribution_.render;\n\n  _ol_control_Control_.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {Object.<string, Element>}\n   */\n  this.logoElements_ = {};\n\n};\n\n_ol_.inherits(_ol_control_Attribution_, _ol_control_Control_);\n\n\n/**\n * Get a list of visible attributions.\n * @param {olx.FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\n_ol_control_Attribution_.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {Object.<string, boolean>}\n   */\n  var lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  var visibleAttributions = [];\n\n  var layerStatesArray = frameState.layerStatesArray;\n  var resolution = frameState.viewState.resolution;\n  for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    var layerState = layerStatesArray[i];\n    if (!_ol_layer_Layer_.visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    var source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    var attributionGetter = source.getAttributions2();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    var attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (var j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.Attribution}\n * @api\n */\n_ol_control_Attribution_.render = function(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n};\n\n\n/**\n * @private\n * @param {?olx.FrameState} frameState Frame state.\n */\n_ol_control_Attribution_.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var attributions = this.getSourceAttributions_(frameState);\n  if (_ol_array_.equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  // remove everything but the logo\n  while (this.ulElement_.lastChild !== this.logoLi_) {\n    this.ulElement_.removeChild(this.ulElement_.lastChild);\n  }\n\n  // append the attributions\n  for (var i = 0, ii = attributions.length; i < ii; ++i) {\n    var element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n\n  if (attributions.length === 0 && this.renderedAttributions_.length > 0) {\n    this.element.classList.add('ol-logo-only');\n  } else if (this.renderedAttributions_.length === 0 && attributions.length > 0) {\n    this.element.classList.remove('ol-logo-only');\n  }\n\n  var visible = attributions.length > 0 || !_ol_obj_.isEmpty(frameState.logos);\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  this.renderedAttributions_ = attributions;\n  this.insertLogos_(frameState);\n};\n\n\n/**\n * @param {?olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_control_Attribution_.prototype.insertLogos_ = function(frameState) {\n\n  var logo;\n  var logos = frameState.logos;\n  var logoElements = this.logoElements_;\n\n  for (logo in logoElements) {\n    if (!(logo in logos)) {\n      _ol_dom_.removeNode(logoElements[logo]);\n      delete logoElements[logo];\n    }\n  }\n\n  var image, logoElement, logoKey;\n  for (logoKey in logos) {\n    var logoValue = logos[logoKey];\n    if (logoValue instanceof HTMLElement) {\n      this.logoLi_.appendChild(logoValue);\n      logoElements[logoKey] = logoValue;\n    }\n    if (!(logoKey in logoElements)) {\n      image = new Image();\n      image.src = logoKey;\n      if (logoValue === '') {\n        logoElement = image;\n      } else {\n        logoElement = document.createElement('a');\n        logoElement.href = logoValue;\n        logoElement.appendChild(image);\n      }\n      this.logoLi_.appendChild(logoElement);\n      logoElements[logoKey] = logoElement;\n    }\n  }\n\n  this.logoLi_.style.display = !_ol_obj_.isEmpty(logos) ? '' : 'none';\n\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\n_ol_control_Attribution_.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\n_ol_control_Attribution_.prototype.handleToggle_ = function() {\n  this.element.classList.toggle('ol-collapsed');\n  if (this.collapsed_) {\n    _ol_dom_.replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    _ol_dom_.replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\n_ol_control_Attribution_.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default _ol_control_Attribution_;\n"]},"metadata":{},"sourceType":"module"}
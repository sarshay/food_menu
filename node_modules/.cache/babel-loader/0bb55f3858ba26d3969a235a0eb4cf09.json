{"ast":null,"code":"import _ol_geom_flat_area_ from '../flat/area.js';\nvar _ol_geom_flat_topology_ = {};\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\n\n_ol_geom_flat_topology_.lineStringIsClosed = function (flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] && flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!_ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n  }\n\n  return false;\n};\n\nexport default _ol_geom_flat_topology_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/geom/flat/topology.js"],"names":["_ol_geom_flat_area_","_ol_geom_flat_topology_","lineStringIsClosed","flatCoordinates","offset","end","stride","lastCoord","linearRing"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,iBAAhC;AACA,IAAIC,uBAAuB,GAAG,EAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,uBAAuB,CAACC,kBAAxB,GAA6C,UAASC,eAAT,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAC1F,MAAIC,SAAS,GAAGF,GAAG,GAAGC,MAAtB;;AACA,MAAIH,eAAe,CAACC,MAAD,CAAf,KAA4BD,eAAe,CAACI,SAAD,CAA3C,IACAJ,eAAe,CAACC,MAAM,GAAG,CAAV,CAAf,KAAgCD,eAAe,CAACI,SAAS,GAAG,CAAb,CAD/C,IACkE,CAACF,GAAG,GAAGD,MAAP,IAAiBE,MAAjB,GAA0B,CADhG,EACmG;AACjG,WAAO,CAAC,CAACN,mBAAmB,CAACQ,UAApB,CAA+BL,eAA/B,EAAgDC,MAAhD,EAAwDC,GAAxD,EAA6DC,MAA7D,CAAT;AACD;;AACD,SAAO,KAAP;AACD,CAPD;;AAQA,eAAeL,uBAAf","sourcesContent":["import _ol_geom_flat_area_ from '../flat/area.js';\nvar _ol_geom_flat_topology_ = {};\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\n_ol_geom_flat_topology_.lineStringIsClosed = function(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!_ol_geom_flat_area_.linearRing(flatCoordinates, offset, end, stride);\n  }\n  return false;\n};\nexport default _ol_geom_flat_topology_;\n"]},"metadata":{},"sourceType":"module"}
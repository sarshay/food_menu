{"ast":null,"code":"// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol.geom.flat.transform.transform2D?\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../../geom/simplegeometry.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_transform_ from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link ol.render.VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link ol.render.Event} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Extent} extent Extent.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\n\nvar _ol_render_canvas_Immediate_ = function (context, pixelRatio, extent, transform, viewRotation) {\n  _ol_render_VectorContext_.call(this);\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n\n\n  this.context_ = context;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.pixelRatio_ = pixelRatio;\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n\n  this.extent_ = extent;\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n  this.transform_ = transform;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.viewRotation_ = viewRotation;\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n\n  this.contextFillState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n\n  this.contextStrokeState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n\n  this.contextTextState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n\n  this.fillState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n\n  this.strokeState_ = null;\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n\n  this.image_ = null;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageAnchorX_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageAnchorY_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageHeight_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageOpacity_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageOriginX_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageOriginY_ = 0;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.imageRotateWithView_ = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageRotation_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageScale_ = 0;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.imageSnapToPixel_ = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.imageWidth_ = 0;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this.text_ = '';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.textOffsetX_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.textOffsetY_ = 0;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.textRotateWithView_ = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.textRotation_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.textScale_ = 0;\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n\n  this.textFillState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n\n  this.textStrokeState_ = null;\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n\n  this.textState_ = null;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this.pixelCoordinates_ = [];\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n  this.tmpLocalTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_Immediate_, _ol_render_VectorContext_);\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n\n  var context = this.context_;\n  var localTransform = this.tmpLocalTransform_;\n  var alpha = context.globalAlpha;\n\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n\n  var rotation = this.imageRotation_;\n\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n\n  var i, ii;\n\n  for (i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    var x = pixelCoordinates[i] - this.imageAnchorX_;\n    var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      var centerX = x + this.imageAnchorX_;\n      var centerY = y + this.imageAnchorY_;\n\n      _ol_transform_.compose(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n\n      context.setTransform.apply(context, localTransform);\n    }\n\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n  }\n\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n\n  this.setContextTextState_(this.textState_);\n\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n\n  var context = this.context_;\n  var rotation = this.textRotation_;\n\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n\n  for (; offset < end; offset += stride) {\n    var x = pixelCoordinates[offset] + this.textOffsetX_;\n    var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n\n    if (rotation !== 0 || this.textScale_ != 1) {\n      var localTransform = _ol_transform_.compose(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n\n      context.setTransform.apply(context, localTransform);\n    }\n\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\n\n\n_ol_render_canvas_Immediate_.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n  var context = this.context_;\n\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  var length = pixelCoordinates.length;\n\n  if (close) {\n    length -= 2;\n  }\n\n  for (var i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n\n  if (close) {\n    context.closePath();\n  }\n\n  return end;\n};\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n  var i, ii;\n\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n\n  return offset;\n};\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {ol.geom.Circle} geometry Circle geometry.\n * @override\n * @api\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawCircle = function (geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n\n    var pixelCoordinates = _ol_geom_SimpleGeometry_.transform2D(geometry, this.transform_, this.pixelCoordinates_);\n\n    var dx = pixelCoordinates[2] - pixelCoordinates[0];\n    var dy = pixelCoordinates[3] - pixelCoordinates[1];\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    var context = this.context_;\n    context.beginPath();\n    context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n\n    if (this.fillState_) {\n      context.fill();\n    }\n\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setStyle = function (style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.canvas.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawGeometry = function (geometry) {\n  var type = geometry.getType();\n\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(\n      /** @type {ol.geom.Point} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(\n      /** @type {ol.geom.LineString} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(\n      /** @type {ol.geom.Polygon} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(\n      /** @type {ol.geom.MultiPoint} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(\n      /** @type {ol.geom.MultiLineString} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(\n      /** @type {ol.geom.MultiPolygon} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(\n      /** @type {ol.geom.GeometryCollection} */\n      geometry);\n      break;\n\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(\n      /** @type {ol.geom.Circle} */\n      geometry);\n      break;\n\n    default:\n  }\n};\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link ol.layer.Vector} instead.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @override\n * @api\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawFeature = function (feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n\n  if (!geometry || !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {ol.geom.GeometryCollection} geometry Geometry collection.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawGeometryCollection = function (geometry) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Point|ol.render.Feature} geometry Point geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawPoint = function (geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry MultiPoint geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawMultiPoint = function (geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.LineString|ol.render.Feature} geometry LineString geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawLineString = function (geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n    context.stroke();\n  }\n\n  if (this.text_ !== '') {\n    var flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry MultiLineString\n *     geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawMultiLineString = function (geometry) {\n  var geometryExtent = geometry.getExtent();\n\n  if (!_ol_extent_.intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var offset = 0;\n    var ends = geometry.getEnds();\n    var stride = geometry.getStride();\n    context.beginPath();\n    var i, ii;\n\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n\n    context.stroke();\n  }\n\n  if (this.text_ !== '') {\n    var flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Polygon geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawPolygon = function (geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n\n    var context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, geometry.getEnds(), geometry.getStride());\n\n    if (this.fillState_) {\n      context.fill();\n    }\n\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n\n  if (this.text_ !== '') {\n    var flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.drawMultiPolygon = function (geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n\n    var context = this.context_;\n    var flatCoordinates = geometry.getOrientedFlatCoordinates();\n    var offset = 0;\n    var endss = geometry.getEndss();\n    var stride = geometry.getStride();\n    var i, ii;\n    context.beginPath();\n\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n\n    if (this.fillState_) {\n      context.fill();\n    }\n\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n\n  if (this.text_ !== '') {\n    var flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n/**\n * @param {ol.CanvasFillState} fillState Fill state.\n * @private\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setContextFillState_ = function (fillState) {\n  var context = this.context_;\n  var contextFillState = this.contextFillState_;\n\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n/**\n * @param {ol.CanvasStrokeState} strokeState Stroke state.\n * @private\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setContextStrokeState_ = function (strokeState) {\n  var context = this.context_;\n  var contextStrokeState = this.contextStrokeState_;\n\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      if (!_ol_array_.equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit = strokeState.miterLimit;\n    }\n\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle = strokeState.strokeStyle;\n    }\n  }\n};\n/**\n * @param {ol.CanvasTextState} textState Text state.\n * @private\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setContextTextState_ = function (textState) {\n  var context = this.context_;\n  var contextTextState = this.contextTextState_;\n  var textAlign = textState.textAlign ? textState.textAlign : _ol_render_canvas_.defaultTextAlign;\n\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = textAlign;\n    }\n\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline = textState.textBaseline;\n    }\n  }\n};\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    var fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: _ol_colorlike_.asColorLike(fillStyleColor ? fillStyleColor : _ol_render_canvas_.defaultFillStyle)\n    };\n  }\n\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    var strokeStyleColor = strokeStyle.getColor();\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    var strokeStyleWidth = strokeStyle.getWidth();\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n      lineDash: strokeStyleLineDash ? strokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ? strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ? strokeStyleWidth : _ol_render_canvas_.defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n      strokeStyle: _ol_colorlike_.asColorLike(strokeStyleColor ? strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n    };\n  }\n};\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {ol.style.Image} imageStyle Image style.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setImageStyle = function (imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    var imageAnchor = imageStyle.getAnchor(); // FIXME pixel ratio\n\n    var imageImage = imageStyle.getImage(1);\n    var imageOrigin = imageStyle.getOrigin();\n    var imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {ol.style.Text} textStyle Text style.\n * @override\n */\n\n\n_ol_render_canvas_Immediate_.prototype.setTextStyle = function (textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    var textFillStyle = textStyle.getFill();\n\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: _ol_colorlike_.asColorLike(textFillStyleColor ? textFillStyleColor : _ol_render_canvas_.defaultFillStyle)\n      };\n    }\n\n    var textStrokeStyle = textStyle.getStroke();\n\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      var textStrokeStyleWidth = textStrokeStyle.getWidth();\n      var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n        lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : _ol_render_canvas_.defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n        strokeStyle: _ol_colorlike_.asColorLike(textStrokeStyleColor ? textStrokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n      };\n    }\n\n    var textFont = textStyle.getFont();\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    var textScale = textStyle.getScale();\n    var textText = textStyle.getText();\n    var textTextAlign = textStyle.getTextAlign();\n    var textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ? textFont : _ol_render_canvas_.defaultFont,\n      textAlign: textTextAlign !== undefined ? textTextAlign : _ol_render_canvas_.defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ? textTextBaseline : _ol_render_canvas_.defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n    this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ? textScale : 1);\n  }\n};\n\nexport default _ol_render_canvas_Immediate_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/render/canvas/immediate.js"],"names":["_ol_","_ol_array_","_ol_colorlike_","_ol_extent_","_ol_geom_GeometryType_","_ol_geom_SimpleGeometry_","_ol_geom_flat_transform_","_ol_has_","_ol_render_VectorContext_","_ol_render_canvas_","_ol_transform_","_ol_render_canvas_Immediate_","context","pixelRatio","extent","transform","viewRotation","call","context_","pixelRatio_","extent_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","create","inherits","prototype","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","transform2D","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","Math","round","centerX","centerY","compose","setTransform","apply","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","intersects","getExtent","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","type","getType","POINT","drawPoint","LINE_STRING","drawLineString","POLYGON","drawPolygon","MULTI_POINT","drawMultiPoint","MULTI_LINE_STRING","drawMultiLineString","MULTI_POLYGON","drawMultiPolygon","GEOMETRY_COLLECTION","drawGeometryCollection","CIRCLE","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","CANVAS_LINE_DASH","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","equals","textState","contextTextState","textAlign","defaultTextAlign","font","textBaseline","fillStyleColor","getColor","asColorLike","defaultFillStyle","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","imageStyle","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getSize","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","defaultFont","defaultTextBaseline"],"mappings":"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","sourcesContent":["// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol.geom.flat.transform.transform2D?\n\nimport _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_colorlike_ from '../../colorlike.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_GeometryType_ from '../../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../../geom/simplegeometry.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_has_ from '../../has.js';\nimport _ol_render_VectorContext_ from '../vectorcontext.js';\nimport _ol_render_canvas_ from '../canvas.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link ol.render.VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link ol.render.Event} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {ol.render.VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.Extent} extent Extent.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nvar _ol_render_canvas_Immediate_ = function(context, pixelRatio, extent, transform, viewRotation) {\n  _ol_render_VectorContext_.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?ol.CanvasFillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasStrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?ol.CanvasTextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpLocalTransform_ = _ol_transform_.create();\n\n};\n\n_ol_.inherits(_ol_render_canvas_Immediate_, _ol_render_VectorContext_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var localTransform = this.tmpLocalTransform_;\n  var alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  var rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  var i, ii;\n  for (i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    var x = pixelCoordinates[i] - this.imageAnchorX_;\n    var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      var centerX = x + this.imageAnchorX_;\n      var centerY = y + this.imageAnchorY_;\n      _ol_transform_.compose(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  var context = this.context_;\n  var rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    var x = pixelCoordinates[offset] + this.textOffsetX_;\n    var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      var localTransform = _ol_transform_.compose(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\n_ol_render_canvas_Immediate_.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  var context = this.context_;\n  var pixelCoordinates = _ol_geom_flat_transform_.transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  var length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (var i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\n_ol_render_canvas_Immediate_.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(\n        flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {ol.geom.Circle} geometry Circle geometry.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawCircle = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var pixelCoordinates = _ol_geom_SimpleGeometry_.transform2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n    var dx = pixelCoordinates[2] - pixelCoordinates[0];\n    var dy = pixelCoordinates[3] - pixelCoordinates[1];\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    var context = this.context_;\n    context.beginPath();\n    context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {ol.style.Style} style The rendering style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol.render.canvas.Immediate#setStyle} first to set the rendering style.\n *\n * @param {ol.geom.Geometry|ol.render.Feature} geometry The geometry to render.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometry = function(geometry) {\n  var type = geometry.getType();\n  switch (type) {\n    case _ol_geom_GeometryType_.POINT:\n      this.drawPoint(/** @type {ol.geom.Point} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.LINE_STRING:\n      this.drawLineString(/** @type {ol.geom.LineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.POLYGON:\n      this.drawPolygon(/** @type {ol.geom.Polygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POINT:\n      this.drawMultiPoint(/** @type {ol.geom.MultiPoint} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {ol.geom.MultiLineString} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {ol.geom.MultiPolygon} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {ol.geom.GeometryCollection} */ (geometry));\n      break;\n    case _ol_geom_GeometryType_.CIRCLE:\n      this.drawCircle(/** @type {ol.geom.Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link ol.layer.Vector} instead.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.style.Style} style Style.\n * @override\n * @api\n */\n_ol_render_canvas_Immediate_.prototype.drawFeature = function(feature, style) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry ||\n      !_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {ol.geom.GeometryCollection} geometry Geometry collection.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawGeometryCollection = function(geometry) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Point|ol.render.Feature} geometry Point geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {ol.geom.MultiPoint|ol.render.Feature} geometry MultiPoint geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPoint = function(geometry) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.LineString|ol.render.Feature} geometry LineString geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawLineString = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {ol.geom.MultiLineString|ol.render.Feature} geometry MultiLineString\n *     geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiLineString = function(geometry) {\n  var geometryExtent = geometry.getExtent();\n  if (!_ol_extent_.intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    var context = this.context_;\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var offset = 0;\n    var ends = geometry.getEnds();\n    var stride = geometry.getStride();\n    context.beginPath();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n          flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    var flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {ol.geom.Polygon|ol.render.Feature} geometry Polygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.drawMultiPolygon = function(geometry) {\n  if (!_ol_extent_.intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    var context = this.context_;\n    var flatCoordinates = geometry.getOrientedFlatCoordinates();\n    var offset = 0;\n    var endss = geometry.getEndss();\n    var stride = geometry.getStride();\n    var i, ii;\n    context.beginPath();\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    var flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {ol.CanvasFillState} fillState Fill state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextFillState_ = function(fillState) {\n  var context = this.context_;\n  var contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasStrokeState} strokeState Stroke state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextStrokeState_ = function(strokeState) {\n  var context = this.context_;\n  var contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (_ol_has_.CANVAS_LINE_DASH) {\n      if (!_ol_array_.equals(\n          contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {ol.CanvasTextState} textState Text state.\n * @private\n */\n_ol_render_canvas_Immediate_.prototype.setContextTextState_ = function(textState) {\n  var context = this.context_;\n  var contextTextState = this.contextTextState_;\n  var textAlign = textState.textAlign ?\n    textState.textAlign : _ol_render_canvas_.defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    var fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: _ol_colorlike_.asColorLike(fillStyleColor ?\n        fillStyleColor : _ol_render_canvas_.defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    var strokeStyleColor = strokeStyle.getColor();\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    var strokeStyleWidth = strokeStyle.getWidth();\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : _ol_render_canvas_.defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n      strokeStyle: _ol_colorlike_.asColorLike(strokeStyleColor ?\n        strokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {ol.style.Image} imageStyle Image style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    var imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    var imageImage = imageStyle.getImage(1);\n    var imageOrigin = imageStyle.getOrigin();\n    var imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {ol.style.Text} textStyle Text style.\n * @override\n */\n_ol_render_canvas_Immediate_.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    var textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      var textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: _ol_colorlike_.asColorLike(textFillStyleColor ?\n          textFillStyleColor : _ol_render_canvas_.defaultFillStyle)\n      };\n    }\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      var textStrokeStyleColor = textStrokeStyle.getColor();\n      var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      var textStrokeStyleWidth = textStrokeStyle.getWidth();\n      var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : _ol_render_canvas_.defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : _ol_render_canvas_.defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : _ol_render_canvas_.defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : _ol_render_canvas_.defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : _ol_render_canvas_.defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : _ol_render_canvas_.defaultMiterLimit,\n        strokeStyle: _ol_colorlike_.asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : _ol_render_canvas_.defaultStrokeStyle)\n      };\n    }\n    var textFont = textStyle.getFont();\n    var textOffsetX = textStyle.getOffsetX();\n    var textOffsetY = textStyle.getOffsetY();\n    var textRotateWithView = textStyle.getRotateWithView();\n    var textRotation = textStyle.getRotation();\n    var textScale = textStyle.getScale();\n    var textText = textStyle.getText();\n    var textTextAlign = textStyle.getTextAlign();\n    var textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : _ol_render_canvas_.defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : _ol_render_canvas_.defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : _ol_render_canvas_.defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default _ol_render_canvas_Immediate_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\food_menu\\\\src\\\\map\\\\map.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'; // import ReactDOM from 'react-dom';\n\nimport 'ol/ol.css';\nimport Map from \"ol/Map.js\";\nimport View from \"ol/View.js\";\nimport Overlay from \"ol/Overlay.js\";\nimport LayerTile from \"ol/layer/Tile.js\";\nimport SourceOSM from \"ol/source/OSM.js\";\nimport { fromLonLat } from 'ol/proj'; // import './MapExample.css';\n// const sittwe = fromLonLat( [92.8324102,20.1598002]);\n// const yangon = fromLonLat( [96.1735, 16.8409]);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyMap extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = /*#__PURE__*/React.createRef();\n    this.state = {\n      center: [0, 0],\n      zoom: 1\n    };\n    this.map = new Map({\n      target: null,\n      // set this in componentDidMount\n      layers: [new LayerTile({\n        source: new SourceOSM({\n          attributionsCollapsible: false,\n          // url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n          maxZoom: 17\n        })\n      })],\n      view: new View({\n        center: this.state.center,\n        zoom: this.state.zoom\n      })\n    });\n  }\n\n  updateMap(location, zoom) {\n    this.map.setTarget(\"map\");\n    this.setState({\n      center: location,\n      zoom: zoom\n    });\n    const overlay = new Overlay({\n      position: location,\n      // element: ReactDOM.findDOMNode(this).querySelector('#overlay'),\n      positioning: 'center-center',\n      stopEvent: false\n    });\n    this.map.addOverlay(overlay);\n  }\n\n  componentDidMount() {\n    this.updateMap(fromLonLat(this.props.location), this.props.zoom);\n  }\n\n  componentWillUnmount() {\n    this.updateMap(fromLonLat(this.props.location), this.props.zoom);\n  }\n\n  refresh() {\n    this.map.getView().setCenter(this.state.center);\n    this.map.getView().setZoom(this.state.zoom);\n  }\n\n  render() {\n    this.refresh();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        className: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-circle\",\n        id: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n    /* <button onClick={e => this.updateMap(sittwe,10)}>{this.props.location}sittwe</button>\r\n    <button onClick={e => this.updateMap(yangon,10)}>yangon</button>\r\n    <button onClick={e => this.updateMap(minbyar,14)}>minbyar</button> */\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/src/map/map.js"],"names":["React","Component","Link","Map","View","Overlay","LayerTile","SourceOSM","fromLonLat","MyMap","constructor","props","wrapper","createRef","state","center","zoom","map","target","layers","source","attributionsCollapsible","maxZoom","view","updateMap","location","setTarget","setState","overlay","position","positioning","stopEvent","addOverlay","componentDidMount","componentWillUnmount","refresh","getView","setCenter","setZoom","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n// import ReactDOM from 'react-dom';\r\nimport 'ol/ol.css';\r\nimport Map from \"ol/Map.js\";\r\nimport View from \"ol/View.js\";\r\nimport Overlay from \"ol/Overlay.js\";\r\nimport LayerTile from \"ol/layer/Tile.js\";\r\nimport SourceOSM from \"ol/source/OSM.js\";\r\nimport {fromLonLat} from 'ol/proj';\r\n// import './MapExample.css';\r\n\r\n// const sittwe = fromLonLat( [92.8324102,20.1598002]);\r\n// const yangon = fromLonLat( [96.1735, 16.8409]);\r\n\r\n\r\n\r\nexport default class MyMap extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.wrapper = React.createRef();\r\n    this.state = { \r\n        center: [0,0],\r\n        zoom: 1\r\n    };\r\n\r\n    this.map = new Map({\r\n      target: null, // set this in componentDidMount\r\n      layers: [\r\n        new LayerTile({\r\n          source: new SourceOSM({\r\n            attributionsCollapsible: false,\r\n            // url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n            maxZoom: 17\r\n          })\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom\r\n      })\r\n    });\r\n  }\r\n\r\n  updateMap(location,zoom){\r\n    this.map.setTarget(\"map\");\r\n    this.setState({ center: location, zoom: zoom });\r\n    const overlay = new Overlay({\r\n      position: location,\r\n      // element: ReactDOM.findDOMNode(this).querySelector('#overlay'),\r\n      positioning: 'center-center',\r\n      stopEvent: false\r\n    });\r\n    this.map.addOverlay(overlay);\r\n  }\r\n  componentDidMount() {\r\n    this.updateMap(fromLonLat (this.props.location),this.props.zoom)\r\n  }\r\n  componentWillUnmount() {\r\n    this.updateMap(fromLonLat (this.props.location),this.props.zoom)\r\n  }\r\n  refresh() {\r\n    this.map.getView().setCenter(this.state.center);\r\n    this.map.getView().setZoom(this.state.zoom);\r\n  }\r\n  render() {\r\n    this.refresh();\r\n    return (\r\n        <div ref={this.wrapper}>\r\n            <div id=\"map\" className=\"map\"/>\r\n            <div className=\"blue-circle\" id=\"overlay\">\r\n              <div>\r\n                {/* <b id='title'>{this.props.title}</b> */}\r\n                {/* <div id='message'>{this.props.message}</div> */}\r\n                {/* <Link to=\"#\">{this.props.link}</Link> */}\r\n                hello\r\n              </div>\r\n            </div>\r\n        </div>\r\n        /* <button onClick={e => this.updateMap(sittwe,10)}>{this.props.location}sittwe</button>\r\n        <button onClick={e => this.updateMap(yangon,10)}>yangon</button>\r\n        <button onClick={e => this.updateMap(minbyar,14)}>minbyar</button> */\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
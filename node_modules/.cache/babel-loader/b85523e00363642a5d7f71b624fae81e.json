{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\food_menu\\\\src\\\\the-qr-reader.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\nimport { SwipeableDrawer } from '@mui/material';\nimport QrReader from 'react-qr-reader';\nimport { Link, useHistory } from \"react-router-dom\";\nimport beep from './../media/beep-02.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TheQrReader() {\n  _s();\n\n  let history = useHistory();\n  const [qrOpen, setqrOpen] = React.useState(false);\n  const [qrResult, setqrResult] = React.useState(null);\n\n  const qrOpener = isopen => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setqrOpen(isopen);\n  };\n\n  const handleErrorScan = error => {\n    console.log(error);\n  };\n\n  const handleScan = result => {\n    if (result !== null) {\n      console.log(result);\n      setqrOpen(false); // window.location.href = result;\n      // window.location.href = '?hello';\n\n      var pathArray = result.split('/');\n      var protocol = pathArray[0];\n      var path = pathArray[3];\n      var host = pathArray[2];\n      let audio = new Audio(beep);\n\n      if (window.location.origin.split('/')[2] == host) {\n        // our host \n        // play sound\n        audio.play();\n        history.push(path);\n      } else {\n        // others url\n        window.location.href = result;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledFab, {\n      color: \"primary\",\n      \"aria-label\": \"scan qr\",\n      onClick: qrOpener(true),\n      children: /*#__PURE__*/_jsxDEV(QrCodeScannerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), qrOpen ? /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n      className: \"container s\",\n      anchor: \"bottom\",\n      open: qrOpen,\n      onClose: qrOpener(false),\n      onOpen: qrOpener(true),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 1,\n          m: 1,\n          height: '80vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 300,\n          style: {\n            width: '300px'\n          },\n          onError: handleErrorScan,\n          onScan: handleScan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TheQrReader, \"pSVgXa65997UpDLpdnu6hfTwuKs=\", false, function () {\n  return [useHistory];\n});\n\n_c = TheQrReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheQrReader\");","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/src/the-qr-reader.js"],"names":["React","Box","QrCodeScannerIcon","SwipeableDrawer","QrReader","Link","useHistory","beep","TheQrReader","history","qrOpen","setqrOpen","useState","qrResult","setqrResult","qrOpener","isopen","event","type","key","handleErrorScan","error","console","log","handleScan","result","pathArray","split","protocol","path","host","audio","Audio","window","location","origin","play","push","href","display","alignItems","justifyContent","p","m","height","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\nimport { SwipeableDrawer } from '@mui/material';\r\nimport QrReader from 'react-qr-reader';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport beep from './../media/beep-02.mp3'\r\n\r\n\r\nexport default function TheQrReader() {\r\n    let history = useHistory();\r\n    const [qrOpen, setqrOpen] = React.useState(false);\r\n    const [qrResult, setqrResult] = React.useState(null);\r\n\r\n    const qrOpener = (isopen) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setqrOpen(isopen)\r\n    };\r\n\r\n    const handleErrorScan = (error) => {\r\n        console.log(error)\r\n    }\r\n    const handleScan = (result) => {\r\n        if (result !== null) {\r\n            console.log(result);\r\n            setqrOpen(false)\r\n            // window.location.href = result;\r\n            // window.location.href = '?hello';\r\n            var pathArray = result.split('/');\r\n            var protocol = pathArray[0];\r\n            var path = pathArray[3];\r\n            var host = pathArray[2];\r\n\r\n\r\n            let audio = new Audio(beep)\r\n            if (window.location.origin.split('/')[2] == host) {\r\n                // our host \r\n                // play sound\r\n                audio.play()\r\n                history.push(path);\r\n            }\r\n            else {\r\n                // others url\r\n                window.location.href = result;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <StyledFab color=\"primary\" aria-label=\"scan qr\" onClick={qrOpener(true)} >\r\n                <QrCodeScannerIcon />\r\n            </StyledFab>\r\n\r\n            {qrOpen ?\r\n                <SwipeableDrawer\r\n                    className=\"container s\"\r\n                    anchor='bottom'\r\n                    open={qrOpen}\r\n                    onClose={qrOpener(false)}\r\n                    onOpen={qrOpener(true)}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            p: 1,\r\n                            m: 1,\r\n                            height: '80vh',\r\n                        }}\r\n                    >\r\n                        <QrReader\r\n                            delay={300}\r\n                            style={{ width: '300px' }}\r\n                            onError={handleErrorScan}\r\n                            onScan={handleScan}\r\n                        />\r\n                    </Box>\r\n                </SwipeableDrawer>\r\n                :\r\n                ''}\r\n        </React.Fragment>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
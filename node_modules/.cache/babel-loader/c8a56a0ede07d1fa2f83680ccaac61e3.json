{"ast":null,"code":"var _ol_easing_ = {};\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\n_ol_easing_.easeIn = function (t) {\n  return Math.pow(t, 3);\n};\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\n\n_ol_easing_.easeOut = function (t) {\n  return 1 - _ol_easing_.easeIn(1 - t);\n};\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\n\n_ol_easing_.inAndOut = function (t) {\n  return 3 * t * t - 2 * t * t * t;\n};\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\n\n_ol_easing_.linear = function (t) {\n  return t;\n};\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link ol.easing.inAndOut}, but the final slowdown\n * is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\n\n_ol_easing_.upAndDown = function (t) {\n  if (t < 0.5) {\n    return _ol_easing_.inAndOut(2 * t);\n  } else {\n    return 1 - _ol_easing_.inAndOut(2 * (t - 0.5));\n  }\n};\n\nexport default _ol_easing_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/easing.js"],"names":["_ol_easing_","easeIn","t","Math","pow","easeOut","inAndOut","linear","upAndDown"],"mappings":"AAAA,IAAIA,WAAW,GAAG,EAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACAA,WAAW,CAACC,MAAZ,GAAqB,UAASC,CAAT,EAAY;AAC/B,SAAOC,IAAI,CAACC,GAAL,CAASF,CAAT,EAAY,CAAZ,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACAF,WAAW,CAACK,OAAZ,GAAsB,UAASH,CAAT,EAAY;AAChC,SAAO,IAAIF,WAAW,CAACC,MAAZ,CAAmB,IAAIC,CAAvB,CAAX;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACAF,WAAW,CAACM,QAAZ,GAAuB,UAASJ,CAAT,EAAY;AACjC,SAAO,IAAIA,CAAJ,GAAQA,CAAR,GAAY,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAA/B;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACAF,WAAW,CAACO,MAAZ,GAAqB,UAASL,CAAT,EAAY;AAC/B,SAAOA,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,WAAW,CAACQ,SAAZ,GAAwB,UAASN,CAAT,EAAY;AAClC,MAAIA,CAAC,GAAG,GAAR,EAAa;AACX,WAAOF,WAAW,CAACM,QAAZ,CAAqB,IAAIJ,CAAzB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAIF,WAAW,CAACM,QAAZ,CAAqB,KAAKJ,CAAC,GAAG,GAAT,CAArB,CAAX;AACD;AACF,CAND;;AAOA,eAAeF,WAAf","sourcesContent":["var _ol_easing_ = {};\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeIn = function(t) {\n  return Math.pow(t, 3);\n};\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.easeOut = function(t) {\n  return 1 - _ol_easing_.easeIn(1 - t);\n};\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.inAndOut = function(t) {\n  return 3 * t * t - 2 * t * t * t;\n};\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.linear = function(t) {\n  return t;\n};\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link ol.easing.inAndOut}, but the final slowdown\n * is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n_ol_easing_.upAndDown = function(t) {\n  if (t < 0.5) {\n    return _ol_easing_.inAndOut(2 * t);\n  } else {\n    return 1 - _ol_easing_.inAndOut(2 * (t - 0.5));\n  }\n};\nexport default _ol_easing_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_ from './index.js';\nimport _ol_Tile_ from './tile.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n/**\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\n\nvar _ol_ImageTile_ = function (tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n  _ol_Tile_.call(this, tileCoord, state, opt_options);\n  /**\n   * @private\n   * @type {?string}\n   */\n\n\n  this.crossOrigin_ = crossOrigin;\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n\n  this.src_ = src;\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n\n  this.image_ = new Image();\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n\n\n  this.imageListenerKeys_ = null;\n  /**\n   * @private\n   * @type {ol.TileLoadFunctionType}\n   */\n\n  this.tileLoadFunction_ = tileLoadFunction;\n};\n\n_ol_.inherits(_ol_ImageTile_, _ol_Tile_);\n/**\n * @inheritDoc\n */\n\n\n_ol_ImageTile_.prototype.disposeInternal = function () {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenImage_();\n    this.image_ = _ol_ImageTile_.getBlankImage();\n  }\n\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n\n  this.state = _ol_TileState_.ABORT;\n  this.changed();\n\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\n\n\n_ol_ImageTile_.prototype.getImage = function () {\n  return this.image_;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_ImageTile_.prototype.getKey = function () {\n  return this.src_;\n};\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n\n\n_ol_ImageTile_.prototype.handleImageError_ = function () {\n  this.state = _ol_TileState_.ERROR;\n  this.unlistenImage_();\n  this.image_ = _ol_ImageTile_.getBlankImage();\n  this.changed();\n};\n/**\n * Tracks successful image load.\n *\n * @private\n */\n\n\n_ol_ImageTile_.prototype.handleImageLoad_ = function () {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = _ol_TileState_.LOADED;\n  } else {\n    this.state = _ol_TileState_.EMPTY;\n  }\n\n  this.unlistenImage_();\n  this.changed();\n};\n/**\n * @inheritDoc\n * @api\n */\n\n\n_ol_ImageTile_.prototype.load = function () {\n  if (this.state == _ol_TileState_.ERROR) {\n    this.state = _ol_TileState_.IDLE;\n    this.image_ = new Image();\n\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [_ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR, this.handleImageError_, this), _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD, this.handleImageLoad_, this)];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n\n\n_ol_ImageTile_.prototype.unlistenImage_ = function () {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n\n\n_ol_ImageTile_.getBlankImage = function () {\n  var ctx = _ol_dom_.createCanvasContext2D(1, 1);\n\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n};\n\nexport default _ol_ImageTile_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/imagetile.js"],"names":["_ol_","_ol_Tile_","_ol_TileState_","_ol_dom_","_ol_events_","_ol_events_EventType_","_ol_ImageTile_","tileCoord","state","src","crossOrigin","tileLoadFunction","opt_options","call","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","inherits","prototype","disposeInternal","LOADING","unlistenImage_","getBlankImage","interimTile","dispose","ABORT","changed","getImage","getKey","handleImageError_","ERROR","handleImageLoad_","naturalWidth","naturalHeight","LOADED","EMPTY","load","IDLE","listenOnce","LOAD","forEach","unlistenByKey","ctx","createCanvasContext2D","fillStyle","fillRect","canvas"],"mappings":"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","sourcesContent":["import _ol_ from './index.js';\nimport _ol_Tile_ from './tile.js';\nimport _ol_TileState_ from './tilestate.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\n\n/**\n * @constructor\n * @extends {ol.Tile}\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.TileLoadFunctionType} tileLoadFunction Tile load function.\n * @param {olx.TileOptions=} opt_options Tile options.\n */\nvar _ol_ImageTile_ = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  _ol_Tile_.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {ol.TileLoadFunctionType}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\n_ol_.inherits(_ol_ImageTile_, _ol_Tile_);\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.disposeInternal = function() {\n  if (this.state == _ol_TileState_.LOADING) {\n    this.unlistenImage_();\n    this.image_ = _ol_ImageTile_.getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = _ol_TileState_.ABORT;\n  this.changed();\n  _ol_Tile_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\n_ol_ImageTile_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_ImageTile_.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageError_ = function() {\n  this.state = _ol_TileState_.ERROR;\n  this.unlistenImage_();\n  this.image_ = _ol_ImageTile_.getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_ImageTile_.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = _ol_TileState_.LOADED;\n  } else {\n    this.state = _ol_TileState_.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_ImageTile_.prototype.load = function() {\n  if (this.state == _ol_TileState_.ERROR) {\n    this.state = _ol_TileState_.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == _ol_TileState_.IDLE) {\n    this.state = _ol_TileState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_ImageTile_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n_ol_ImageTile_.getBlankImage = function() {\n  var ctx = _ol_dom_.createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n};\nexport default _ol_ImageTile_;\n"]},"metadata":{},"sourceType":"module"}
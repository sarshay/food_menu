{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.DoubleClickZoomOptions=} opt_options Options.\n * @api\n */\n\nvar _ol_interaction_DoubleClickZoom_ = function (opt_options) {\n  var options = opt_options ? opt_options : {};\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.delta_ = options.delta ? options.delta : 1;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_DoubleClickZoom_.handleEvent\n  });\n  /**\n   * @private\n   * @type {number}\n   */\n\n\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\n_ol_.inherits(_ol_interaction_DoubleClickZoom_, _ol_interaction_Interaction_);\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.DoubleClickZoom}\n * @api\n */\n\n\n_ol_interaction_DoubleClickZoom_.handleEvent = function (mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n\n  if (mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n\n    _ol_interaction_Interaction_.zoomByDelta(view, delta, anchor, this.duration_);\n\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n\n  return !stopEvent;\n};\n\nexport default _ol_interaction_DoubleClickZoom_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/interaction/doubleclickzoom.js"],"names":["_ol_","_ol_MapBrowserEventType_","_ol_interaction_Interaction_","_ol_interaction_DoubleClickZoom_","opt_options","options","delta_","delta","call","handleEvent","duration_","duration","undefined","inherits","mapBrowserEvent","stopEvent","browserEvent","originalEvent","type","DBLCLICK","map","anchor","coordinate","shiftKey","view","getView","zoomByDelta","preventDefault"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AACA,OAAOC,4BAAP,MAAyC,+BAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gCAAgC,GAAG,UAASC,WAAT,EAAsB;AAE3D,MAAIC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA1C;AAEA;AACF;AACA;AACA;;AACE,OAAKE,MAAL,GAAcD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACE,KAAxB,GAAgC,CAA9C;;AAEAL,EAAAA,4BAA4B,CAACM,IAA7B,CAAkC,IAAlC,EAAwC;AACtCC,IAAAA,WAAW,EAAEN,gCAAgC,CAACM;AADR,GAAxC;AAIA;AACF;AACA;AACA;;;AACE,OAAKC,SAAL,GAAiBL,OAAO,CAACM,QAAR,KAAqBC,SAArB,GAAiCP,OAAO,CAACM,QAAzC,GAAoD,GAArE;AAED,CApBD;;AAsBAX,IAAI,CAACa,QAAL,CAAcV,gCAAd,EAAgDD,4BAAhD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,gCAAgC,CAACM,WAAjC,GAA+C,UAASK,eAAT,EAA0B;AACvE,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,YAAY,GAAGF,eAAe,CAACG,aAAnC;;AACA,MAAIH,eAAe,CAACI,IAAhB,IAAwBjB,wBAAwB,CAACkB,QAArD,EAA+D;AAC7D,QAAIC,GAAG,GAAGN,eAAe,CAACM,GAA1B;AACA,QAAIC,MAAM,GAAGP,eAAe,CAACQ,UAA7B;AACA,QAAIf,KAAK,GAAGS,YAAY,CAACO,QAAb,GAAwB,CAAC,KAAKjB,MAA9B,GAAuC,KAAKA,MAAxD;AACA,QAAIkB,IAAI,GAAGJ,GAAG,CAACK,OAAJ,EAAX;;AACAvB,IAAAA,4BAA4B,CAACwB,WAA7B,CACIF,IADJ,EACUjB,KADV,EACiBc,MADjB,EACyB,KAAKX,SAD9B;;AAEAI,IAAAA,eAAe,CAACa,cAAhB;AACAZ,IAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,SAAO,CAACA,SAAR;AACD,CAdD;;AAeA,eAAeZ,gCAAf","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_MapBrowserEventType_ from '../mapbrowsereventtype.js';\nimport _ol_interaction_Interaction_ from '../interaction/interaction.js';\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.DoubleClickZoomOptions=} opt_options Options.\n * @api\n */\nvar _ol_interaction_DoubleClickZoom_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  _ol_interaction_Interaction_.call(this, {\n    handleEvent: _ol_interaction_DoubleClickZoom_.handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\n_ol_.inherits(_ol_interaction_DoubleClickZoom_, _ol_interaction_Interaction_);\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.DoubleClickZoom}\n * @api\n */\n_ol_interaction_DoubleClickZoom_.handleEvent = function(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == _ol_MapBrowserEventType_.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    _ol_interaction_Interaction_.zoomByDelta(\n        view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n};\nexport default _ol_interaction_DoubleClickZoom_;\n"]},"metadata":{},"sourceType":"module"}
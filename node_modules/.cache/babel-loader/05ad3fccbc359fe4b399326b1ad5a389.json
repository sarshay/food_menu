{"ast":null,"code":"// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\nimport _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_math_ from '../../math.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_renderer_webgl_tilelayershader_ from '../webgl/tilelayershader.js';\nimport _ol_renderer_webgl_tilelayershader_Locations_ from '../webgl/tilelayershader/locations.js';\nimport _ol_size_ from '../../size.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Tile} tileLayer Tile layer.\n * @api\n */\n\nvar _ol_renderer_webgl_TileLayer_ = function (mapRenderer, tileLayer) {\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, tileLayer);\n  /**\n   * @private\n   * @type {ol.webgl.Fragment}\n   */\n\n\n  this.fragmentShader_ = _ol_renderer_webgl_tilelayershader_.fragment;\n  /**\n   * @private\n   * @type {ol.webgl.Vertex}\n   */\n\n  this.vertexShader_ = _ol_renderer_webgl_tilelayershader_.vertex;\n  /**\n   * @private\n   * @type {ol.renderer.webgl.tilelayershader.Locations}\n   */\n\n  this.locations_ = null;\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n\n  this.renderArrayBuffer_ = new _ol_webgl_Buffer_([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0]);\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n\n  this.renderedTileRange_ = null;\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n\n  this.renderedFramebufferExtent_ = null;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.renderedRevision_ = -1;\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n\n  this.tmpSize_ = [0, 0];\n};\n\n_ol_.inherits(_ol_renderer_webgl_TileLayer_, _ol_renderer_webgl_Layer_);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\n_ol_renderer_webgl_TileLayer_['handles'] = function (type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.TILE;\n};\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.TileLayer} The layer renderer.\n */\n\n\n_ol_renderer_webgl_TileLayer_['create'] = function (mapRenderer, layer) {\n  return new _ol_renderer_webgl_TileLayer_(\n  /** @type {ol.renderer.webgl.Map} */\n  mapRenderer,\n  /** @type {ol.layer.Tile} */\n  layer);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_webgl_TileLayer_.prototype.disposeInternal = function () {\n  var context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_webgl_TileLayer_.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n  var mapRenderer = this.mapRenderer;\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function (zoom, tileRange) {\n      function callback(tile) {\n        var loaded = mapRenderer.isTileTextureLoaded(tile);\n\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n\n        return loaded;\n      }\n\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_webgl_TileLayer_.prototype.handleWebGLContextLost = function () {\n  _ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost.call(this);\n\n  this.locations_ = null;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_webgl_TileLayer_.prototype.prepareFrame = function (frameState, layerState, context) {\n  var mapRenderer = this.mapRenderer;\n  var gl = context.getGL();\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var tileLayer =\n  /** @type {ol.layer.Tile} */\n  this.getLayer();\n  var tileSource = tileLayer.getSource();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewState.resolution);\n  var tileResolution = tileGrid.getResolution(z);\n  var tilePixelSize = tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n\n  var pixelRatio = tilePixelSize[0] / _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n\n  var tilePixelResolution = tileResolution / pixelRatio;\n  var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n  var center = viewState.center;\n  var extent = frameState.extent;\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  var framebufferExtent;\n\n  if (this.renderedTileRange_ && this.renderedTileRange_.equals(tileRange) && this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n    var tileRangeSize = tileRange.getSize();\n    var maxDimension = Math.max(tileRangeSize[0] * tilePixelSize[0], tileRangeSize[1] * tilePixelSize[1]);\n\n    var framebufferDimension = _ol_math_.roundUpToPowerOfTwo(maxDimension);\n\n    var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    var origin = tileGrid.getOrigin(z);\n    var minX = origin[0] + tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    var minY = origin[1] + tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [minX, minY, minX + framebufferExtentDimension, minY + framebufferExtentDimension];\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n    gl.disable(_ol_webgl_.BLEND);\n    var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n\n    if (!this.locations_) {\n      this.locations_ = new _ol_renderer_webgl_tilelayershader_Locations_(gl, program);\n    }\n\n    context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(this.locations_.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(this.locations_.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n    /**\n     * @type {Object.<number, Object.<string, ol.Tile>>}\n     */\n\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n    var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    var allTilesLoaded = true;\n\n    var tmpExtent = _ol_extent_.createEmpty();\n\n    var tmpTileRange = new _ol_TileRange_(0, 0, 0, 0);\n    var childTileRange, drawable, fullyLoaded, tile, tileState;\n    var x, y, tileExtent;\n\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n\n          if (!_ol_extent_.intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n\n        tileState = tile.getState();\n        drawable = tileState == _ol_TileState_.LOADED || tileState == _ol_TileState_.EMPTY || tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n\n        tileState = tile.getState();\n\n        if (tileState == _ol_TileState_.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == _ol_TileState_.EMPTY || tileState == _ol_TileState_.ERROR && !useInterimTilesOnError) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n      }\n    }\n    /** @type {Array.<number>} */\n\n\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(_ol_array_.numberSafeCompareFunction);\n    var u_tileOffset = new Float32Array(4);\n    var i, ii, tileKey, tilesToDraw;\n\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      tilesToDraw = tilesToDrawByZ[zs[i]];\n\n      for (tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) / framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) / framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) / framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) / framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize, tileGutter * pixelRatio, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  var tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload(),\n  /**\n   * @param {ol.Tile} tile Tile.\n   */\n  function (tile) {\n    if (tile.getState() == _ol_TileState_.LOADED && !mapRenderer.isTileTextureLoaded(tile) && !tileTextureQueue.isKeyQueued(tile.getKey())) {\n      tileTextureQueue.enqueue([tile, tileGrid.getTileCoordCenter(tile.tileCoord), tileGrid.getResolution(tile.tileCoord[0]), tilePixelSize, tileGutter * pixelRatio]);\n    }\n  }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n  var texCoordMatrix = this.texCoordMatrix;\n\n  _ol_transform_.reset(texCoordMatrix);\n\n  _ol_transform_.translate(texCoordMatrix, (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) / (framebufferExtent[2] - framebufferExtent[0]), (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) / (framebufferExtent[3] - framebufferExtent[1]));\n\n  if (viewState.rotation !== 0) {\n    _ol_transform_.rotate(texCoordMatrix, viewState.rotation);\n  }\n\n  _ol_transform_.scale(texCoordMatrix, frameState.size[0] * viewState.resolution / (framebufferExtent[2] - framebufferExtent[0]), frameState.size[1] * viewState.resolution / (framebufferExtent[3] - framebufferExtent[1]));\n\n  _ol_transform_.translate(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_webgl_TileLayer_.prototype.forEachLayerAtPixel = function (pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  var pixelOnMapScaled = [pixel[0] / frameState.size[0], (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  var pixelOnFrameBufferScaled = _ol_transform_.apply(this.texCoordMatrix, pixelOnMapScaled.slice());\n\n  var pixelOnFrameBuffer = [pixelOnFrameBufferScaled[0] * this.framebufferDimension, pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n  var gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  var imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\n\nexport default _ol_renderer_webgl_TileLayer_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/renderer/webgl/tilelayer.js"],"names":["_ol_","_ol_LayerType_","_ol_TileRange_","_ol_TileState_","_ol_array_","_ol_extent_","_ol_math_","_ol_renderer_Type_","_ol_renderer_webgl_Layer_","_ol_renderer_webgl_tilelayershader_","_ol_renderer_webgl_tilelayershader_Locations_","_ol_size_","_ol_transform_","_ol_webgl_","_ol_webgl_Buffer_","_ol_renderer_webgl_TileLayer_","mapRenderer","tileLayer","call","fragmentShader_","fragment","vertexShader_","vertex","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","renderedRevision_","tmpSize_","inherits","type","layer","WEBGL","getType","TILE","prototype","disposeInternal","context","getContext","deleteBuffer","createLoadedTileFinder","source","projection","tiles","zoom","tileRange","callback","tile","loaded","isTileTextureLoaded","tileCoord","toString","forEachLoadedTile","handleWebGLContextLost","prepareFrame","frameState","layerState","gl","getGL","viewState","getLayer","tileSource","getSource","tileGrid","getTileGridForProjection","z","getZForResolution","resolution","tileResolution","getResolution","tilePixelSize","getTilePixelSize","pixelRatio","toSize","getTileSize","tilePixelResolution","tileGutter","getTilePixelRatio","getGutter","center","extent","getTileRangeForExtentAndZ","framebufferExtent","equals","getRevision","tileRangeSize","getSize","maxDimension","Math","max","framebufferDimension","roundUpToPowerOfTwo","framebufferExtentDimension","origin","getOrigin","minX","minY","bindFramebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","disable","BLEND","program","getProgram","useProgram","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","a_position","vertexAttribPointer","FLOAT","a_texCoord","uniform1i","u_texture","tilesToDrawByZ","findLoadedTiles","useInterimTilesOnError","getUseInterimTilesOnError","allTilesLoaded","tmpExtent","createEmpty","tmpTileRange","childTileRange","drawable","fullyLoaded","tileState","x","y","tileExtent","maxX","maxY","getTile","undefined","getTileCoordExtent","intersects","getState","LOADED","EMPTY","ERROR","getInterimTile","forEachTileCoordParentTileRange","getTileCoordChildTileRange","zs","Object","keys","map","Number","sort","numberSafeCompareFunction","u_tileOffset","Float32Array","i","ii","tileKey","tilesToDraw","length","uniform4fv","bindTileTexture","LINEAR","drawArrays","TRIANGLE_STRIP","animate","updateUsedTiles","usedTiles","tileTextureQueue","getTileTextureQueue","manageTilePyramid","getPreload","isKeyQueued","getKey","enqueue","getTileCoordCenter","scheduleExpireCache","updateLogos","texCoordMatrix","reset","translate","round","rotation","rotate","scale","size","forEachLayerAtPixel","pixel","thisArg","framebuffer","pixelOnMapScaled","pixelOnFrameBufferScaled","apply","slice","pixelOnFrameBuffer","FRAMEBUFFER","imageData","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE"],"mappings":"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","sourcesContent":["// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileRange_ from '../../tilerange.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_math_ from '../../math.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_webgl_Layer_ from '../webgl/layer.js';\nimport _ol_renderer_webgl_tilelayershader_ from '../webgl/tilelayershader.js';\nimport _ol_renderer_webgl_tilelayershader_Locations_ from '../webgl/tilelayershader/locations.js';\nimport _ol_size_ from '../../size.js';\nimport _ol_transform_ from '../../transform.js';\nimport _ol_webgl_ from '../../webgl.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.webgl.Layer}\n * @param {ol.renderer.webgl.Map} mapRenderer Map renderer.\n * @param {ol.layer.Tile} tileLayer Tile layer.\n * @api\n */\nvar _ol_renderer_webgl_TileLayer_ = function(mapRenderer, tileLayer) {\n\n  _ol_renderer_webgl_Layer_.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {ol.webgl.Fragment}\n   */\n  this.fragmentShader_ = _ol_renderer_webgl_tilelayershader_.fragment;\n\n  /**\n   * @private\n   * @type {ol.webgl.Vertex}\n   */\n  this.vertexShader_ = _ol_renderer_webgl_tilelayershader_.vertex;\n\n  /**\n   * @private\n   * @type {ol.renderer.webgl.tilelayershader.Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {ol.webgl.Buffer}\n   */\n  this.renderArrayBuffer_ = new _ol_webgl_Buffer_([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {ol.TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\n_ol_.inherits(_ol_renderer_webgl_TileLayer_, _ol_renderer_webgl_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_webgl_TileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.WEBGL && layer.getType() === _ol_LayerType_.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.webgl.TileLayer} The layer renderer.\n */\n_ol_renderer_webgl_TileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_webgl_TileLayer_(\n      /** @type {ol.renderer.webgl.Map} */ (mapRenderer),\n      /** @type {ol.layer.Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.disposeInternal = function() {\n  var context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  _ol_renderer_webgl_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  var mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {ol.TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        var loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.handleWebGLContextLost = function() {\n  _ol_renderer_webgl_Layer_.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  var mapRenderer = this.mapRenderer;\n  var gl = context.getGL();\n\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n\n  var tileLayer = /** @type {ol.layer.Tile} */ (this.getLayer());\n  var tileSource = tileLayer.getSource();\n  var tileGrid = tileSource.getTileGridForProjection(projection);\n  var z = tileGrid.getZForResolution(viewState.resolution);\n  var tileResolution = tileGrid.getResolution(z);\n\n  var tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  var pixelRatio = tilePixelSize[0] /\n      _ol_size_.toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  var tilePixelResolution = tileResolution / pixelRatio;\n  var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  var center = viewState.center;\n  var extent = frameState.extent;\n  var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  var framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    var tileRangeSize = tileRange.getSize();\n\n    var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n    var framebufferDimension = _ol_math_.roundUpToPowerOfTwo(maxDimension);\n    var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    var origin = tileGrid.getOrigin(z);\n    var minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    var minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(_ol_webgl_.COLOR_BUFFER_BIT);\n    gl.disable(_ol_webgl_.BLEND);\n\n    var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new _ol_renderer_webgl_tilelayershader_Locations_(gl, program);\n    }\n\n    context.bindBuffer(_ol_webgl_.ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n        this.locations_.a_position, 2, _ol_webgl_.FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, _ol_webgl_.FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, ol.Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    var allTilesLoaded = true;\n    var tmpExtent = _ol_extent_.createEmpty();\n    var tmpTileRange = new _ol_TileRange_(0, 0, 0, 0);\n    var childTileRange, drawable, fullyLoaded, tile, tileState;\n    var x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!_ol_extent_.intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == _ol_TileState_.LOADED ||\n            tileState == _ol_TileState_.EMPTY ||\n            tileState == _ol_TileState_.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == _ol_TileState_.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == _ol_TileState_.EMPTY ||\n                   (tileState == _ol_TileState_.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(_ol_array_.numberSafeCompareFunction);\n    var u_tileOffset = new Float32Array(4);\n    var i, ii, tileKey, tilesToDraw;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, _ol_webgl_.LINEAR, _ol_webgl_.LINEAR);\n        gl.drawArrays(_ol_webgl_.TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  var tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {ol.Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == _ol_TileState_.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n  this.updateLogos(frameState, tileSource);\n\n  var texCoordMatrix = this.texCoordMatrix;\n  _ol_transform_.reset(texCoordMatrix);\n  _ol_transform_.translate(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    _ol_transform_.rotate(texCoordMatrix, viewState.rotation);\n  }\n  _ol_transform_.scale(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  _ol_transform_.translate(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_webgl_TileLayer_.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  var pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  var pixelOnFrameBufferScaled = _ol_transform_.apply(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n  var pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  var gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  var imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default _ol_renderer_webgl_TileLayer_;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_has_ from '../has.js';\nimport _ol_pointer_EventType_ from '../pointer/eventtype.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\nimport _ol_pointer_MsSource_ from '../pointer/mssource.js';\nimport _ol_pointer_NativeSource_ from '../pointer/nativesource.js';\nimport _ol_pointer_PointerEvent_ from '../pointer/pointerevent.js';\nimport _ol_pointer_TouchSource_ from '../pointer/touchsource.js';\n/**\n * @constructor\n * @extends {ol.events.EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\n\nvar _ol_pointer_PointerEventHandler_ = function (element) {\n  _ol_events_EventTarget_.call(this);\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n\n\n  this.element_ = element;\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n\n  this.pointerMap = {};\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n\n  this.eventMap_ = {};\n  /**\n   * @type {Array.<ol.pointer.EventSource>}\n   * @private\n   */\n\n  this.eventSourceList_ = [];\n  this.registerSources();\n};\n\n_ol_.inherits(_ol_pointer_PointerEventHandler_, _ol_events_EventTarget_);\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.registerSources = function () {\n  if (_ol_has_.POINTER) {\n    this.registerSource('native', new _ol_pointer_NativeSource_(this));\n  } else if (_ol_has_.MSPOINTER) {\n    this.registerSource('ms', new _ol_pointer_MsSource_(this));\n  } else {\n    var mouseSource = new _ol_pointer_MouseSource_(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (_ol_has_.TOUCH) {\n      this.registerSource('touch', new _ol_pointer_TouchSource_(this, mouseSource));\n    }\n  } // register events on the viewport element\n\n\n  this.register_();\n};\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {ol.pointer.EventSource} source The source event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.registerSource = function (name, source) {\n  var s = source;\n  var newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function (e) {\n      var handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }, this);\n    this.eventSourceList_.push(s);\n  }\n};\n/**\n * Set up the events for all registered event sources.\n * @private\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.register_ = function () {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n/**\n * Remove all registered events.\n * @private\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.unregister_ = function () {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.eventHandler_ = function (inEvent) {\n  var type = inEvent.type;\n  var handler = this.eventMap_[type];\n\n  if (handler) {\n    handler(inEvent);\n  }\n};\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.addEvents_ = function (events) {\n  events.forEach(function (eventName) {\n    _ol_events_.listen(this.element_, eventName, this.eventHandler_, this);\n  }, this);\n};\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.removeEvents_ = function (events) {\n  events.forEach(function (e) {\n    _ol_events_.unlisten(this.element_, e, this.eventHandler_, this);\n  }, this);\n};\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.cloneEvent = function (event, inEvent) {\n  var eventCopy = {},\n      p;\n\n  for (var i = 0, ii = _ol_pointer_PointerEventHandler_.CLONE_PROPS.length; i < ii; i++) {\n    p = _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n}; // EVENTS\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.down = function (data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERDOWN, data, event);\n};\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.move = function (data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERMOVE, data, event);\n};\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.up = function (data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERUP, data, event);\n};\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.enter = function (data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERENTER, data, event);\n};\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.leave = function (data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERLEAVE, data, event);\n};\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.over = function (data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROVER, data, event);\n};\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.out = function (data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROUT, data, event);\n};\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.cancel = function (data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERCANCEL, data, event);\n};\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.leaveOut = function (data, event) {\n  this.out(data, event);\n\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.enterOver = function (data, event) {\n  this.over(data, event);\n\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.contains_ = function (container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n\n  return container.contains(contained);\n}; // EVENT CREATION AND TRACKING\n\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} A PointerEvent of type `inType`.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.makeEvent = function (inType, data, event) {\n  return new _ol_pointer_PointerEvent_(inType, event, data);\n};\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.fireEvent = function (inType, data, event) {\n  var e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.fireNativeEvent = function (event) {\n  var e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} The wrapped event.\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.wrapMouseEvent = function (eventType, event) {\n  var pointerEvent = this.makeEvent(eventType, _ol_pointer_MouseSource_.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_pointer_PointerEventHandler_.prototype.disposeInternal = function () {\n  this.unregister_();\n\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\n\n\n_ol_pointer_PointerEventHandler_.CLONE_PROPS = [// MouseEvent\n['bubbles', false], ['cancelable', false], ['view', null], ['detail', null], ['screenX', 0], ['screenY', 0], ['clientX', 0], ['clientY', 0], ['ctrlKey', false], ['altKey', false], ['shiftKey', false], ['metaKey', false], ['button', 0], ['relatedTarget', null], // DOM Level 3\n['buttons', 0], // PointerEvent\n['pointerId', 0], ['width', 0], ['height', 0], ['pressure', 0], ['tiltX', 0], ['tiltY', 0], ['pointerType', ''], ['hwTimestamp', 0], ['isPrimary', false], // event instance\n['type', ''], ['target', null], ['currentTarget', null], ['which', 0]];\nexport default _ol_pointer_PointerEventHandler_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/pointer/pointereventhandler.js"],"names":["_ol_","_ol_events_","_ol_events_EventTarget_","_ol_has_","_ol_pointer_EventType_","_ol_pointer_MouseSource_","_ol_pointer_MsSource_","_ol_pointer_NativeSource_","_ol_pointer_PointerEvent_","_ol_pointer_TouchSource_","_ol_pointer_PointerEventHandler_","element","call","element_","pointerMap","eventMap_","eventSourceList_","registerSources","inherits","prototype","POINTER","registerSource","MSPOINTER","mouseSource","TOUCH","register_","name","source","s","newEvents","getEvents","forEach","e","handler","getHandlerForEvent","bind","push","l","length","eventSource","i","addEvents_","unregister_","removeEvents_","eventHandler_","inEvent","type","events","eventName","listen","unlisten","cloneEvent","event","eventCopy","p","ii","CLONE_PROPS","down","data","fireEvent","POINTERDOWN","move","POINTERMOVE","up","POINTERUP","enter","bubbles","POINTERENTER","leave","POINTERLEAVE","over","POINTEROVER","out","POINTEROUT","cancel","POINTERCANCEL","leaveOut","contains_","target","relatedTarget","enterOver","container","contained","contains","makeEvent","inType","dispatchEvent","fireNativeEvent","wrapMouseEvent","eventType","pointerEvent","prepareEvent","disposeInternal"],"mappings":"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","sourcesContent":["// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventTarget_ from '../events/eventtarget.js';\nimport _ol_has_ from '../has.js';\nimport _ol_pointer_EventType_ from '../pointer/eventtype.js';\nimport _ol_pointer_MouseSource_ from '../pointer/mousesource.js';\nimport _ol_pointer_MsSource_ from '../pointer/mssource.js';\nimport _ol_pointer_NativeSource_ from '../pointer/nativesource.js';\nimport _ol_pointer_PointerEvent_ from '../pointer/pointerevent.js';\nimport _ol_pointer_TouchSource_ from '../pointer/touchsource.js';\n\n/**\n * @constructor\n * @extends {ol.events.EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nvar _ol_pointer_PointerEventHandler_ = function(element) {\n  _ol_events_EventTarget_.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<ol.pointer.EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\n_ol_.inherits(_ol_pointer_PointerEventHandler_, _ol_events_EventTarget_);\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSources = function() {\n  if (_ol_has_.POINTER) {\n    this.registerSource('native', new _ol_pointer_NativeSource_(this));\n  } else if (_ol_has_.MSPOINTER) {\n    this.registerSource('ms', new _ol_pointer_MsSource_(this));\n  } else {\n    var mouseSource = new _ol_pointer_MouseSource_(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (_ol_has_.TOUCH) {\n      this.registerSource('touch',\n          new _ol_pointer_TouchSource_(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {ol.pointer.EventSource} source The source event.\n */\n_ol_pointer_PointerEventHandler_.prototype.registerSource = function(name, source) {\n  var s = source;\n  var newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      var handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }, this);\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.register_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\n_ol_pointer_PointerEventHandler_.prototype.unregister_ = function() {\n  var l = this.eventSourceList_.length;\n  var eventSource;\n  for (var i = 0; i < l; i++) {\n    eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\n_ol_pointer_PointerEventHandler_.prototype.eventHandler_ = function(inEvent) {\n  var type = inEvent.type;\n  var handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    _ol_events_.listen(this.element_, eventName, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\n_ol_pointer_PointerEventHandler_.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    _ol_events_.unlisten(this.element_, e, this.eventHandler_, this);\n  }, this);\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\n_ol_pointer_PointerEventHandler_.prototype.cloneEvent = function(event, inEvent) {\n  var eventCopy = {}, p;\n  for (var i = 0, ii = _ol_pointer_PointerEventHandler_.CLONE_PROPS.length; i < ii; i++) {\n    p = _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || _ol_pointer_PointerEventHandler_.CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.down = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.move = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.up = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(_ol_pointer_EventType_.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(_ol_pointer_EventType_.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.cancel = function(data, event) {\n  this.fireEvent(_ol_pointer_EventType_.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\n_ol_pointer_PointerEventHandler_.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} A PointerEvent of type `inType`.\n */\n_ol_pointer_PointerEventHandler_.prototype.makeEvent = function(inType, data, event) {\n  return new _ol_pointer_PointerEvent_(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireEvent = function(inType, data, event) {\n  var e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\n_ol_pointer_PointerEventHandler_.prototype.fireNativeEvent = function(event) {\n  var e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {ol.pointer.PointerEvent} The wrapped event.\n */\n_ol_pointer_PointerEventHandler_.prototype.wrapMouseEvent = function(eventType, event) {\n  var pointerEvent = this.makeEvent(\n      eventType, _ol_pointer_MouseSource_.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_pointer_PointerEventHandler_.prototype.disposeInternal = function() {\n  this.unregister_();\n  _ol_events_EventTarget_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\n_ol_pointer_PointerEventHandler_.CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\nexport default _ol_pointer_PointerEventHandler_;\n"]},"metadata":{},"sourceType":"module"}
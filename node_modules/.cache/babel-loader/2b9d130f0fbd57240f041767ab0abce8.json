{"ast":null,"code":"import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_canvas_ImageReplay_ from '../canvas/imagereplay.js';\nimport _ol_render_canvas_LineStringReplay_ from '../canvas/linestringreplay.js';\nimport _ol_render_canvas_PolygonReplay_ from '../canvas/polygonreplay.js';\nimport _ol_render_canvas_TextReplay_ from '../canvas/textreplay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\n\nvar _ol_render_canvas_ReplayGroup_ = function (tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n  /**\n   * Declutter tree.\n   * @private\n   */\n\n\n  this.declutterTree_ = declutterTree;\n  /**\n   * @type {ol.DeclutterGroup}\n   * @private\n   */\n\n  this.declutterGroup_ = null;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.tolerance_ = tolerance;\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n\n  this.maxExtent_ = maxExtent;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.overlaps_ = overlaps;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.pixelRatio_ = pixelRatio;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.resolution_ = resolution;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.renderBuffer_ = opt_renderBuffer;\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.canvas.Replay>>}\n   */\n\n  this.replaysByZIndex_ = {};\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n\n  this.hitDetectionContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n  this.hitDetectionTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_ReplayGroup_, _ol_render_ReplayGroup_);\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n * @private\n */\n\n\n_ol_render_canvas_ReplayGroup_.circleArrayCache_ = {\n  0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @private\n */\n\n_ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_ = function (array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n};\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n * @private\n */\n\n\n_ol_render_canvas_ReplayGroup_.getCircleArray_ = function (radius) {\n  if (_ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] !== undefined) {\n    return _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius + y);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius + x);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius + x);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius + y);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius - y);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius - x);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius - x);\n\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] = arr;\n  return arr;\n};\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\n\n\n_ol_render_canvas_ReplayGroup_.replayDeclutter = function (declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(_ol_array_.numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n};\n/**\n * @param {boolean} group Group with previous replay.\n * @return {ol.DeclutterGroup} Declutter instruction group.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.addDeclutter = function (group) {\n  var declutter = null;\n\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */\n\n      declutter[4]++;\n    } else {\n      declutter = this.declutterGroup_ = _ol_extent_.createEmpty();\n      declutter.push(1);\n    }\n  }\n\n  return declutter;\n};\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.clip = function (context, transform) {\n  var flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n/**\n * @param {Array.<ol.render.ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.hasReplays = function (replays) {\n  for (var zIndex in this.replaysByZIndex_) {\n    var candidates = this.replaysByZIndex_[zIndex];\n\n    for (var i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.finish = function () {\n  var zKey;\n\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n\n    for (replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @param {Object.<string, ol.DeclutterGroup>} declutterReplays Declutter\n *     replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n  hitTolerance = Math.round(hitTolerance);\n  var contextSize = hitTolerance * 2 + 1;\n\n  var transform = _ol_transform_.compose(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n\n  var context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n  /**\n   * @type {ol.Extent}\n   */\n\n\n  var hitExtent;\n\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = _ol_extent_.createEmpty();\n\n    _ol_extent_.extendCoordinate(hitExtent, coordinate);\n\n    _ol_extent_.buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  var mask = _ol_render_canvas_ReplayGroup_.getCircleArray_(hitTolerance);\n\n  var declutteredFeatures;\n\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n      return entry.value;\n    });\n  }\n\n  var replayType;\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n\n  function featureCallback(feature) {\n    var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n\n    for (var i = 0; i < contextSize; i++) {\n      for (var j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            var result;\n\n            if (!(declutteredFeatures && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) || declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n  /** @type {Array.<number>} */\n\n\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n  var i, j, replays, replay, result;\n\n  for (i = zs.length - 1; i >= 0; --i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replayType = _ol_render_replay_.ORDER[j];\n      replay = replays[replayType];\n\n      if (replay !== undefined) {\n        if (declutterReplays && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = declutterReplays[zIndexKey];\n\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n\n  return undefined;\n};\n/**\n * @param {ol.Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.getClipCoords = function (transform) {\n  var maxExtent = this.maxExtent_;\n  var minX = maxExtent[0];\n  var minY = maxExtent[1];\n  var maxX = maxExtent[2];\n  var maxY = maxExtent[3];\n  var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n\n  _ol_geom_flat_transform_.transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n\n  return flatClipCoords;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.getReplay = function (zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n\n  var replay = replays[replayType];\n\n  if (replay === undefined) {\n    var Constructor = _ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n\n  return replay;\n};\n/**\n * @return {Object.<string, Object.<ol.render.ReplayType, ol.render.canvas.Replay>>} Replays.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.getReplays = function () {\n  return this.replaysByZIndex_;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.isEmpty = function () {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<ol.render.ReplayType>=} opt_replayTypes Ordered replay types\n *     to replay. Default is {@link ol.render.replay.ORDER}\n * @param {Object.<string, ol.DeclutterGroup>=} opt_declutterReplays Declutter\n *     replays.\n */\n\n\n_ol_render_canvas_ReplayGroup_.prototype.replay = function (context, transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction); // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n\n  context.save();\n  this.clip(context, transform);\n  var replayTypes = opt_replayTypes ? opt_replayTypes : _ol_render_replay_.ORDER;\n  var i, ii, j, jj, replays, replay;\n\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      var replayType = replayTypes[j];\n      replay = replays[replayType];\n\n      if (replay !== undefined) {\n        if (opt_declutterReplays && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = opt_declutterReplays[zIndexKey];\n\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.canvas.Replay, number, ol.Extent,\n *                number, number, boolean, Array.<ol.DeclutterGroup>)>}\n */\n\n\n_ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_canvas_PolygonReplay_,\n  'Default': _ol_render_canvas_Replay_,\n  'Image': _ol_render_canvas_ImageReplay_,\n  'LineString': _ol_render_canvas_LineStringReplay_,\n  'Polygon': _ol_render_canvas_PolygonReplay_,\n  'Text': _ol_render_canvas_TextReplay_\n};\nexport default _ol_render_canvas_ReplayGroup_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/render/canvas/replaygroup.js"],"names":["_ol_","_ol_array_","_ol_dom_","_ol_extent_","_ol_geom_flat_transform_","_ol_obj_","_ol_render_ReplayGroup_","_ol_render_ReplayType_","_ol_render_canvas_Replay_","_ol_render_canvas_ImageReplay_","_ol_render_canvas_LineStringReplay_","_ol_render_canvas_PolygonReplay_","_ol_render_canvas_TextReplay_","_ol_render_replay_","_ol_transform_","_ol_render_canvas_ReplayGroup_","tolerance","maxExtent","resolution","pixelRatio","overlaps","declutterTree","opt_renderBuffer","call","declutterTree_","declutterGroup_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","createCanvasContext2D","hitDetectionTransform_","create","inherits","circleArrayCache_","fillCircleArrayRowToMiddle_","array","x","y","i","radius","Math","floor","length","getCircleArray_","undefined","arraySize","arr","Array","error","replayDeclutter","declutterReplays","context","rotation","zs","Object","keys","map","Number","sort","numberSafeCompareFunction","skippedFeatureUids","z","zz","replayData","toString","ii","replay","transform","prototype","addDeclutter","group","declutter","createEmpty","push","clip","flatClipCoords","getClipCoords","beginPath","moveTo","lineTo","hasReplays","replays","zIndex","candidates","finish","zKey","replayKey","forEachFeatureAtCoordinate","coordinate","hitTolerance","skippedFeaturesHash","callback","round","contextSize","compose","canvas","width","height","clearRect","hitExtent","extendCoordinate","buffer","mask","declutteredFeatures","all","entry","value","replayType","featureCallback","feature","imageData","getImageData","data","j","result","IMAGE","TEXT","indexOf","zIndexKey","ORDER","slice","replayHitDetection","minX","minY","maxX","maxY","transform2D","getReplay","Constructor","BATCH_CONSTRUCTORS_","getReplays","isEmpty","viewRotation","opt_replayTypes","opt_declutterReplays","save","replayTypes","jj","restore"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,wBAAP,MAAqC,8BAArC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,uBAAP,MAAoC,mBAApC;AACA,OAAOC,sBAAP,MAAmC,kBAAnC;AACA,OAAOC,yBAAP,MAAsC,qBAAtC;AACA,OAAOC,8BAAP,MAA2C,0BAA3C;AACA,OAAOC,mCAAP,MAAgD,+BAAhD;AACA,OAAOC,gCAAP,MAA6C,4BAA7C;AACA,OAAOC,6BAAP,MAA0C,yBAA1C;AACA,OAAOC,kBAAP,MAA+B,cAA/B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,8BAA8B,GAAG,UACjCC,SADiC,EACtBC,SADsB,EACXC,UADW,EACCC,UADD,EACaC,QADb,EACuBC,aADvB,EACsCC,gBADtC,EACwD;AAC3FhB,EAAAA,uBAAuB,CAACiB,IAAxB,CAA6B,IAA7B;AAEA;AACF;AACA;AACA;;;AACE,OAAKC,cAAL,GAAsBH,aAAtB;AAEA;AACF;AACA;AACA;;AACE,OAAKI,eAAL,GAAuB,IAAvB;AAEA;AACF;AACA;AACA;;AACE,OAAKC,UAAL,GAAkBV,SAAlB;AAEA;AACF;AACA;AACA;;AACE,OAAKW,UAAL,GAAkBV,SAAlB;AAEA;AACF;AACA;AACA;;AACE,OAAKW,SAAL,GAAiBR,QAAjB;AAEA;AACF;AACA;AACA;;AACE,OAAKS,WAAL,GAAmBV,UAAnB;AAEA;AACF;AACA;AACA;;AACE,OAAKW,WAAL,GAAmBZ,UAAnB;AAEA;AACF;AACA;AACA;;AACE,OAAKa,aAAL,GAAqBT,gBAArB;AAEA;AACF;AACA;AACA;AACA;;AACE,OAAKU,gBAAL,GAAwB,EAAxB;AAEA;AACF;AACA;AACA;;AACE,OAAKC,oBAAL,GAA4B/B,QAAQ,CAACgC,qBAAT,CAA+B,CAA/B,EAAkC,CAAlC,CAA5B;AAEA;AACF;AACA;AACA;;AACE,OAAKC,sBAAL,GAA8BrB,cAAc,CAACsB,MAAf,EAA9B;AACD,CAtED;;AAwEApC,IAAI,CAACqC,QAAL,CAActB,8BAAd,EAA8CT,uBAA9C;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAS,8BAA8B,CAACuB,iBAA/B,GAAmD;AACjD,KAAG,CAAC,CAAC,IAAD,CAAD;AAD8C,CAAnD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAvB,8BAA8B,CAACwB,2BAA/B,GAA6D,UAASC,KAAT,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjF,MAAIC,CAAJ;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,CAACO,MAAN,GAAe,CAA1B,CAAb;;AACA,MAAIN,CAAC,IAAIG,MAAT,EAAiB;AACf,SAAKD,CAAC,GAAGC,MAAT,EAAiBD,CAAC,GAAGF,CAArB,EAAwBE,CAAC,EAAzB,EAA6B;AAC3BH,MAAAA,KAAK,CAACG,CAAD,CAAL,CAASD,CAAT,IAAc,IAAd;AACD;AACF,GAJD,MAIO,IAAID,CAAC,GAAGG,MAAR,EAAgB;AACrB,SAAKD,CAAC,GAAGF,CAAC,GAAG,CAAb,EAAgBE,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC/BH,MAAAA,KAAK,CAACG,CAAD,CAAL,CAASD,CAAT,IAAc,IAAd;AACD;AACF;AACF,CAZD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA3B,8BAA8B,CAACiC,eAA/B,GAAiD,UAASJ,MAAT,EAAiB;AAChE,MAAI7B,8BAA8B,CAACuB,iBAA/B,CAAiDM,MAAjD,MAA6DK,SAAjE,EAA4E;AAC1E,WAAOlC,8BAA8B,CAACuB,iBAA/B,CAAiDM,MAAjD,CAAP;AACD;;AAED,MAAIM,SAAS,GAAGN,MAAM,GAAG,CAAT,GAAa,CAA7B;AACA,MAAIO,GAAG,GAAG,IAAIC,KAAJ,CAAUF,SAAV,CAAV;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,SAApB,EAA+BP,CAAC,EAAhC,EAAoC;AAClCQ,IAAAA,GAAG,CAACR,CAAD,CAAH,GAAS,IAAIS,KAAJ,CAAUF,SAAV,CAAT;AACD;;AAED,MAAIT,CAAC,GAAGG,MAAR;AACA,MAAIF,CAAC,GAAG,CAAR;AACA,MAAIW,KAAK,GAAG,CAAZ;;AAEA,SAAOZ,CAAC,IAAIC,CAAZ,EAAe;AACb3B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGH,CAAzE,EAA4EG,MAAM,GAAGF,CAArF;;AACA3B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGF,CAAzE,EAA4EE,MAAM,GAAGH,CAArF;;AACA1B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGF,CAAzE,EAA4EE,MAAM,GAAGH,CAArF;;AACA1B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGH,CAAzE,EAA4EG,MAAM,GAAGF,CAArF;;AACA3B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGH,CAAzE,EAA4EG,MAAM,GAAGF,CAArF;;AACA3B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGF,CAAzE,EAA4EE,MAAM,GAAGH,CAArF;;AACA1B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGF,CAAzE,EAA4EE,MAAM,GAAGH,CAArF;;AACA1B,IAAAA,8BAA8B,CAACwB,2BAA/B,CAA2DY,GAA3D,EAAgEP,MAAM,GAAGH,CAAzE,EAA4EG,MAAM,GAAGF,CAArF;;AAEAA,IAAAA,CAAC;AACDW,IAAAA,KAAK,IAAI,IAAI,IAAIX,CAAjB;;AACA,QAAI,KAAKW,KAAK,GAAGZ,CAAb,IAAkB,CAAlB,GAAsB,CAA1B,EAA6B;AAC3BA,MAAAA,CAAC,IAAI,CAAL;AACAY,MAAAA,KAAK,IAAI,IAAI,IAAIZ,CAAjB;AACD;AACF;;AAED1B,EAAAA,8BAA8B,CAACuB,iBAA/B,CAAiDM,MAAjD,IAA2DO,GAA3D;AACA,SAAOA,GAAP;AACD,CAnCD;AAsCA;AACA;AACA;AACA;AACA;;;AACApC,8BAA8B,CAACuC,eAA/B,GAAiD,UAASC,gBAAT,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC7F,MAAIC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8BM,GAA9B,CAAkCC,MAAlC,EAA0CC,IAA1C,CAA+C9D,UAAU,CAAC+D,yBAA1D,CAAT;AACA,MAAIC,kBAAkB,GAAG,EAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGT,EAAE,CAACX,MAAxB,EAAgCmB,CAAC,GAAGC,EAApC,EAAwC,EAAED,CAA1C,EAA6C;AAC3C,QAAIE,UAAU,GAAGb,gBAAgB,CAACG,EAAE,CAACQ,CAAD,CAAF,CAAMG,QAAN,EAAD,CAAjC;;AACA,SAAK,IAAI1B,CAAC,GAAG,CAAR,EAAW2B,EAAE,GAAGF,UAAU,CAACrB,MAAhC,EAAwCJ,CAAC,GAAG2B,EAA5C,GAAiD;AAC/C,UAAIC,MAAM,GAAGH,UAAU,CAACzB,CAAC,EAAF,CAAvB;AACA,UAAI6B,SAAS,GAAGJ,UAAU,CAACzB,CAAC,EAAF,CAA1B;AACA4B,MAAAA,MAAM,CAACA,MAAP,CAAcf,OAAd,EAAuBgB,SAAvB,EAAkCf,QAAlC,EAA4CQ,kBAA5C;AACD;AACF;AACF,CAXD;AAcA;AACA;AACA;AACA;;;AACAlD,8BAA8B,CAAC0D,SAA/B,CAAyCC,YAAzC,GAAwD,UAASC,KAAT,EAAgB;AACtE,MAAIC,SAAS,GAAG,IAAhB;;AACA,MAAI,KAAKpD,cAAT,EAAyB;AACvB,QAAImD,KAAJ,EAAW;AACTC,MAAAA,SAAS,GAAG,KAAKnD,eAAjB;AACA;;AAAuBmD,MAAAA,SAAS,CAAC,CAAD,CAAV;AACvB,KAHD,MAGO;AACLA,MAAAA,SAAS,GAAG,KAAKnD,eAAL,GAAuBtB,WAAW,CAAC0E,WAAZ,EAAnC;AACAD,MAAAA,SAAS,CAACE,IAAV,CAAe,CAAf;AACD;AACF;;AACD,SAAOF,SAAP;AACD,CAZD;AAeA;AACA;AACA;AACA;;;AACA7D,8BAA8B,CAAC0D,SAA/B,CAAyCM,IAAzC,GAAgD,UAASvB,OAAT,EAAkBgB,SAAlB,EAA6B;AAC3E,MAAIQ,cAAc,GAAG,KAAKC,aAAL,CAAmBT,SAAnB,CAArB;AACAhB,EAAAA,OAAO,CAAC0B,SAAR;AACA1B,EAAAA,OAAO,CAAC2B,MAAR,CAAeH,cAAc,CAAC,CAAD,CAA7B,EAAkCA,cAAc,CAAC,CAAD,CAAhD;AACAxB,EAAAA,OAAO,CAAC4B,MAAR,CAAeJ,cAAc,CAAC,CAAD,CAA7B,EAAkCA,cAAc,CAAC,CAAD,CAAhD;AACAxB,EAAAA,OAAO,CAAC4B,MAAR,CAAeJ,cAAc,CAAC,CAAD,CAA7B,EAAkCA,cAAc,CAAC,CAAD,CAAhD;AACAxB,EAAAA,OAAO,CAAC4B,MAAR,CAAeJ,cAAc,CAAC,CAAD,CAA7B,EAAkCA,cAAc,CAAC,CAAD,CAAhD;AACAxB,EAAAA,OAAO,CAACuB,IAAR;AACD,CARD;AAWA;AACA;AACA;AACA;;;AACAhE,8BAA8B,CAAC0D,SAA/B,CAAyCY,UAAzC,GAAsD,UAASC,OAAT,EAAkB;AACtE,OAAK,IAAIC,MAAT,IAAmB,KAAKvD,gBAAxB,EAA0C;AACxC,QAAIwD,UAAU,GAAG,KAAKxD,gBAAL,CAAsBuD,MAAtB,CAAjB;;AACA,SAAK,IAAI5C,CAAC,GAAG,CAAR,EAAW2B,EAAE,GAAGgB,OAAO,CAACvC,MAA7B,EAAqCJ,CAAC,GAAG2B,EAAzC,EAA6C,EAAE3B,CAA/C,EAAkD;AAChD,UAAI2C,OAAO,CAAC3C,CAAD,CAAP,IAAc6C,UAAlB,EAA8B;AAC5B,eAAO,IAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAVD;AAaA;AACA;AACA;;;AACAzE,8BAA8B,CAAC0D,SAA/B,CAAyCgB,MAAzC,GAAkD,YAAW;AAC3D,MAAIC,IAAJ;;AACA,OAAKA,IAAL,IAAa,KAAK1D,gBAAlB,EAAoC;AAClC,QAAIsD,OAAO,GAAG,KAAKtD,gBAAL,CAAsB0D,IAAtB,CAAd;AACA,QAAIC,SAAJ;;AACA,SAAKA,SAAL,IAAkBL,OAAlB,EAA2B;AACzBA,MAAAA,OAAO,CAACK,SAAD,CAAP,CAAmBF,MAAnB;AACD;AACF;AACF,CATD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA1E,8BAA8B,CAAC0D,SAA/B,CAAyCmB,0BAAzC,GAAsE,UAClEC,UADkE,EACtD3E,UADsD,EAC1CuC,QAD0C,EAChCqC,YADgC,EAClBC,mBADkB,EACGC,QADH,EACazC,gBADb,EAC+B;AAEnGuC,EAAAA,YAAY,GAAGjD,IAAI,CAACoD,KAAL,CAAWH,YAAX,CAAf;AACA,MAAII,WAAW,GAAGJ,YAAY,GAAG,CAAf,GAAmB,CAArC;;AACA,MAAItB,SAAS,GAAG1D,cAAc,CAACqF,OAAf,CAAuB,KAAKhE,sBAA5B,EACZ2D,YAAY,GAAG,GADH,EACQA,YAAY,GAAG,GADvB,EAEZ,IAAI5E,UAFQ,EAEI,CAAC,CAAD,GAAKA,UAFT,EAGZ,CAACuC,QAHW,EAIZ,CAACoC,UAAU,CAAC,CAAD,CAJC,EAII,CAACA,UAAU,CAAC,CAAD,CAJf,CAAhB;;AAKA,MAAIrC,OAAO,GAAG,KAAKvB,oBAAnB;;AAEA,MAAIuB,OAAO,CAAC4C,MAAR,CAAeC,KAAf,KAAyBH,WAAzB,IAAwC1C,OAAO,CAAC4C,MAAR,CAAeE,MAAf,KAA0BJ,WAAtE,EAAmF;AACjF1C,IAAAA,OAAO,CAAC4C,MAAR,CAAeC,KAAf,GAAuBH,WAAvB;AACA1C,IAAAA,OAAO,CAAC4C,MAAR,CAAeE,MAAf,GAAwBJ,WAAxB;AACD,GAHD,MAGO;AACL1C,IAAAA,OAAO,CAAC+C,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBL,WAAxB,EAAqCA,WAArC;AACD;AAED;AACF;AACA;;;AACE,MAAIM,SAAJ;;AACA,MAAI,KAAKzE,aAAL,KAAuBkB,SAA3B,EAAsC;AACpCuD,IAAAA,SAAS,GAAGrG,WAAW,CAAC0E,WAAZ,EAAZ;;AACA1E,IAAAA,WAAW,CAACsG,gBAAZ,CAA6BD,SAA7B,EAAwCX,UAAxC;;AACA1F,IAAAA,WAAW,CAACuG,MAAZ,CAAmBF,SAAnB,EAA8BtF,UAAU,IAAI,KAAKa,aAAL,GAAqB+D,YAAzB,CAAxC,EAAgFU,SAAhF;AACD;;AAED,MAAIG,IAAI,GAAG5F,8BAA8B,CAACiC,eAA/B,CAA+C8C,YAA/C,CAAX;;AACA,MAAIc,mBAAJ;;AACA,MAAI,KAAKpF,cAAT,EAAyB;AACvBoF,IAAAA,mBAAmB,GAAG,KAAKpF,cAAL,CAAoBqF,GAApB,GAA0BhD,GAA1B,CAA8B,UAASiD,KAAT,EAAgB;AAClE,aAAOA,KAAK,CAACC,KAAb;AACD,KAFqB,CAAtB;AAGD;;AAED,MAAIC,UAAJ;AAEA;AACF;AACA;AACA;;AACE,WAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,QAAIC,SAAS,GAAG3D,OAAO,CAAC4D,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BlB,WAA3B,EAAwCA,WAAxC,EAAqDmB,IAArE;;AACA,SAAK,IAAI1E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,WAApB,EAAiCvD,CAAC,EAAlC,EAAsC;AACpC,WAAK,IAAI2E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,WAApB,EAAiCoB,CAAC,EAAlC,EAAsC;AACpC,YAAIX,IAAI,CAAChE,CAAD,CAAJ,CAAQ2E,CAAR,CAAJ,EAAgB;AACd,cAAIH,SAAS,CAAC,CAACG,CAAC,GAAGpB,WAAJ,GAAkBvD,CAAnB,IAAwB,CAAxB,GAA4B,CAA7B,CAAT,GAA2C,CAA/C,EAAkD;AAChD,gBAAI4E,MAAJ;;AACA,gBAAI,EAAEX,mBAAmB,KAAKI,UAAU,IAAIzG,sBAAsB,CAACiH,KAArC,IAA8CR,UAAU,IAAIzG,sBAAsB,CAACkH,IAAxF,CAArB,KACAb,mBAAmB,CAACc,OAApB,CAA4BR,OAA5B,MAAyC,CAAC,CAD9C,EACiD;AAC/CK,cAAAA,MAAM,GAAGvB,QAAQ,CAACkB,OAAD,CAAjB;AACD;;AACD,gBAAIK,MAAJ,EAAY;AACV,qBAAOA,MAAP;AACD,aAFD,MAEO;AACL/D,cAAAA,OAAO,CAAC+C,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBL,WAAxB,EAAqCA,WAArC;AACA,qBAAOjD,SAAP;AACD;AACF;AACF;AACF;AACF;AACF;AAED;;;AACA,MAAIS,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAK5B,gBAAjB,EAAmC6B,GAAnC,CAAuCC,MAAvC,CAAT;AACAJ,EAAAA,EAAE,CAACK,IAAH,CAAQ9D,UAAU,CAAC+D,yBAAnB;AAEA,MAAIrB,CAAJ,EAAO2E,CAAP,EAAUhC,OAAV,EAAmBf,MAAnB,EAA2BgD,MAA3B;;AACA,OAAK5E,CAAC,GAAGe,EAAE,CAACX,MAAH,GAAY,CAArB,EAAwBJ,CAAC,IAAI,CAA7B,EAAgC,EAAEA,CAAlC,EAAqC;AACnC,QAAIgF,SAAS,GAAGjE,EAAE,CAACf,CAAD,CAAF,CAAM0B,QAAN,EAAhB;AACAiB,IAAAA,OAAO,GAAG,KAAKtD,gBAAL,CAAsB2F,SAAtB,CAAV;;AACA,SAAKL,CAAC,GAAGzG,kBAAkB,CAAC+G,KAAnB,CAAyB7E,MAAzB,GAAkC,CAA3C,EAA8CuE,CAAC,IAAI,CAAnD,EAAsD,EAAEA,CAAxD,EAA2D;AACzDN,MAAAA,UAAU,GAAGnG,kBAAkB,CAAC+G,KAAnB,CAAyBN,CAAzB,CAAb;AACA/C,MAAAA,MAAM,GAAGe,OAAO,CAAC0B,UAAD,CAAhB;;AACA,UAAIzC,MAAM,KAAKtB,SAAf,EAA0B;AACxB,YAAIM,gBAAgB,KACfyD,UAAU,IAAIzG,sBAAsB,CAACiH,KAArC,IAA8CR,UAAU,IAAIzG,sBAAsB,CAACkH,IADpE,CAApB,EAC+F;AAC7F,cAAI7C,SAAS,GAAGrB,gBAAgB,CAACoE,SAAD,CAAhC;;AACA,cAAI,CAAC/C,SAAL,EAAgB;AACdrB,YAAAA,gBAAgB,CAACoE,SAAD,CAAhB,GAA8B,CAACpD,MAAD,EAASC,SAAS,CAACqD,KAAV,CAAgB,CAAhB,CAAT,CAA9B;AACD,WAFD,MAEO;AACLjD,YAAAA,SAAS,CAACE,IAAV,CAAeP,MAAf,EAAuBC,SAAS,CAACqD,KAAV,CAAgB,CAAhB,CAAvB;AACD;AACF,SARD,MAQO;AACLN,UAAAA,MAAM,GAAGhD,MAAM,CAACuD,kBAAP,CAA0BtE,OAA1B,EAAmCgB,SAAnC,EAA8Cf,QAA9C,EACLsC,mBADK,EACgBkB,eADhB,EACiCT,SADjC,CAAT;;AAEA,cAAIe,MAAJ,EAAY;AACV,mBAAOA,MAAP;AACD;AACF;AACF;AACF;AACF;;AACD,SAAOtE,SAAP;AACD,CAjGD;AAoGA;AACA;AACA;AACA;;;AACAlC,8BAA8B,CAAC0D,SAA/B,CAAyCQ,aAAzC,GAAyD,UAAST,SAAT,EAAoB;AAC3E,MAAIvD,SAAS,GAAG,KAAKU,UAArB;AACA,MAAIoG,IAAI,GAAG9G,SAAS,CAAC,CAAD,CAApB;AACA,MAAI+G,IAAI,GAAG/G,SAAS,CAAC,CAAD,CAApB;AACA,MAAIgH,IAAI,GAAGhH,SAAS,CAAC,CAAD,CAApB;AACA,MAAIiH,IAAI,GAAGjH,SAAS,CAAC,CAAD,CAApB;AACA,MAAI+D,cAAc,GAAG,CAAC+C,IAAD,EAAOC,IAAP,EAAaD,IAAb,EAAmBG,IAAnB,EAAyBD,IAAzB,EAA+BC,IAA/B,EAAqCD,IAArC,EAA2CD,IAA3C,CAArB;;AACA5H,EAAAA,wBAAwB,CAAC+H,WAAzB,CACInD,cADJ,EACoB,CADpB,EACuB,CADvB,EAC0B,CAD1B,EAC6BR,SAD7B,EACwCQ,cADxC;;AAEA,SAAOA,cAAP;AACD,CAVD;AAaA;AACA;AACA;;;AACAjE,8BAA8B,CAAC0D,SAA/B,CAAyC2D,SAAzC,GAAqD,UAAS7C,MAAT,EAAiByB,UAAjB,EAA6B;AAChF,MAAIW,SAAS,GAAGpC,MAAM,KAAKtC,SAAX,GAAuBsC,MAAM,CAAClB,QAAP,EAAvB,GAA2C,GAA3D;AACA,MAAIiB,OAAO,GAAG,KAAKtD,gBAAL,CAAsB2F,SAAtB,CAAd;;AACA,MAAIrC,OAAO,KAAKrC,SAAhB,EAA2B;AACzBqC,IAAAA,OAAO,GAAG,EAAV;AACA,SAAKtD,gBAAL,CAAsB2F,SAAtB,IAAmCrC,OAAnC;AACD;;AACD,MAAIf,MAAM,GAAGe,OAAO,CAAC0B,UAAD,CAApB;;AACA,MAAIzC,MAAM,KAAKtB,SAAf,EAA0B;AACxB,QAAIoF,WAAW,GAAGtH,8BAA8B,CAACuH,mBAA/B,CAAmDtB,UAAnD,CAAlB;AACAzC,IAAAA,MAAM,GAAG,IAAI8D,WAAJ,CAAgB,KAAK3G,UAArB,EAAiC,KAAKC,UAAtC,EACL,KAAKG,WADA,EACa,KAAKD,WADlB,EAC+B,KAAKD,SADpC,EAC+C,KAAKJ,cADpD,CAAT;AAEA8D,IAAAA,OAAO,CAAC0B,UAAD,CAAP,GAAsBzC,MAAtB;AACD;;AACD,SAAOA,MAAP;AACD,CAfD;AAkBA;AACA;AACA;;;AACAxD,8BAA8B,CAAC0D,SAA/B,CAAyC8D,UAAzC,GAAsD,YAAW;AAC/D,SAAO,KAAKvG,gBAAZ;AACD,CAFD;AAKA;AACA;AACA;;;AACAjB,8BAA8B,CAAC0D,SAA/B,CAAyC+D,OAAzC,GAAmD,YAAW;AAC5D,SAAOnI,QAAQ,CAACmI,OAAT,CAAiB,KAAKxG,gBAAtB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjB,8BAA8B,CAAC0D,SAA/B,CAAyCF,MAAzC,GAAkD,UAASf,OAAT,EAC9CgB,SAD8C,EACnCiE,YADmC,EACrB1C,mBADqB,EACA2C,eADA,EACiBC,oBADjB,EACuC;AAEvF;AACA,MAAIjF,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAK5B,gBAAjB,EAAmC6B,GAAnC,CAAuCC,MAAvC,CAAT;AACAJ,EAAAA,EAAE,CAACK,IAAH,CAAQ9D,UAAU,CAAC+D,yBAAnB,EAJuF,CAMvF;AACA;;AACAR,EAAAA,OAAO,CAACoF,IAAR;AACA,OAAK7D,IAAL,CAAUvB,OAAV,EAAmBgB,SAAnB;AAEA,MAAIqE,WAAW,GAAGH,eAAe,GAAGA,eAAH,GAAqB7H,kBAAkB,CAAC+G,KAAzE;AACA,MAAIjF,CAAJ,EAAO2B,EAAP,EAAWgD,CAAX,EAAcwB,EAAd,EAAkBxD,OAAlB,EAA2Bf,MAA3B;;AACA,OAAK5B,CAAC,GAAG,CAAJ,EAAO2B,EAAE,GAAGZ,EAAE,CAACX,MAApB,EAA4BJ,CAAC,GAAG2B,EAAhC,EAAoC,EAAE3B,CAAtC,EAAyC;AACvC,QAAIgF,SAAS,GAAGjE,EAAE,CAACf,CAAD,CAAF,CAAM0B,QAAN,EAAhB;AACAiB,IAAAA,OAAO,GAAG,KAAKtD,gBAAL,CAAsB2F,SAAtB,CAAV;;AACA,SAAKL,CAAC,GAAG,CAAJ,EAAOwB,EAAE,GAAGD,WAAW,CAAC9F,MAA7B,EAAqCuE,CAAC,GAAGwB,EAAzC,EAA6C,EAAExB,CAA/C,EAAkD;AAChD,UAAIN,UAAU,GAAG6B,WAAW,CAACvB,CAAD,CAA5B;AACA/C,MAAAA,MAAM,GAAGe,OAAO,CAAC0B,UAAD,CAAhB;;AACA,UAAIzC,MAAM,KAAKtB,SAAf,EAA0B;AACxB,YAAI0F,oBAAoB,KACnB3B,UAAU,IAAIzG,sBAAsB,CAACiH,KAArC,IAA8CR,UAAU,IAAIzG,sBAAsB,CAACkH,IADhE,CAAxB,EAC+F;AAC7F,cAAI7C,SAAS,GAAG+D,oBAAoB,CAAChB,SAAD,CAApC;;AACA,cAAI,CAAC/C,SAAL,EAAgB;AACd+D,YAAAA,oBAAoB,CAAChB,SAAD,CAApB,GAAkC,CAACpD,MAAD,EAASC,SAAS,CAACqD,KAAV,CAAgB,CAAhB,CAAT,CAAlC;AACD,WAFD,MAEO;AACLjD,YAAAA,SAAS,CAACE,IAAV,CAAeP,MAAf,EAAuBC,SAAS,CAACqD,KAAV,CAAgB,CAAhB,CAAvB;AACD;AACF,SARD,MAQO;AACLtD,UAAAA,MAAM,CAACA,MAAP,CAAcf,OAAd,EAAuBgB,SAAvB,EAAkCiE,YAAlC,EAAgD1C,mBAAhD;AACD;AACF;AACF;AACF;;AAEDvC,EAAAA,OAAO,CAACuF,OAAR;AACD,CArCD;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhI,8BAA8B,CAACuH,mBAA/B,GAAqD;AACnD,YAAU3H,gCADyC;AAEnD,aAAWH,yBAFwC;AAGnD,WAASC,8BAH0C;AAInD,gBAAcC,mCAJqC;AAKnD,aAAWC,gCALwC;AAMnD,UAAQC;AAN2C,CAArD;AAQA,eAAeG,8BAAf","sourcesContent":["import _ol_ from '../../index.js';\nimport _ol_array_ from '../../array.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_geom_flat_transform_ from '../../geom/flat/transform.js';\nimport _ol_obj_ from '../../obj.js';\nimport _ol_render_ReplayGroup_ from '../replaygroup.js';\nimport _ol_render_ReplayType_ from '../replaytype.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\nimport _ol_render_canvas_ImageReplay_ from '../canvas/imagereplay.js';\nimport _ol_render_canvas_LineStringReplay_ from '../canvas/linestringreplay.js';\nimport _ol_render_canvas_PolygonReplay_ from '../canvas/polygonreplay.js';\nimport _ol_render_canvas_TextReplay_ from '../canvas/textreplay.js';\nimport _ol_render_replay_ from '../replay.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.render.ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nvar _ol_render_canvas_ReplayGroup_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  _ol_render_ReplayGroup_.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {ol.DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<ol.render.ReplayType, ol.render.canvas.Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = _ol_dom_.createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.hitDetectionTransform_ = _ol_transform_.create();\n};\n\n_ol_.inherits(_ol_render_canvas_ReplayGroup_, _ol_render_ReplayGroup_);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n * @private\n */\n_ol_render_canvas_ReplayGroup_.circleArrayCache_ = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_ = function(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n};\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n * @private\n */\n_ol_render_canvas_ReplayGroup_.getCircleArray_ = function(radius) {\n  if (_ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] !== undefined) {\n    return _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius + x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius + y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - x, radius - y);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius - y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + y, radius - x);\n    _ol_render_canvas_ReplayGroup_.fillCircleArrayRowToMiddle_(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  _ol_render_canvas_ReplayGroup_.circleArrayCache_[radius] = arr;\n  return arr;\n};\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\n_ol_render_canvas_ReplayGroup_.replayDeclutter = function(declutterReplays, context, rotation) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(_ol_array_.numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n};\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {ol.DeclutterGroup} Declutter instruction group.\n */\n_ol_render_canvas_ReplayGroup_.prototype.addDeclutter = function(group) {\n  var declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = _ol_extent_.createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n */\n_ol_render_canvas_ReplayGroup_.prototype.clip = function(context, transform) {\n  var flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<ol.render.ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\n_ol_render_canvas_ReplayGroup_.prototype.hasReplays = function(replays) {\n  for (var zIndex in this.replaysByZIndex_) {\n    var candidates = this.replaysByZIndex_[zIndex];\n    for (var i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.finish = function() {\n  var zKey;\n  for (zKey in this.replaysByZIndex_) {\n    var replays = this.replaysByZIndex_[zKey];\n    var replayKey;\n    for (replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((ol.Feature|ol.render.Feature)): T} callback Feature\n *     callback.\n * @param {Object.<string, ol.DeclutterGroup>} declutterReplays Declutter\n *     replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\n_ol_render_canvas_ReplayGroup_.prototype.forEachFeatureAtCoordinate = function(\n    coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  var contextSize = hitTolerance * 2 + 1;\n  var transform = _ol_transform_.compose(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n  var context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {ol.Extent}\n   */\n  var hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = _ol_extent_.createEmpty();\n    _ol_extent_.extendCoordinate(hitExtent, coordinate);\n    _ol_extent_.buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  var mask = _ol_render_canvas_ReplayGroup_.getCircleArray_(hitTolerance);\n  var declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  var replayType;\n\n  /**\n   * @param {ol.Feature|ol.render.Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (var i = 0; i < contextSize; i++) {\n      for (var j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            var result;\n            if (!(declutteredFeatures && (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  var i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = _ol_render_replay_.ORDER.length - 1; j >= 0; --j) {\n      replayType = _ol_render_replay_.ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getClipCoords = function(transform) {\n  var maxExtent = this.maxExtent_;\n  var minX = maxExtent[0];\n  var minY = maxExtent[1];\n  var maxX = maxExtent[2];\n  var maxY = maxExtent[3];\n  var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  _ol_geom_flat_transform_.transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplay = function(zIndex, replayType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[replayType];\n  if (replay === undefined) {\n    var Constructor = _ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<ol.render.ReplayType, ol.render.canvas.Replay>>} Replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_ReplayGroup_.prototype.isEmpty = function() {\n  return _ol_obj_.isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {ol.Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<ol.render.ReplayType>=} opt_replayTypes Ordered replay types\n *     to replay. Default is {@link ol.render.replay.ORDER}\n * @param {Object.<string, ol.DeclutterGroup>=} opt_declutterReplays Declutter\n *     replays.\n */\n_ol_render_canvas_ReplayGroup_.prototype.replay = function(context,\n    transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  var zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(_ol_array_.numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  var replayTypes = opt_replayTypes ? opt_replayTypes : _ol_render_replay_.ORDER;\n  var i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    var zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      var replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == _ol_render_ReplayType_.IMAGE || replayType == _ol_render_ReplayType_.TEXT)) {\n          var declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<ol.render.ReplayType,\n *                function(new: ol.render.canvas.Replay, number, ol.Extent,\n *                number, number, boolean, Array.<ol.DeclutterGroup>)>}\n */\n_ol_render_canvas_ReplayGroup_.BATCH_CONSTRUCTORS_ = {\n  'Circle': _ol_render_canvas_PolygonReplay_,\n  'Default': _ol_render_canvas_Replay_,\n  'Image': _ol_render_canvas_ImageReplay_,\n  'LineString': _ol_render_canvas_LineStringReplay_,\n  'Polygon': _ol_render_canvas_PolygonReplay_,\n  'Text': _ol_render_canvas_TextReplay_\n};\nexport default _ol_render_canvas_ReplayGroup_;\n"]},"metadata":{},"sourceType":"module"}
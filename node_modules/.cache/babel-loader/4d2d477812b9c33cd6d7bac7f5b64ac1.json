{"ast":null,"code":"import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorTileRenderType_ from '../../layer/vectortilerendertype.js';\nimport _ol_proj_ from '../../proj.js';\nimport _ol_proj_Units_ from '../../proj/units.js';\nimport _ol_render_ReplayType_ from '../../render/replaytype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_render_replay_ from '../../render/replay.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_TileLayer_ from '../canvas/tilelayer.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_transform_ from '../../transform.js';\n/**\n * @constructor\n * @extends {ol.renderer.canvas.TileLayer}\n * @param {ol.layer.VectorTile} layer VectorTile layer.\n * @api\n */\n\nvar _ol_renderer_canvas_VectorTileLayer_ = function (layer) {\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  _ol_renderer_canvas_TileLayer_.call(this, layer);\n  /**\n   * Declutter tree.\n   * @private\n     */\n\n\n  this.declutterTree_ = layer.getDeclutter() ? _ol_ext_rbush_(9) : null;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.dirty_ = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.renderedLayerRevision_;\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n  this.tmpTransform_ = _ol_transform_.create(); // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n\n  this.zDirection = layer.getRenderMode() == _ol_layer_VectorTileRenderType_.VECTOR ? 1 : 0;\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorTileLayer_, _ol_renderer_canvas_TileLayer_);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_['handles'] = function (type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR_TILE;\n};\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorTileLayer} The layer renderer.\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_['create'] = function (mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorTileLayer_(\n  /** @type {ol.layer.VectorTile} */\n  layer);\n};\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS = {\n  'image': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.CIRCLE, _ol_render_ReplayType_.LINE_STRING, _ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT],\n  'hybrid': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.LINE_STRING]\n};\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n\n_ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS = {\n  'image': [_ol_render_ReplayType_.DEFAULT],\n  'hybrid': [_ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT, _ol_render_ReplayType_.DEFAULT],\n  'vector': _ol_render_replay_.ORDER\n};\n/**\n * @inheritDoc\n */\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.disposeInternal = function () {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n  _ol_renderer_canvas_TileLayer_.prototype.disposeInternal.call(this);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.prepareFrame = function (frameState, layerState) {\n  var layer = this.getLayer();\n  var layerRevision = layer.getRevision();\n\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    var renderMode = layer.getRenderMode();\n\n    if (!this.context && renderMode != _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = _ol_dom_.createCanvasContext2D();\n    }\n\n    if (this.context && renderMode == _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = null;\n    }\n  }\n\n  this.renderedLayerRevision_ = layerRevision;\n  return _ol_renderer_canvas_TileLayer_.prototype.prepareFrame.apply(this, arguments);\n};\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.createReplayGroup_ = function (tile, frameState) {\n  var layer = this.getLayer();\n  var pixelRatio = frameState.pixelRatio;\n  var projection = frameState.viewState.projection;\n  var revision = layer.getRevision();\n  var renderOrder =\n  /** @type {ol.RenderOrderFunction} */\n  layer.getRenderOrder() || null;\n  var replayState = tile.getReplayState(layer);\n\n  if (!replayState.dirty && replayState.renderedRevision == revision && replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  var source =\n  /** @type {ol.source.VectorTile} */\n  layer.getSource();\n  var sourceTileGrid = source.getTileGrid();\n  var tileGrid = source.getTileGridForProjection(projection);\n  var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n  var zIndexKeys = {};\n\n  for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n    if (sourceTile.getState() == _ol_TileState_.ERROR) {\n      continue;\n    }\n\n    var sourceTileCoord = sourceTile.tileCoord;\n    var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n\n    var sharedExtent = _ol_extent_.getIntersection(tileExtent, sourceTileExtent);\n\n    var bufferedExtent = _ol_extent_.equals(sourceTileExtent, sharedExtent) ? null : _ol_extent_.buffer(sharedExtent, layer.getRenderBuffer() * resolution);\n    var tileProjection = sourceTile.getProjection();\n    var reproject = false;\n\n    if (!_ol_proj_.equivalent(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n\n    replayState.dirty = false;\n    var replayGroup = new _ol_render_canvas_ReplayGroup_(0, sharedExtent, resolution, pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n\n    var squaredTolerance = _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio);\n    /**\n     * @param {ol.Feature|ol.render.Feature} feature Feature.\n     * @this {ol.renderer.canvas.VectorTileLayer}\n     */\n\n\n    var renderFeature = function (feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction();\n\n      if (styleFunction) {\n        styles = styleFunction.call(\n        /** @type {ol.Feature} */\n        feature, resolution);\n      } else {\n        styleFunction = layer.getStyleFunction();\n\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n      }\n\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    var features = sourceTile.getFeatures();\n\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n\n    var feature;\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      feature = features[i];\n\n      if (reproject) {\n        if (tileProjection.getUnits() == _ol_proj_Units_.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent); // tile extent in tile pixel space\n\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n\n      if (!bufferedExtent || _ol_extent_.intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        renderFeature.call(this, feature);\n      }\n    }\n\n    replayGroup.finish();\n\n    for (var r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.drawTileImage = function (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var vectorImageTile =\n  /** @type {ol.VectorImageTile} */\n  tile;\n  this.createReplayGroup_(vectorImageTile, frameState);\n\n  if (this.context) {\n    this.renderTileImage_(vectorImageTile, frameState, layerState);\n\n    _ol_renderer_canvas_TileLayer_.prototype.drawTileImage.apply(this, arguments);\n  }\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  var layer = this.getLayer();\n  /** @type {Object.<string, boolean>} */\n\n  var features = {};\n  /** @type {Array.<ol.VectorImageTile>} */\n\n  var renderedTiles = this.renderedTiles;\n  var source =\n  /** @type {ol.source.VectorTile} */\n  layer.getSource();\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var bufferedExtent, found;\n  var i, ii, replayGroup;\n  var tile, tileCoord, tileExtent;\n\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    tile = renderedTiles[i];\n    tileCoord = tile.wrappedTileCoord;\n    tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    bufferedExtent = _ol_extent_.buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\n\n    if (!_ol_extent_.containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {ol.Feature|ol.render.Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function (feature) {\n        var key = _ol_.getUid(feature).toString();\n\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    }\n  }\n\n  return found;\n};\n/**\n * @param {ol.VectorTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @return {ol.Transform} transform Transform.\n * @private\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.getReplayTransform_ = function (tile, frameState) {\n  var layer = this.getLayer();\n  var source =\n  /** @type {ol.source.VectorTile} */\n  layer.getSource();\n  var tileGrid = source.getTileGrid();\n  var tileCoord = tile.tileCoord;\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var renderResolution = viewState.resolution / pixelRatio;\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  var center = viewState.center;\n\n  var origin = _ol_extent_.getTopLeft(tileExtent);\n\n  var size = frameState.size;\n  var offsetX = Math.round(pixelRatio * size[0] / 2);\n  var offsetY = Math.round(pixelRatio * size[1] / 2);\n  return _ol_transform_.compose(this.tmpTransform_, offsetX, offsetY, tileResolution / renderResolution, tileResolution / renderResolution, viewState.rotation, (origin[0] - center[0]) / tileResolution, (center[1] - origin[1]) / tileResolution);\n};\n/**\n * @param {ol.events.Event} event Event.\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleFontsChanged_ = function (event) {\n  var layer = this.getLayer();\n\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleStyleImageChange_ = function (event) {\n  this.renderIfReadyAndVisible();\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.postCompose = function (context, frameState, layerState) {\n  var layer = this.getLayer();\n  var declutterReplays = layer.getDeclutter() ? {} : null;\n  var source =\n  /** @type {ol.source.VectorTile} */\n  layer.getSource();\n  var renderMode = layer.getRenderMode();\n  var replayTypes = _ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS[renderMode];\n  var pixelRatio = frameState.pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var size = frameState.size;\n  var offsetX, offsetY;\n\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n\n  var tiles = this.renderedTiles;\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var clips = [];\n  var zs = [];\n\n  for (var i = tiles.length - 1; i >= 0; --i) {\n    var tile =\n    /** @type {ol.VectorImageTile} */\n    tiles[i];\n\n    if (tile.getState() == _ol_TileState_.ABORT) {\n      continue;\n    }\n\n    var tileCoord = tile.tileCoord;\n    var worldOffset = tileGrid.getTileCoordExtent(tileCoord)[0] - tileGrid.getTileCoordExtent(tile.wrappedTileCoord)[0];\n    var transform = undefined;\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n\n      var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n\n      if (renderMode != _ol_layer_VectorTileRenderType_.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n\n      var currentZ = sourceTile.tileCoord[0];\n      var currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity; // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n\n      for (var j = 0, jj = clips.length; j < jj; ++j) {\n        var clip = clips[j];\n\n        if (currentZ < zs[j]) {\n          context.beginPath(); // counter-clockwise (outer ring) for current tile\n\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]); // clockwise (inner ring) for higher resolution tile\n\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n\n  if (declutterReplays) {\n    _ol_render_canvas_ReplayGroup_.replayDeclutter(declutterReplays, context, rotation);\n  }\n\n  if (rotation) {\n    _ol_render_canvas_.rotateAtOffset(context, rotation,\n    /** @type {number} */\n    offsetX,\n    /** @type {number} */\n    offsetY);\n  }\n\n  _ol_renderer_canvas_TileLayer_.prototype.postCompose.apply(this, arguments);\n};\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderFeature = function (feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n\n  var loading = false;\n\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(replayGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(replayGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n  }\n\n  return loading;\n};\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @private\n */\n\n\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderTileImage_ = function (tile, frameState, layerState) {\n  var layer = this.getLayer();\n  var replayState = tile.getReplayState(layer);\n  var revision = layer.getRevision();\n\n  var replays = _ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS[layer.getRenderMode()];\n\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    var tileCoord = tile.wrappedTileCoord;\n    var z = tileCoord[0];\n    var pixelRatio = frameState.pixelRatio;\n    var source =\n    /** @type {ol.source.VectorTile} */\n    layer.getSource();\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    var resolution = tileGrid.getResolution(z);\n    var context = tile.getContext(layer);\n    var size = source.getTilePixelSize(z, pixelRatio, frameState.viewState.projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n\n    for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      var sourceTile = tile.getTile(tile.tileKeys[i]);\n\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n\n      var pixelScale = pixelRatio / resolution;\n\n      var transform = _ol_transform_.reset(this.tmpTransform_);\n\n      _ol_transform_.scale(transform, pixelScale, -pixelScale);\n\n      _ol_transform_.translate(transform, -tileExtent[0], -tileExtent[3]);\n\n      var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default _ol_renderer_canvas_VectorTileLayer_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/renderer/canvas/vectortilelayer.js"],"names":["_ol_","_ol_LayerType_","_ol_TileState_","_ol_dom_","_ol_events_","_ol_events_EventType_","_ol_ext_rbush_","_ol_extent_","_ol_layer_VectorTileRenderType_","_ol_proj_","_ol_proj_Units_","_ol_render_ReplayType_","_ol_render_canvas_","_ol_render_canvas_ReplayGroup_","_ol_render_replay_","_ol_renderer_Type_","_ol_renderer_canvas_TileLayer_","_ol_renderer_vector_","_ol_transform_","_ol_renderer_canvas_VectorTileLayer_","layer","context","call","declutterTree_","getDeclutter","dirty_","renderedLayerRevision_","tmpTransform_","create","zDirection","getRenderMode","VECTOR","listen","labelCache","CLEAR","handleFontsChanged_","inherits","type","CANVAS","getType","VECTOR_TILE","mapRenderer","IMAGE_REPLAYS","POLYGON","CIRCLE","LINE_STRING","IMAGE","TEXT","VECTOR_REPLAYS","DEFAULT","ORDER","prototype","disposeInternal","unlisten","prepareFrame","frameState","layerState","getLayer","layerRevision","getRevision","renderedTiles","length","renderMode","createCanvasContext2D","apply","arguments","createReplayGroup_","tile","pixelRatio","projection","viewState","revision","renderOrder","getRenderOrder","replayState","getReplayState","dirty","renderedRevision","renderedRenderOrder","source","getSource","sourceTileGrid","getTileGrid","tileGrid","getTileGridForProjection","resolution","getResolution","tileCoord","tileExtent","getTileCoordExtent","wrappedTileCoord","zIndexKeys","t","tt","tileKeys","sourceTile","getTile","getState","ERROR","sourceTileCoord","sourceTileExtent","sharedExtent","getIntersection","bufferedExtent","equals","buffer","getRenderBuffer","tileProjection","getProjection","reproject","equivalent","setProjection","replayGroup","getOverlaps","squaredTolerance","getSquaredTolerance","renderFeature","feature","styles","styleFunction","getStyleFunction","features","getFeatures","sort","i","ii","getUnits","TILE_PIXELS","setWorldExtent","setExtent","getExtent","getGeometry","transform","intersects","finish","r","getReplays","setReplayGroup","toString","drawTileImage","x","y","w","h","gutter","transition","vectorImageTile","renderTileImage_","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","rotation","undefined","found","tmpExtent","containsCoordinate","getReplayGroup","key","getUid","getReplayTransform_","tileResolution","renderResolution","center","origin","getTopLeft","size","offsetX","Math","round","offsetY","compose","event","getVisible","changed","handleStyleImageChange_","renderIfReadyAndVisible","postCompose","declutterReplays","replayTypes","rotateAtOffset","clear","tiles","clips","zs","ABORT","worldOffset","hasReplays","getTransform","currentZ","currentClip","getClipCoords","save","globalAlpha","opacity","j","jj","clip","beginPath","moveTo","lineTo","replay","restore","push","replayDeclutter","loading","Array","isArray","replays","renderedTileRevision","z","getContext","getTilePixelSize","canvas","width","height","pixelScale","reset","scale","translate"],"mappings":"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","sourcesContent":["import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_TileState_ from '../../tilestate.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_layer_VectorTileRenderType_ from '../../layer/vectortilerendertype.js';\nimport _ol_proj_ from '../../proj.js';\nimport _ol_proj_Units_ from '../../proj/units.js';\nimport _ol_render_ReplayType_ from '../../render/replaytype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_render_replay_ from '../../render/replay.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_TileLayer_ from '../canvas/tilelayer.js';\nimport _ol_renderer_vector_ from '../vector.js';\nimport _ol_transform_ from '../../transform.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.TileLayer}\n * @param {ol.layer.VectorTile} layer VectorTile layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorTileLayer_ = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  _ol_renderer_canvas_TileLayer_.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n     */\n  this.declutterTree_ = layer.getDeclutter() ? _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.tmpTransform_ = _ol_transform_.create();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection =\n      layer.getRenderMode() == _ol_layer_VectorTileRenderType_.VECTOR ? 1 : 0;\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorTileLayer_, _ol_renderer_canvas_TileLayer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorTileLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorTileLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorTileLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorTileLayer_(/** @type {ol.layer.VectorTile} */ (layer));\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS = {\n  'image': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.CIRCLE,\n    _ol_render_ReplayType_.LINE_STRING, _ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT],\n  'hybrid': [_ol_render_ReplayType_.POLYGON, _ol_render_ReplayType_.LINE_STRING]\n};\n\n\n/**\n * @const\n * @type {!Object.<string, Array.<ol.render.ReplayType>>}\n */\n_ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS = {\n  'image': [_ol_render_ReplayType_.DEFAULT],\n  'hybrid': [_ol_render_ReplayType_.IMAGE, _ol_render_ReplayType_.TEXT, _ol_render_ReplayType_.DEFAULT],\n  'vector': _ol_render_replay_.ORDER\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_TileLayer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.prepareFrame = function(frameState, layerState) {\n  var layer = this.getLayer();\n  var layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    var renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = _ol_dom_.createCanvasContext2D();\n    }\n    if (this.context && renderMode == _ol_layer_VectorTileRenderType_.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return _ol_renderer_canvas_TileLayer_.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.createReplayGroup_ = function(\n    tile, frameState) {\n  var layer = this.getLayer();\n  var pixelRatio = frameState.pixelRatio;\n  var projection = frameState.viewState.projection;\n  var revision = layer.getRevision();\n  var renderOrder = /** @type {ol.RenderOrderFunction} */\n      (layer.getRenderOrder()) || null;\n\n  var replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var sourceTileGrid = source.getTileGrid();\n  var tileGrid = source.getTileGridForProjection(projection);\n  var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n  var zIndexKeys = {};\n  for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    var sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() == _ol_TileState_.ERROR) {\n      continue;\n    }\n\n    var sourceTileCoord = sourceTile.tileCoord;\n    var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    var sharedExtent = _ol_extent_.getIntersection(tileExtent, sourceTileExtent);\n    var bufferedExtent = _ol_extent_.equals(sourceTileExtent, sharedExtent) ? null :\n      _ol_extent_.buffer(sharedExtent, layer.getRenderBuffer() * resolution);\n    var tileProjection = sourceTile.getProjection();\n    var reproject = false;\n    if (!_ol_proj_.equivalent(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    var replayGroup = new _ol_render_canvas_ReplayGroup_(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    var squaredTolerance = _ol_renderer_vector_.getSquaredTolerance(\n        resolution, pixelRatio);\n\n    /**\n     * @param {ol.Feature|ol.render.Feature} feature Feature.\n     * @this {ol.renderer.canvas.VectorTileLayer}\n     */\n    var renderFeature = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction.call(/** @type {ol.Feature} */ (feature), resolution);\n      } else {\n        styleFunction = layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n      }\n      if (styles) {\n        var dirty = this.renderFeature(feature, squaredTolerance, styles,\n            replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    var features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    var feature;\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == _ol_proj_Units_.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || _ol_extent_.intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        renderFeature.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (var r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.drawTileImage = function(\n    tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  var vectorImageTile = /** @type {ol.VectorImageTile} */ (tile);\n  this.createReplayGroup_(vectorImageTile, frameState);\n  if (this.context) {\n    this.renderTileImage_(vectorImageTile, frameState, layerState);\n    _ol_renderer_canvas_TileLayer_.prototype.drawTileImage.apply(this, arguments);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  var resolution = frameState.viewState.resolution;\n  var rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  var layer = this.getLayer();\n  /** @type {Object.<string, boolean>} */\n  var features = {};\n\n  /** @type {Array.<ol.VectorImageTile>} */\n  var renderedTiles = this.renderedTiles;\n\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var bufferedExtent, found;\n  var i, ii, replayGroup;\n  var tile, tileCoord, tileExtent;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    tile = renderedTiles[i];\n    tileCoord = tile.wrappedTileCoord;\n    tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    bufferedExtent = _ol_extent_.buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\n    if (!_ol_extent_.containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(\n          coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {ol.Feature|ol.render.Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = _ol_.getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {ol.VectorTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @return {ol.Transform} transform Transform.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.getReplayTransform_ = function(tile, frameState) {\n  var layer = this.getLayer();\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var tileGrid = source.getTileGrid();\n  var tileCoord = tile.tileCoord;\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var viewState = frameState.viewState;\n  var pixelRatio = frameState.pixelRatio;\n  var renderResolution = viewState.resolution / pixelRatio;\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  var center = viewState.center;\n  var origin = _ol_extent_.getTopLeft(tileExtent);\n  var size = frameState.size;\n  var offsetX = Math.round(pixelRatio * size[0] / 2);\n  var offsetY = Math.round(pixelRatio * size[1] / 2);\n  return _ol_transform_.compose(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.postCompose = function(context, frameState, layerState) {\n  var layer = this.getLayer();\n  var declutterReplays = layer.getDeclutter() ? {} : null;\n  var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n  var renderMode = layer.getRenderMode();\n  var replayTypes = _ol_renderer_canvas_VectorTileLayer_.VECTOR_REPLAYS[renderMode];\n  var pixelRatio = frameState.pixelRatio;\n  var rotation = frameState.viewState.rotation;\n  var size = frameState.size;\n  var offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    _ol_render_canvas_.rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  var tiles = this.renderedTiles;\n  var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  var clips = [];\n  var zs = [];\n  for (var i = tiles.length - 1; i >= 0; --i) {\n    var tile = /** @type {ol.VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == _ol_TileState_.ABORT) {\n      continue;\n    }\n    var tileCoord = tile.tileCoord;\n    var worldOffset = tileGrid.getTileCoordExtent(tileCoord)[0] -\n        tileGrid.getTileCoordExtent(tile.wrappedTileCoord)[0];\n    var transform = undefined;\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != _ol_layer_VectorTileRenderType_.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      var currentZ = sourceTile.tileCoord[0];\n      var currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (var j = 0, jj = clips.length; j < jj; ++j) {\n        var clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    _ol_render_canvas_ReplayGroup_.replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    _ol_render_canvas_.rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  _ol_renderer_canvas_TileLayer_.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {ol.VectorImageTile} tile Tile.\n * @param {olx.FrameState} frameState Frame state.\n * @param {ol.LayerState} layerState Layer state.\n * @private\n */\n_ol_renderer_canvas_VectorTileLayer_.prototype.renderTileImage_ = function(\n    tile, frameState, layerState) {\n  var layer = this.getLayer();\n  var replayState = tile.getReplayState(layer);\n  var revision = layer.getRevision();\n  var replays = _ol_renderer_canvas_VectorTileLayer_.IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    var tileCoord = tile.wrappedTileCoord;\n    var z = tileCoord[0];\n    var pixelRatio = frameState.pixelRatio;\n    var source = /** @type {ol.source.VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    var resolution = tileGrid.getResolution(z);\n    var context = tile.getContext(layer);\n    var size = source.getTilePixelSize(z, pixelRatio, frameState.viewState.projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      var sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() == _ol_TileState_.ERROR) {\n        continue;\n      }\n      var pixelScale = pixelRatio / resolution;\n      var transform = _ol_transform_.reset(this.tmpTransform_);\n      _ol_transform_.scale(transform, pixelScale, -pixelScale);\n      _ol_transform_.translate(transform, -tileExtent[0], -tileExtent[3]);\n      var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\nexport default _ol_renderer_canvas_VectorTileLayer_;\n"]},"metadata":{},"sourceType":"module"}
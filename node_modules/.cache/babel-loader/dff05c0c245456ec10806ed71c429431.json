{"ast":null,"code":"/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nvar _ol_TileRange_ = function (minX, maxX, minY, maxY) {\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n  /**\n   * @type {number}\n   */\n\n  this.maxX = maxX;\n  /**\n   * @type {number}\n   */\n\n  this.minY = minY;\n  /**\n   * @type {number}\n   */\n\n  this.maxY = maxY;\n};\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {ol.TileRange|undefined} tileRange TileRange.\n * @return {ol.TileRange} Tile range.\n */\n\n\n_ol_TileRange_.createOrUpdate = function (minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new _ol_TileRange_(minX, maxX, minY, maxY);\n  }\n};\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n\n\n_ol_TileRange_.prototype.contains = function (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n\n\n_ol_TileRange_.prototype.containsTileRange = function (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n\n\n_ol_TileRange_.prototype.containsXY = function (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n\n\n_ol_TileRange_.prototype.equals = function (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n/**\n * @param {ol.TileRange} tileRange Tile range.\n */\n\n\n_ol_TileRange_.prototype.extend = function (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n/**\n * @return {number} Height.\n */\n\n\n_ol_TileRange_.prototype.getHeight = function () {\n  return this.maxY - this.minY + 1;\n};\n/**\n * @return {ol.Size} Size.\n */\n\n\n_ol_TileRange_.prototype.getSize = function () {\n  return [this.getWidth(), this.getHeight()];\n};\n/**\n * @return {number} Width.\n */\n\n\n_ol_TileRange_.prototype.getWidth = function () {\n  return this.maxX - this.minX + 1;\n};\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\n\n\n_ol_TileRange_.prototype.intersects = function (tileRange) {\n  return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n};\n\nexport default _ol_TileRange_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/tilerange.js"],"names":["_ol_TileRange_","minX","maxX","minY","maxY","createOrUpdate","tileRange","undefined","prototype","contains","tileCoord","containsXY","containsTileRange","x","y","equals","extend","getHeight","getSize","getWidth","intersects"],"mappings":"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","sourcesContent":["/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nvar _ol_TileRange_ = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {ol.TileRange|undefined} tileRange TileRange.\n * @return {ol.TileRange} Tile range.\n */\n_ol_TileRange_.createOrUpdate = function(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new _ol_TileRange_(minX, maxX, minY, maxY);\n  }\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n_ol_TileRange_.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n_ol_TileRange_.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n_ol_TileRange_.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n_ol_TileRange_.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n */\n_ol_TileRange_.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\n_ol_TileRange_.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {ol.Size} Size.\n */\n_ol_TileRange_.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\n_ol_TileRange_.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {ol.TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\n_ol_TileRange_.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default _ol_TileRange_;\n"]},"metadata":{},"sourceType":"module"}
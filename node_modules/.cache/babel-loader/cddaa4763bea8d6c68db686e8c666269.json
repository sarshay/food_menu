{"ast":null,"code":"var _ol_proj_projections_ = {};\n/**\n * @private\n * @type {Object.<string, ol.proj.Projection>}\n */\n\n_ol_proj_projections_.cache_ = {};\n/**\n * Clear the projections cache.\n */\n\n_ol_proj_projections_.clear = function () {\n  _ol_proj_projections_.cache_ = {};\n};\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {ol.proj.Projection} The projection (if cached).\n */\n\n\n_ol_proj_projections_.get = function (code) {\n  var projections = _ol_proj_projections_.cache_;\n  return projections[code] || null;\n};\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {ol.proj.Projection} projection The projection to cache.\n */\n\n\n_ol_proj_projections_.add = function (code, projection) {\n  var projections = _ol_proj_projections_.cache_;\n  projections[code] = projection;\n};\n\nexport default _ol_proj_projections_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/proj/projections.js"],"names":["_ol_proj_projections_","cache_","clear","get","code","projections","add","projection"],"mappings":"AAAA,IAAIA,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;AACA;;AACAA,qBAAqB,CAACC,MAAtB,GAA+B,EAA/B;AAGA;AACA;AACA;;AACAD,qBAAqB,CAACE,KAAtB,GAA8B,YAAW;AACvCF,EAAAA,qBAAqB,CAACC,MAAtB,GAA+B,EAA/B;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAD,qBAAqB,CAACG,GAAtB,GAA4B,UAASC,IAAT,EAAe;AACzC,MAAIC,WAAW,GAAGL,qBAAqB,CAACC,MAAxC;AACA,SAAOI,WAAW,CAACD,IAAD,CAAX,IAAqB,IAA5B;AACD,CAHD;AAMA;AACA;AACA;AACA;AACA;;;AACAJ,qBAAqB,CAACM,GAAtB,GAA4B,UAASF,IAAT,EAAeG,UAAf,EAA2B;AACrD,MAAIF,WAAW,GAAGL,qBAAqB,CAACC,MAAxC;AACAI,EAAAA,WAAW,CAACD,IAAD,CAAX,GAAoBG,UAApB;AACD,CAHD;;AAIA,eAAeP,qBAAf","sourcesContent":["var _ol_proj_projections_ = {};\n\n\n/**\n * @private\n * @type {Object.<string, ol.proj.Projection>}\n */\n_ol_proj_projections_.cache_ = {};\n\n\n/**\n * Clear the projections cache.\n */\n_ol_proj_projections_.clear = function() {\n  _ol_proj_projections_.cache_ = {};\n};\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {ol.proj.Projection} The projection (if cached).\n */\n_ol_proj_projections_.get = function(code) {\n  var projections = _ol_proj_projections_.cache_;\n  return projections[code] || null;\n};\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {ol.proj.Projection} projection The projection to cache.\n */\n_ol_proj_projections_.add = function(code, projection) {\n  var projections = _ol_proj_projections_.cache_;\n  projections[code] = projection;\n};\nexport default _ol_proj_projections_;\n"]},"metadata":{},"sourceType":"module"}
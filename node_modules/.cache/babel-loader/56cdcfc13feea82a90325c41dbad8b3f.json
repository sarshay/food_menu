{"ast":null,"code":"var _ol_ = {};\n/**\n * Constants defined with the define tag cannot be changed in application\n * code, but can be set at compile time.\n * Some reduce the size of the build in advanced compile mode.\n */\n\n/**\n * @define {boolean} Assume touch.  Default is `false`.\n */\n\n_ol_.ASSUME_TOUCH = false;\n/**\n * TODO: rename this to something having to do with tile grids\n * see https://github.com/openlayers/openlayers/issues/2076\n * @define {number} Default maximum zoom for default tile grids.\n */\n\n_ol_.DEFAULT_MAX_ZOOM = 42;\n/**\n * @define {number} Default min zoom level for the map view.  Default is `0`.\n */\n\n_ol_.DEFAULT_MIN_ZOOM = 0;\n/**\n * @define {number} Default maximum allowed threshold  (in pixels) for\n *     reprojection triangulation. Default is `0.5`.\n */\n\n_ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD = 0.5;\n/**\n * @define {number} Default tile size.\n */\n\n_ol_.DEFAULT_TILE_SIZE = 256;\n/**\n * @define {string} Default WMS version.\n */\n\n_ol_.DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * @define {boolean} Enable the Canvas renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the Canvas renderer from the build.\n */\n\n_ol_.ENABLE_CANVAS = true;\n/**\n * @define {boolean} Enable integration with the Proj4js library.  Default is\n *     `true`.\n */\n\n_ol_.ENABLE_PROJ4JS = true;\n/**\n * @define {boolean} Enable automatic reprojection of raster sources. Default is\n *     `true`.\n */\n\n_ol_.ENABLE_RASTER_REPROJECTION = true;\n/**\n * @define {boolean} Enable the WebGL renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the WebGL renderer from the build.\n */\n\n_ol_.ENABLE_WEBGL = true;\n/**\n * @define {boolean} Include debuggable shader sources.  Default is `true`.\n *     This should be set to `false` for production builds (if `ol.ENABLE_WEBGL`\n *     is `true`).\n */\n\n_ol_.DEBUG_WEBGL = true;\n/**\n * @define {number} The size in pixels of the first atlas image. Default is\n * `256`.\n */\n\n_ol_.INITIAL_ATLAS_SIZE = 256;\n/**\n * @define {number} The maximum size in pixels of atlas images. Default is\n * `-1`, meaning it is not used (and `ol.WEBGL_MAX_TEXTURE_SIZE` is\n * used instead).\n */\n\n_ol_.MAX_ATLAS_SIZE = -1;\n/**\n * @define {number} Maximum mouse wheel delta.\n */\n\n_ol_.MOUSEWHEELZOOM_MAXDELTA = 1;\n/**\n * @define {number} Maximum width and/or height extent ratio that determines\n * when the overview map should be zoomed out.\n */\n\n_ol_.OVERVIEWMAP_MAX_RATIO = 0.75;\n/**\n * @define {number} Minimum width and/or height extent ratio that determines\n * when the overview map should be zoomed in.\n */\n\n_ol_.OVERVIEWMAP_MIN_RATIO = 0.1;\n/**\n * @define {number} Maximum number of source tiles for raster reprojection of\n *     a single tile.\n *     If too many source tiles are determined to be loaded to create a single\n *     reprojected tile the browser can become unresponsive or even crash.\n *     This can happen if the developer defines projections improperly and/or\n *     with unlimited extents.\n *     If too many tiles are required, no tiles are loaded and\n *     `ol.TileState.ERROR` state is set. Default is `100`.\n */\n\n_ol_.RASTER_REPROJECTION_MAX_SOURCE_TILES = 100;\n/**\n * @define {number} Maximum number of subdivision steps during raster\n *     reprojection triangulation. Prevents high memory usage and large\n *     number of proj4 calls (for certain transformations and areas).\n *     At most `2*(2^this)` triangles are created for each triangulated\n *     extent (tile/image). Default is `10`.\n */\n\n_ol_.RASTER_REPROJECTION_MAX_SUBDIVISION = 10;\n/**\n * @define {number} Maximum allowed size of triangle relative to world width.\n *     When transforming corners of world extent between certain projections,\n *     the resulting triangulation seems to have zero error and no subdivision\n *     is performed.\n *     If the triangle width is more than this (relative to world width; 0-1),\n *     subdivison is forced (up to `ol.RASTER_REPROJECTION_MAX_SUBDIVISION`).\n *     Default is `0.25`.\n */\n\n_ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @define {number} Tolerance for geometry simplification in device pixels.\n */\n\n_ol_.SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @define {number} Texture cache high water mark.\n */\n\n_ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n/**\n * @define {string} OpenLayers version.\n */\n\n_ol_.VERSION = 'v4.6.5';\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @const\n * @type {number|undefined}\n */\n\n_ol_.WEBGL_MAX_TEXTURE_SIZE; // value is set in `ol.has`\n\n/**\n * List of supported WebGL extensions.\n * @const\n * @type {Array.<string>}\n */\n\n_ol_.WEBGL_EXTENSIONS; // value is set in `ol.has`\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     ol.inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\n\n_ol_.inherits = function (childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n};\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\n\n\n_ol_.nullFunction = function () {};\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\n\n\n_ol_.getUid = function (obj) {\n  return obj.ol_uid || (obj.ol_uid = ++_ol_.uidCounter_);\n};\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n\n\n_ol_.uidCounter_ = 0;\nexport default _ol_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/index.js"],"names":["_ol_","ASSUME_TOUCH","DEFAULT_MAX_ZOOM","DEFAULT_MIN_ZOOM","DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD","DEFAULT_TILE_SIZE","DEFAULT_WMS_VERSION","ENABLE_CANVAS","ENABLE_PROJ4JS","ENABLE_RASTER_REPROJECTION","ENABLE_WEBGL","DEBUG_WEBGL","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","MOUSEWHEELZOOM_MAXDELTA","OVERVIEWMAP_MAX_RATIO","OVERVIEWMAP_MIN_RATIO","RASTER_REPROJECTION_MAX_SOURCE_TILES","RASTER_REPROJECTION_MAX_SUBDIVISION","RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH","SIMPLIFY_TOLERANCE","WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK","VERSION","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","inherits","childCtor","parentCtor","prototype","Object","create","constructor","nullFunction","getUid","obj","ol_uid","uidCounter_"],"mappings":"AAAA,IAAIA,IAAI,GAAG,EAAX;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AACAA,IAAI,CAACC,YAAL,GAAoB,KAApB;AAGA;AACA;AACA;AACA;AACA;;AACAD,IAAI,CAACE,gBAAL,GAAwB,EAAxB;AAGA;AACA;AACA;;AACAF,IAAI,CAACG,gBAAL,GAAwB,CAAxB;AAGA;AACA;AACA;AACA;;AACAH,IAAI,CAACI,2CAAL,GAAmD,GAAnD;AAGA;AACA;AACA;;AACAJ,IAAI,CAACK,iBAAL,GAAyB,GAAzB;AAGA;AACA;AACA;;AACAL,IAAI,CAACM,mBAAL,GAA2B,OAA3B;AAGA;AACA;AACA;AACA;AACA;;AACAN,IAAI,CAACO,aAAL,GAAqB,IAArB;AAGA;AACA;AACA;AACA;;AACAP,IAAI,CAACQ,cAAL,GAAsB,IAAtB;AAGA;AACA;AACA;AACA;;AACAR,IAAI,CAACS,0BAAL,GAAkC,IAAlC;AAGA;AACA;AACA;AACA;AACA;;AACAT,IAAI,CAACU,YAAL,GAAoB,IAApB;AAGA;AACA;AACA;AACA;AACA;;AACAV,IAAI,CAACW,WAAL,GAAmB,IAAnB;AAGA;AACA;AACA;AACA;;AACAX,IAAI,CAACY,kBAAL,GAA0B,GAA1B;AAGA;AACA;AACA;AACA;AACA;;AACAZ,IAAI,CAACa,cAAL,GAAsB,CAAC,CAAvB;AAGA;AACA;AACA;;AACAb,IAAI,CAACc,uBAAL,GAA+B,CAA/B;AAGA;AACA;AACA;AACA;;AACAd,IAAI,CAACe,qBAAL,GAA6B,IAA7B;AAGA;AACA;AACA;AACA;;AACAf,IAAI,CAACgB,qBAAL,GAA6B,GAA7B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAhB,IAAI,CAACiB,oCAAL,GAA4C,GAA5C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjB,IAAI,CAACkB,mCAAL,GAA2C,EAA3C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlB,IAAI,CAACmB,sCAAL,GAA8C,IAA9C;AAGA;AACA;AACA;;AACAnB,IAAI,CAACoB,kBAAL,GAA0B,GAA1B;AAGA;AACA;AACA;;AACApB,IAAI,CAACqB,mCAAL,GAA2C,IAA3C;AAGA;AACA;AACA;;AACArB,IAAI,CAACsB,OAAL,GAAe,QAAf;AAGA;AACA;AACA;AACA;AACA;AACA;;AACAtB,IAAI,CAACuB,sBAAL,C,CAA6B;;AAG7B;AACA;AACA;AACA;AACA;;AACAvB,IAAI,CAACwB,gBAAL,C,CAAuB;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAxB,IAAI,CAACyB,QAAL,GAAgB,UAASC,SAAT,EAAoBC,UAApB,EAAgC;AAC9CD,EAAAA,SAAS,CAACE,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAAtB;AACAF,EAAAA,SAAS,CAACE,SAAV,CAAoBG,WAApB,GAAkCL,SAAlC;AACD,CAHD;AAMA;AACA;AACA;AACA;AACA;;;AACA1B,IAAI,CAACgC,YAAL,GAAoB,YAAW,CAAE,CAAjC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhC,IAAI,CAACiC,MAAL,GAAc,UAASC,GAAT,EAAc;AAC1B,SAAOA,GAAG,CAACC,MAAJ,KACFD,GAAG,CAACC,MAAJ,GAAa,EAAEnC,IAAI,CAACoC,WADlB,CAAP;AAED,CAHD;AAMA;AACA;AACA;AACA;AACA;;;AACApC,IAAI,CAACoC,WAAL,GAAmB,CAAnB;AACA,eAAepC,IAAf","sourcesContent":["var _ol_ = {};\n\n\n/**\n * Constants defined with the define tag cannot be changed in application\n * code, but can be set at compile time.\n * Some reduce the size of the build in advanced compile mode.\n */\n\n\n/**\n * @define {boolean} Assume touch.  Default is `false`.\n */\n_ol_.ASSUME_TOUCH = false;\n\n\n/**\n * TODO: rename this to something having to do with tile grids\n * see https://github.com/openlayers/openlayers/issues/2076\n * @define {number} Default maximum zoom for default tile grids.\n */\n_ol_.DEFAULT_MAX_ZOOM = 42;\n\n\n/**\n * @define {number} Default min zoom level for the map view.  Default is `0`.\n */\n_ol_.DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @define {number} Default maximum allowed threshold  (in pixels) for\n *     reprojection triangulation. Default is `0.5`.\n */\n_ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD = 0.5;\n\n\n/**\n * @define {number} Default tile size.\n */\n_ol_.DEFAULT_TILE_SIZE = 256;\n\n\n/**\n * @define {string} Default WMS version.\n */\n_ol_.DEFAULT_WMS_VERSION = '1.3.0';\n\n\n/**\n * @define {boolean} Enable the Canvas renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the Canvas renderer from the build.\n */\n_ol_.ENABLE_CANVAS = true;\n\n\n/**\n * @define {boolean} Enable integration with the Proj4js library.  Default is\n *     `true`.\n */\n_ol_.ENABLE_PROJ4JS = true;\n\n\n/**\n * @define {boolean} Enable automatic reprojection of raster sources. Default is\n *     `true`.\n */\n_ol_.ENABLE_RASTER_REPROJECTION = true;\n\n\n/**\n * @define {boolean} Enable the WebGL renderer.  Default is `true`. Setting\n *     this to false at compile time in advanced mode removes all code\n *     supporting the WebGL renderer from the build.\n */\n_ol_.ENABLE_WEBGL = true;\n\n\n/**\n * @define {boolean} Include debuggable shader sources.  Default is `true`.\n *     This should be set to `false` for production builds (if `ol.ENABLE_WEBGL`\n *     is `true`).\n */\n_ol_.DEBUG_WEBGL = true;\n\n\n/**\n * @define {number} The size in pixels of the first atlas image. Default is\n * `256`.\n */\n_ol_.INITIAL_ATLAS_SIZE = 256;\n\n\n/**\n * @define {number} The maximum size in pixels of atlas images. Default is\n * `-1`, meaning it is not used (and `ol.WEBGL_MAX_TEXTURE_SIZE` is\n * used instead).\n */\n_ol_.MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @define {number} Maximum mouse wheel delta.\n */\n_ol_.MOUSEWHEELZOOM_MAXDELTA = 1;\n\n\n/**\n * @define {number} Maximum width and/or height extent ratio that determines\n * when the overview map should be zoomed out.\n */\n_ol_.OVERVIEWMAP_MAX_RATIO = 0.75;\n\n\n/**\n * @define {number} Minimum width and/or height extent ratio that determines\n * when the overview map should be zoomed in.\n */\n_ol_.OVERVIEWMAP_MIN_RATIO = 0.1;\n\n\n/**\n * @define {number} Maximum number of source tiles for raster reprojection of\n *     a single tile.\n *     If too many source tiles are determined to be loaded to create a single\n *     reprojected tile the browser can become unresponsive or even crash.\n *     This can happen if the developer defines projections improperly and/or\n *     with unlimited extents.\n *     If too many tiles are required, no tiles are loaded and\n *     `ol.TileState.ERROR` state is set. Default is `100`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SOURCE_TILES = 100;\n\n\n/**\n * @define {number} Maximum number of subdivision steps during raster\n *     reprojection triangulation. Prevents high memory usage and large\n *     number of proj4 calls (for certain transformations and areas).\n *     At most `2*(2^this)` triangles are created for each triangulated\n *     extent (tile/image). Default is `10`.\n */\n_ol_.RASTER_REPROJECTION_MAX_SUBDIVISION = 10;\n\n\n/**\n * @define {number} Maximum allowed size of triangle relative to world width.\n *     When transforming corners of world extent between certain projections,\n *     the resulting triangulation seems to have zero error and no subdivision\n *     is performed.\n *     If the triangle width is more than this (relative to world width; 0-1),\n *     subdivison is forced (up to `ol.RASTER_REPROJECTION_MAX_SUBDIVISION`).\n *     Default is `0.25`.\n */\n_ol_.RASTER_REPROJECTION_MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @define {number} Tolerance for geometry simplification in device pixels.\n */\n_ol_.SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @define {number} Texture cache high water mark.\n */\n_ol_.WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @define {string} OpenLayers version.\n */\n_ol_.VERSION = 'v4.6.5';\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @const\n * @type {number|undefined}\n */\n_ol_.WEBGL_MAX_TEXTURE_SIZE; // value is set in `ol.has`\n\n\n/**\n * List of supported WebGL extensions.\n * @const\n * @type {Array.<string>}\n */\n_ol_.WEBGL_EXTENSIONS; // value is set in `ol.has`\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     ol.inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\n_ol_.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\n_ol_.nullFunction = function() {};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\n_ol_.getUid = function(obj) {\n  return obj.ol_uid ||\n      (obj.ol_uid = ++_ol_.uidCounter_);\n};\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n_ol_.uidCounter_ = 0;\nexport default _ol_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _ol_geom_flat_segments_ = {};\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, ol.Coordinate, ol.Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\n\n_ol_geom_flat_segments_.forEach = function (flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n\n    if (ret) {\n      return ret;\n    }\n\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n\n  return false;\n};\n\nexport default _ol_geom_flat_segments_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/geom/flat/segments.js"],"names":["_ol_geom_flat_segments_","forEach","flatCoordinates","offset","end","stride","callback","opt_this","point1","point2","ret","call"],"mappings":"AAAA,IAAIA,uBAAuB,GAAG,EAA9B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,uBAAuB,CAACC,OAAxB,GAAkC,UAASC,eAAT,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyDC,QAAzD,EAAmE;AACnG,MAAIC,MAAM,GAAG,CAACN,eAAe,CAACC,MAAD,CAAhB,EAA0BD,eAAe,CAACC,MAAM,GAAG,CAAV,CAAzC,CAAb;AACA,MAAIM,MAAM,GAAG,EAAb;AACA,MAAIC,GAAJ;;AACA,SAAQP,MAAM,GAAGE,MAAV,GAAoBD,GAA3B,EAAgCD,MAAM,IAAIE,MAA1C,EAAkD;AAChDI,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYP,eAAe,CAACC,MAAM,GAAGE,MAAV,CAA3B;AACAI,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYP,eAAe,CAACC,MAAM,GAAGE,MAAT,GAAkB,CAAnB,CAA3B;AACAK,IAAAA,GAAG,GAAGJ,QAAQ,CAACK,IAAT,CAAcJ,QAAd,EAAwBC,MAAxB,EAAgCC,MAAhC,CAAN;;AACA,QAAIC,GAAJ,EAAS;AACP,aAAOA,GAAP;AACD;;AACDF,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,MAAM,CAAC,CAAD,CAAlB;AACAD,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYC,MAAM,CAAC,CAAD,CAAlB;AACD;;AACD,SAAO,KAAP;AACD,CAfD;;AAgBA,eAAeT,uBAAf","sourcesContent":["var _ol_geom_flat_segments_ = {};\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, ol.Coordinate, ol.Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\n_ol_geom_flat_segments_.forEach = function(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n};\nexport default _ol_geom_flat_segments_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\n\nvar _ol_geom_SimpleGeometry_ = function () {\n  _ol_geom_Geometry_.call(this);\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n\n\n  this.layout = _ol_geom_GeometryLayout_.XY;\n  /**\n   * @protected\n   * @type {number}\n   */\n\n  this.stride = 2;\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n\n  this.flatCoordinates = null;\n};\n\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n\n\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function (stride) {\n  var layout;\n\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n\n  return (\n    /** @type {ol.geom.GeometryLayout} */\n    layout\n  );\n};\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n\n\n_ol_geom_SimpleGeometry_.getStrideForLayout = function (layout) {\n  var stride;\n\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n\n  return (\n    /** @type {number} */\n    stride\n  );\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n/**\n * @inheritDoc\n */\n\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function (extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n};\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function () {};\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function () {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function () {\n  return this.flatCoordinates;\n};\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function () {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getLayout = function () {\n  return this.layout;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  } // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n\n\n  if (squaredTolerance < 0 || this.simplifiedGeometryMaxMinSquaredTolerance !== 0 && squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance) {\n    return this;\n  }\n\n  var key = squaredTolerance.toString();\n\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n  return this;\n};\n/**\n * @return {number} Stride.\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.getStride = function () {\n  return this.stride;\n};\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function (layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function (coordinates, opt_layout) {};\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.setLayout = function (layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates =\n        /** @type {Array} */\n        coordinates[0];\n      }\n    }\n\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n\n  this.layout = layout;\n  this.stride = stride;\n};\n/**\n * @inheritDoc\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function (transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n/**\n * @inheritDoc\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.rotate = function (angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n\n  if (flatCoordinates) {\n    var stride = this.getStride();\n\n    _ol_geom_flat_transform_.rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n\n    this.changed();\n  }\n};\n/**\n * @inheritDoc\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.scale = function (sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n\n  if (sy === undefined) {\n    sy = sx;\n  }\n\n  var anchor = opt_anchor;\n\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n\n  var flatCoordinates = this.getFlatCoordinates();\n\n  if (flatCoordinates) {\n    var stride = this.getStride();\n\n    _ol_geom_flat_transform_.scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n\n    this.changed();\n  }\n};\n/**\n * @inheritDoc\n * @api\n */\n\n\n_ol_geom_SimpleGeometry_.prototype.translate = function (deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n\n  if (flatCoordinates) {\n    var stride = this.getStride();\n\n    _ol_geom_flat_transform_.translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n\n    this.changed();\n  }\n};\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n\n\n_ol_geom_SimpleGeometry_.transform2D = function (simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n  }\n};\n\nexport default _ol_geom_SimpleGeometry_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/geom/simplegeometry.js"],"names":["_ol_","_ol_functions_","_ol_extent_","_ol_geom_Geometry_","_ol_geom_GeometryLayout_","_ol_geom_flat_transform_","_ol_obj_","_ol_geom_SimpleGeometry_","call","layout","XY","stride","flatCoordinates","inherits","getLayoutForStride_","XYZ","XYZM","getStrideForLayout","XYM","prototype","containsXY","FALSE","computeExtent","extent","createOrUpdateFromFlatCoordinates","length","getCoordinates","getFirstCoordinate","slice","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","clear","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","key","toString","hasOwnProperty","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinatesInternal","setCoordinates","coordinates","opt_layout","setLayout","nesting","i","applyTransform","transformFn","changed","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","sy","undefined","getCenter","getExtent","translate","deltaX","deltaY","transform2D","simpleGeometry","transform","opt_dest"],"mappings":"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","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\nvar _ol_geom_SimpleGeometry_ = function() {\n\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n  this.layout = _ol_geom_GeometryLayout_.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n\n\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n  return /** @type {ol.geom.GeometryLayout} */ (layout);\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.getStrideForLayout = function(layout) {\n  var stride;\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.rotate = function(angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.translate = function(deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n_ol_geom_SimpleGeometry_.transform2D = function(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        transform, opt_dest);\n  }\n};\nexport default _ol_geom_SimpleGeometry_;\n"]},"metadata":{},"sourceType":"module"}
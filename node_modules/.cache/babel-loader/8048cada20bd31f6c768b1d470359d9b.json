{"ast":null,"code":"import _ol_ from '../../index.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\n\nvar _ol_render_webgl_ImageReplay_ = function (tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n\n\n  this.images_ = [];\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n\n  this.hitDetectionImages_ = [];\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n\n  this.textures_ = [];\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n\n  this.hitDetectionTextures_ = [];\n};\n\n_ol_.inherits(_ol_render_webgl_ImageReplay_, _ol_render_webgl_TextureReplay_);\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  this.drawCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.drawPoint = function (pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  this.drawCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.finish = function (context) {\n  var gl = context.getGL();\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length); // create, bind, and populate the vertices buffer\n\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n  var indices = this.indices; // create, bind, and populate the indices buffer\n\n  this.indicesBuffer = new _ol_webgl_Buffer_(indices); // create textures\n\n  /** @type {Object.<string, WebGLTexture>} */\n\n  var texturePerImage = {};\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_, texturePerImage, gl);\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.setImageStyle = function (imageStyle) {\n  var anchor = imageStyle.getAnchor();\n  var image = imageStyle.getImage(1);\n  var imageSize = imageStyle.getImageSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var opacity = imageStyle.getOpacity();\n  var origin = imageStyle.getOrigin();\n  var rotateWithView = imageStyle.getRotateWithView();\n  var rotation = imageStyle.getRotation();\n  var size = imageStyle.getSize();\n  var scale = imageStyle.getScale();\n  var currentImage;\n\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n\n    if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage = this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n\n    if (_ol_.getUid(currentImage) != _ol_.getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.getTextures = function (opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_webgl_ImageReplay_.prototype.getHitDetectionTextures = function () {\n  return this.hitDetectionTextures_;\n};\n\nexport default _ol_render_webgl_ImageReplay_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/render/webgl/imagereplay.js"],"names":["_ol_","_ol_render_webgl_TextureReplay_","_ol_webgl_Buffer_","_ol_render_webgl_ImageReplay_","tolerance","maxExtent","call","images_","hitDetectionImages_","textures_","hitDetectionTextures_","inherits","prototype","drawMultiPoint","multiPointGeometry","feature","startIndices","push","indices","length","startIndicesFeature","flatCoordinates","getFlatCoordinates","stride","getStride","drawCoordinates","drawPoint","pointGeometry","finish","context","gl","getGL","groupIndices","hitDetectionGroupIndices","verticesBuffer","vertices","indicesBuffer","texturePerImage","createTextures","setImageStyle","imageStyle","anchor","getAnchor","image","getImage","imageSize","getImageSize","hitDetectionImage","getHitDetectionImage","opacity","getOpacity","origin","getOrigin","rotateWithView","getRotateWithView","rotation","getRotation","size","getSize","scale","getScale","currentImage","getUid","anchorX","anchorY","height","imageHeight","imageWidth","originX","originY","width","getTextures","opt_all","concat","getHitDetectionTextures"],"mappings":"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","sourcesContent":["import _ol_ from '../../index.js';\nimport _ol_render_webgl_TextureReplay_ from '../webgl/texturereplay.js';\nimport _ol_webgl_Buffer_ from '../../webgl/buffer.js';\n\n/**\n * @constructor\n * @extends {ol.render.webgl.TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Max extent.\n * @struct\n */\nvar _ol_render_webgl_ImageReplay_ = function(tolerance, maxExtent) {\n  _ol_render_webgl_TextureReplay_.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\n_ol_.inherits(_ol_render_webgl_ImageReplay_, _ol_render_webgl_TextureReplay_);\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  var stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  var flatCoordinates = pointGeometry.getFlatCoordinates();\n  var stride = pointGeometry.getStride();\n  this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.finish = function(context) {\n  var gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new _ol_webgl_Buffer_(this.vertices);\n\n  var indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new _ol_webgl_Buffer_(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  var texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  _ol_render_webgl_TextureReplay_.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.setImageStyle = function(imageStyle) {\n  var anchor = imageStyle.getAnchor();\n  var image = imageStyle.getImage(1);\n  var imageSize = imageStyle.getImageSize();\n  var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  var opacity = imageStyle.getOpacity();\n  var origin = imageStyle.getOrigin();\n  var rotateWithView = imageStyle.getRotateWithView();\n  var rotation = imageStyle.getRotation();\n  var size = imageStyle.getSize();\n  var scale = imageStyle.getScale();\n\n  var currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (_ol_.getUid(currentImage) != _ol_.getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_webgl_ImageReplay_.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default _ol_render_webgl_ImageReplay_;\n"]},"metadata":{},"sourceType":"module"}
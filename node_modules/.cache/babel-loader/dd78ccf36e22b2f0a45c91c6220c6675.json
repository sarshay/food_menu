{"ast":null,"code":"import _ol_ from '../index.js';\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {olx.style.StrokeOptions=} opt_options Options.\n * @api\n */\n\nvar _ol_style_Stroke_ = function (opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n\n  this.color_ = options.color !== undefined ? options.color : null;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineCap_ = options.lineCap;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.lineDashOffset_ = options.lineDashOffset;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineJoin_ = options.lineJoin;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.miterLimit_ = options.miterLimit;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.width_ = options.width;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.checksum_ = undefined;\n};\n/**\n * Clones the style.\n * @return {ol.style.Stroke} The cloned style.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.clone = function () {\n  var color = this.getColor();\n  return new _ol_style_Stroke_({\n    color: color && color.slice ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n/**\n * Get the stroke color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getColor = function () {\n  return this.color_;\n};\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getLineCap = function () {\n  return this.lineCap_;\n};\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getLineDash = function () {\n  return this.lineDash_;\n};\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getLineDashOffset = function () {\n  return this.lineDashOffset_;\n};\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getLineJoin = function () {\n  return this.lineJoin_;\n};\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getMiterLimit = function () {\n  return this.miterLimit_;\n};\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.getWidth = function () {\n  return this.width_;\n};\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setColor = function (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setLineCap = function (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setLineDash = function (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setLineDashOffset = function (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setLineJoin = function (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setMiterLimit = function (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n\n\n_ol_style_Stroke_.prototype.setWidth = function (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n/**\n * @return {string} The checksum.\n */\n\n\n_ol_style_Stroke_.prototype.getChecksum = function () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += _ol_.getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n\n    this.checksum_ += ',' + (this.lineCap_ !== undefined ? this.lineCap_.toString() : '-') + ',' + (this.lineDash_ ? this.lineDash_.toString() : '-') + ',' + (this.lineDashOffset_ !== undefined ? this.lineDashOffset_ : '-') + ',' + (this.lineJoin_ !== undefined ? this.lineJoin_ : '-') + ',' + (this.miterLimit_ !== undefined ? this.miterLimit_.toString() : '-') + ',' + (this.width_ !== undefined ? this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default _ol_style_Stroke_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/style/stroke.js"],"names":["_ol_","_ol_style_Stroke_","opt_options","options","color_","color","undefined","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","width","checksum_","prototype","clone","getColor","slice","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","getUid","toString"],"mappings":"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","sourcesContent":["import _ol_ from '../index.js';\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {olx.style.StrokeOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Stroke_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Stroke} The cloned style.\n * @api\n */\n_ol_style_Stroke_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Stroke_({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Stroke_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n_ol_style_Stroke_.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Stroke_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n_ol_style_Stroke_.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n_ol_style_Stroke_.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n_ol_style_Stroke_.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Stroke_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += _ol_.getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Stroke_;\n"]},"metadata":{},"sourceType":"module"}
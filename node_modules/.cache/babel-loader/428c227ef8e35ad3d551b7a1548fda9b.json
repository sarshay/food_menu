{"ast":null,"code":"// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\n\nvar _ol_pointer_NativeSource_ = function (dispatcher) {\n  var mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n};\n\n_ol_.inherits(_ol_pointer_NativeSource_, _ol_pointer_EventSource_);\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerDown = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerMove = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerUp = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerOut = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerOver = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.pointerCancel = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.lostPointerCapture = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n\n\n_ol_pointer_NativeSource_.prototype.gotPointerCapture = function (inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\nexport default _ol_pointer_NativeSource_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/pointer/nativesource.js"],"names":["_ol_","_ol_pointer_EventSource_","_ol_pointer_NativeSource_","dispatcher","mapping","pointerDown","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","gotPointerCapture","lostPointerCapture","call","inherits","prototype","inEvent","fireNativeEvent"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB,GAAG,UAASC,UAAT,EAAqB;AACnD,MAAIC,OAAO,GAAG;AACZ,mBAAe,KAAKC,WADR;AAEZ,mBAAe,KAAKC,WAFR;AAGZ,iBAAa,KAAKC,SAHN;AAIZ,kBAAc,KAAKC,UAJP;AAKZ,mBAAe,KAAKC,WALR;AAMZ,qBAAiB,KAAKC,aANV;AAOZ,yBAAqB,KAAKC,iBAPd;AAQZ,0BAAsB,KAAKC;AARf,GAAd;;AAUAX,EAAAA,wBAAwB,CAACY,IAAzB,CAA8B,IAA9B,EAAoCV,UAApC,EAAgDC,OAAhD;AACD,CAZD;;AAcAJ,IAAI,CAACc,QAAL,CAAcZ,yBAAd,EAAyCD,wBAAzC;AAGA;AACA;AACA;AACA;AACA;;;AACAC,yBAAyB,CAACa,SAA1B,CAAoCV,WAApC,GAAkD,UAASW,OAAT,EAAkB;AAClE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCT,WAApC,GAAkD,UAASU,OAAT,EAAkB;AAClE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCR,SAApC,GAAgD,UAASS,OAAT,EAAkB;AAChE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCP,UAApC,GAAiD,UAASQ,OAAT,EAAkB;AACjE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCN,WAApC,GAAkD,UAASO,OAAT,EAAkB;AAClE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCL,aAApC,GAAoD,UAASM,OAAT,EAAkB;AACpE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCH,kBAApC,GAAyD,UAASI,OAAT,EAAkB;AACzE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAd,yBAAyB,CAACa,SAA1B,CAAoCJ,iBAApC,GAAwD,UAASK,OAAT,EAAkB;AACxE,OAAKb,UAAL,CAAgBc,eAAhB,CAAgCD,OAAhC;AACD,CAFD;;AAGA,eAAed,yBAAf","sourcesContent":["// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _ol_ from '../index.js';\nimport _ol_pointer_EventSource_ from '../pointer/eventsource.js';\n\n/**\n * @param {ol.pointer.PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {ol.pointer.EventSource}\n */\nvar _ol_pointer_NativeSource_ = function(dispatcher) {\n  var mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  _ol_pointer_EventSource_.call(this, dispatcher, mapping);\n};\n\n_ol_.inherits(_ol_pointer_NativeSource_, _ol_pointer_EventSource_);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\n_ol_pointer_NativeSource_.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default _ol_pointer_NativeSource_;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import EventType from 'ol/events/EventType.js';\nimport { labelCache } from 'ol/render/canvas.js';\nimport { listen } from 'ol/events.js';\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\n\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n};\nexport function deg2rad(degrees) {\n  return degrees * Math.PI / 180;\n}\nexport var defaultResolutions = function () {\n  var resolutions = [];\n\n  for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n\n  return resolutions;\n}();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\n\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n    // eslint-disable-line\n    return (\n      /** @type {?} */\n      new OffscreenCanvas(width, height)\n    );\n  } else {\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\nexport function getZoomForResolution(resolution, resolutions) {\n  var i = 0;\n  var ii = resolutions.length;\n\n  for (; i < ii; ++i) {\n    var candidate = resolutions[i];\n\n    if (candidate < resolution && i + 1 < ii) {\n      var zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n\n  return ii - 1;\n}\nvar hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    var textWithLetterSpacing = '';\n    var lines = text.split('\\n');\n    var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n\n    for (var l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n\n    return textWithLetterSpacing;\n  }\n\n  return text;\n}\nvar measureContext;\n\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\n\nvar measureCache = {};\n\nif (labelCache) {\n  // Only available when using ES modules\n  //@ts-ignore\n  listen(labelCache, EventType.CLEAR, function () {\n    measureCache = {};\n  });\n}\n\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    var hardLines = text.split('\\n');\n    var lines = [];\n\n    for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n\n    return lines.join('\\n');\n  }\n\n  var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  var wrappedText = measureCache[key];\n\n  if (!wrappedText) {\n    var words = text.split(' ');\n\n    if (words.length > 1) {\n      var ctx = getMeasureContext();\n      ctx.font = font;\n      var oneEm = ctx.measureText('M').width;\n      var maxWidth = oneEm * em;\n      var line = '';\n      var lines = []; // Pass 1 - wrap lines to not exceed maxWidth\n\n      for (var i = 0, ii = words.length; i < ii; ++i) {\n        var word = words[i];\n        var testLine = line + (line ? ' ' : '') + word;\n\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n\n          line = word;\n        }\n      }\n\n      if (line) {\n        lines.push(line);\n      } // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n\n\n      for (var i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        var line_1 = lines[i];\n\n        if (measureText(line_1, letterSpacing) < maxWidth * 0.35) {\n          var prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          var nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line_1;\n            i -= 1;\n          } else {\n            lines[i] = line_1 + ' ' + lines[i];\n          }\n        }\n      } // Pass 3 - try to fill 80% of maxWidth for each line\n\n\n      for (var i = 0, ii = lines.length - 1; i < ii; ++i) {\n        var line_2 = lines[i];\n        var next = lines[i + 1];\n\n        if (measureText(line_2, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n          var lineWords = line_2.split(' ');\n          var lastWord = lineWords.pop();\n\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n\n          ii -= 1;\n        }\n      }\n\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n\n  return wrappedText;\n}","map":{"version":3,"sources":["../src/util.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import EventType from 'ol/events/EventType.js';\nimport { labelCache } from 'ol/render/canvas.js';\nimport { listen } from 'ol/events.js';\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\nexport function deg2rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nexport var defaultResolutions = (function () {\n    var resolutions = [];\n    for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n})();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n        return /** @type {?} */ (new OffscreenCanvas(width, height));\n    }\n    else {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n}\nexport function getZoomForResolution(resolution, resolutions) {\n    var i = 0;\n    var ii = resolutions.length;\n    for (; i < ii; ++i) {\n        var candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            var zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nvar hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        var textWithLetterSpacing = '';\n        var lines = text.split('\\n');\n        var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (var l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nvar measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return (getMeasureContext().measureText(text).width +\n        (text.length - 1) * letterSpacing);\n}\nvar measureCache = {};\nif (labelCache) {\n    // Only available when using ES modules\n    //@ts-ignore\n    listen(labelCache, EventType.CLEAR, function () {\n        measureCache = {};\n    });\n}\nexport function wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        var hardLines = text.split('\\n');\n        var lines = [];\n        for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    var wrappedText = measureCache[key];\n    if (!wrappedText) {\n        var words = text.split(' ');\n        if (words.length > 1) {\n            var ctx = getMeasureContext();\n            ctx.font = font;\n            var oneEm = ctx.measureText('M').width;\n            var maxWidth = oneEm * em;\n            var line = '';\n            var lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (var i = 0, ii = words.length; i < ii; ++i) {\n                var word = words[i];\n                var testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                }\n                else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (var i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                var line_1 = lines[i];\n                if (measureText(line_1, letterSpacing) < maxWidth * 0.35) {\n                    var prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    var nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line_1;\n                        i -= 1;\n                    }\n                    else {\n                        lines[i] = line_1 + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (var i = 0, ii = lines.length - 1; i < ii; ++i) {\n                var line_2 = lines[i];\n                var next = lines[i + 1];\n                if (measureText(line_2, letterSpacing) > maxWidth * 0.7 &&\n                    measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    var lineWords = line_2.split(' ');\n                    var lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        }\n        else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_math_ from '../math.js';\nimport _ol_obj_ from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with `ol.layer.Base` and all its subclasses, any property set in\n * the options is set as a {@link ol.Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {olx.layer.BaseOptions} options Layer options.\n * @api\n */\n\nvar _ol_layer_Base_ = function (options) {\n  _ol_Object_.call(this);\n  /**\n   * @type {Object.<string, *>}\n   */\n\n\n  var properties = _ol_obj_.assign({}, options);\n\n  properties[_ol_layer_Property_.OPACITY] = options.opacity !== undefined ? options.opacity : 1;\n  properties[_ol_layer_Property_.VISIBLE] = options.visible !== undefined ? options.visible : true;\n  properties[_ol_layer_Property_.Z_INDEX] = options.zIndex !== undefined ? options.zIndex : 0;\n  properties[_ol_layer_Property_.MAX_RESOLUTION] = options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[_ol_layer_Property_.MIN_RESOLUTION] = options.minResolution !== undefined ? options.minResolution : 0;\n  this.setProperties(properties);\n  /**\n   * @type {ol.LayerState}\n   * @private\n   */\n\n  this.state_ =\n  /** @type {ol.LayerState} */\n  {\n    layer:\n    /** @type {ol.layer.Layer} */\n    this,\n    managed: true\n  };\n  /**\n   * The layer type.\n   * @type {ol.LayerType}\n   * @protected;\n   */\n\n  this.type;\n};\n\n_ol_.inherits(_ol_layer_Base_, _ol_Object_);\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {ol.LayerType} The layer type.\n */\n\n\n_ol_layer_Base_.prototype.getType = function () {\n  return this.type;\n};\n/**\n * @return {ol.LayerState} Layer state.\n */\n\n\n_ol_layer_Base_.prototype.getLayerState = function () {\n  this.state_.opacity = _ol_math_.clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n  return this.state_;\n};\n/**\n * @abstract\n * @param {Array.<ol.layer.Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<ol.layer.Layer>} Array of layers.\n */\n\n\n_ol_layer_Base_.prototype.getLayersArray = function (opt_array) {};\n/**\n * @abstract\n * @param {Array.<ol.LayerState>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<ol.LayerState>} List of layer states.\n */\n\n\n_ol_layer_Base_.prototype.getLayerStatesArray = function (opt_states) {};\n/**\n * Return the {@link ol.Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {ol.Extent|undefined} The layer extent.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getExtent = function () {\n  return (\n    /** @type {ol.Extent|undefined} */\n    this.get(_ol_layer_Property_.EXTENT)\n  );\n};\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getMaxResolution = function () {\n  return (\n    /** @type {number} */\n    this.get(_ol_layer_Property_.MAX_RESOLUTION)\n  );\n};\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getMinResolution = function () {\n  return (\n    /** @type {number} */\n    this.get(_ol_layer_Property_.MIN_RESOLUTION)\n  );\n};\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getOpacity = function () {\n  return (\n    /** @type {number} */\n    this.get(_ol_layer_Property_.OPACITY)\n  );\n};\n/**\n * @abstract\n * @return {ol.source.State} Source state.\n */\n\n\n_ol_layer_Base_.prototype.getSourceState = function () {};\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getVisible = function () {\n  return (\n    /** @type {boolean} */\n    this.get(_ol_layer_Property_.VISIBLE)\n  );\n};\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.getZIndex = function () {\n  return (\n    /** @type {number} */\n    this.get(_ol_layer_Property_.Z_INDEX)\n  );\n};\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {ol.Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setExtent = function (extent) {\n  this.set(_ol_layer_Property_.EXTENT, extent);\n};\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setMaxResolution = function (maxResolution) {\n  this.set(_ol_layer_Property_.MAX_RESOLUTION, maxResolution);\n};\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setMinResolution = function (minResolution) {\n  this.set(_ol_layer_Property_.MIN_RESOLUTION, minResolution);\n};\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setOpacity = function (opacity) {\n  this.set(_ol_layer_Property_.OPACITY, opacity);\n};\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setVisible = function (visible) {\n  this.set(_ol_layer_Property_.VISIBLE, visible);\n};\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\n\n\n_ol_layer_Base_.prototype.setZIndex = function (zindex) {\n  this.set(_ol_layer_Property_.Z_INDEX, zindex);\n};\n\nexport default _ol_layer_Base_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/layer/base.js"],"names":["_ol_","_ol_Object_","_ol_layer_Property_","_ol_math_","_ol_obj_","_ol_layer_Base_","options","call","properties","assign","OPACITY","opacity","undefined","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","maxResolution","Infinity","MIN_RESOLUTION","minResolution","setProperties","state_","layer","managed","type","inherits","prototype","getType","getLayerState","clamp","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getZIndex","getMaxResolution","Math","max","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","get","EXTENT","setExtent","set","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex"],"mappings":"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","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_layer_Property_ from '../layer/property.js';\nimport _ol_math_ from '../math.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with `ol.layer.Base` and all its subclasses, any property set in\n * the options is set as a {@link ol.Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {ol.Object}\n * @param {olx.layer.BaseOptions} options Layer options.\n * @api\n */\nvar _ol_layer_Base_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var properties = _ol_obj_.assign({}, options);\n  properties[_ol_layer_Property_.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[_ol_layer_Property_.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[_ol_layer_Property_.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[_ol_layer_Property_.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[_ol_layer_Property_.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {ol.LayerState}\n   * @private\n   */\n  this.state_ = /** @type {ol.LayerState} */ ({\n    layer: /** @type {ol.layer.Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {ol.LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\n_ol_.inherits(_ol_layer_Base_, _ol_Object_);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {ol.LayerType} The layer type.\n */\n_ol_layer_Base_.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {ol.LayerState} Layer state.\n */\n_ol_layer_Base_.prototype.getLayerState = function() {\n  this.state_.opacity = _ol_math_.clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.layer.Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<ol.layer.Layer>} Array of layers.\n */\n_ol_layer_Base_.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<ol.LayerState>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<ol.LayerState>} List of layer states.\n */\n_ol_layer_Base_.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link ol.Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {ol.Extent|undefined} The layer extent.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getExtent = function() {\n  return (\n  /** @type {ol.Extent|undefined} */ this.get(_ol_layer_Property_.EXTENT)\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMaxResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MAX_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getMinResolution = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.MIN_RESOLUTION)\n  );\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getOpacity = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.OPACITY)\n  );\n};\n\n\n/**\n * @abstract\n * @return {ol.source.State} Source state.\n */\n_ol_layer_Base_.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getVisible = function() {\n  return (\n  /** @type {boolean} */ this.get(_ol_layer_Property_.VISIBLE)\n  );\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.getZIndex = function() {\n  return (\n  /** @type {number} */ this.get(_ol_layer_Property_.Z_INDEX)\n  );\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {ol.Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setExtent = function(extent) {\n  this.set(_ol_layer_Property_.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMaxResolution = function(maxResolution) {\n  this.set(_ol_layer_Property_.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setMinResolution = function(minResolution) {\n  this.set(_ol_layer_Property_.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setOpacity = function(opacity) {\n  this.set(_ol_layer_Property_.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setVisible = function(visible) {\n  this.set(_ol_layer_Property_.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\n_ol_layer_Base_.prototype.setZIndex = function(zindex) {\n  this.set(_ol_layer_Property_.Z_INDEX, zindex);\n};\nexport default _ol_layer_Base_;\n"]},"metadata":{},"sourceType":"module"}
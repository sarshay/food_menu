{"ast":null,"code":"import _ol_ from './index.js';\nimport _ol_structs_LRUCache_ from './structs/lrucache.js';\nimport _ol_tilecoord_ from './tilecoord.js';\n/**\n * @constructor\n * @extends {ol.structs.LRUCache.<ol.Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\n\nvar _ol_TileCache_ = function (opt_highWaterMark) {\n  _ol_structs_LRUCache_.call(this, opt_highWaterMark);\n};\n\n_ol_.inherits(_ol_TileCache_, _ol_structs_LRUCache_);\n/**\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n\n\n_ol_TileCache_.prototype.expireCache = function (usedTiles) {\n  var tile, zKey;\n\n  while (this.canExpireCache()) {\n    tile = this.peekLast();\n    zKey = tile.tileCoord[0].toString();\n\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\n\n\n_ol_TileCache_.prototype.pruneExceptNewestZ = function () {\n  if (this.getCount() === 0) {\n    return;\n  }\n\n  var key = this.peekFirstKey();\n\n  var tileCoord = _ol_tilecoord_.fromKey(key);\n\n  var z = tileCoord[0];\n  this.forEach(function (tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(_ol_tilecoord_.getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\n\nexport default _ol_TileCache_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/tilecache.js"],"names":["_ol_","_ol_structs_LRUCache_","_ol_tilecoord_","_ol_TileCache_","opt_highWaterMark","call","inherits","prototype","expireCache","usedTiles","tile","zKey","canExpireCache","peekLast","tileCoord","toString","contains","pop","dispose","pruneExceptNewestZ","getCount","key","peekFirstKey","fromKey","z","forEach","remove","getKey"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,qBAAP,MAAkC,uBAAlC;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAASC,iBAAT,EAA4B;AAE/CH,EAAAA,qBAAqB,CAACI,IAAtB,CAA2B,IAA3B,EAAiCD,iBAAjC;AAED,CAJD;;AAMAJ,IAAI,CAACM,QAAL,CAAcH,cAAd,EAA8BF,qBAA9B;AAGA;AACA;AACA;;;AACAE,cAAc,CAACI,SAAf,CAAyBC,WAAzB,GAAuC,UAASC,SAAT,EAAoB;AACzD,MAAIC,IAAJ,EAAUC,IAAV;;AACA,SAAO,KAAKC,cAAL,EAAP,EAA8B;AAC5BF,IAAAA,IAAI,GAAG,KAAKG,QAAL,EAAP;AACAF,IAAAA,IAAI,GAAGD,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBC,QAAlB,EAAP;;AACA,QAAIJ,IAAI,IAAIF,SAAR,IAAqBA,SAAS,CAACE,IAAD,CAAT,CAAgBK,QAAhB,CAAyBN,IAAI,CAACI,SAA9B,CAAzB,EAAmE;AACjE;AACD,KAFD,MAEO;AACL,WAAKG,GAAL,GAAWC,OAAX;AACD;AACF;AACF,CAXD;AAcA;AACA;AACA;;;AACAf,cAAc,CAACI,SAAf,CAAyBY,kBAAzB,GAA8C,YAAW;AACvD,MAAI,KAAKC,QAAL,OAAoB,CAAxB,EAA2B;AACzB;AACD;;AACD,MAAIC,GAAG,GAAG,KAAKC,YAAL,EAAV;;AACA,MAAIR,SAAS,GAAGZ,cAAc,CAACqB,OAAf,CAAuBF,GAAvB,CAAhB;;AACA,MAAIG,CAAC,GAAGV,SAAS,CAAC,CAAD,CAAjB;AACA,OAAKW,OAAL,CAAa,UAASf,IAAT,EAAe;AAC1B,QAAIA,IAAI,CAACI,SAAL,CAAe,CAAf,MAAsBU,CAA1B,EAA6B;AAC3B,WAAKE,MAAL,CAAYxB,cAAc,CAACyB,MAAf,CAAsBjB,IAAI,CAACI,SAA3B,CAAZ;AACAJ,MAAAA,IAAI,CAACQ,OAAL;AACD;AACF,GALD,EAKG,IALH;AAMD,CAbD;;AAcA,eAAef,cAAf","sourcesContent":["import _ol_ from './index.js';\nimport _ol_structs_LRUCache_ from './structs/lrucache.js';\nimport _ol_tilecoord_ from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {ol.structs.LRUCache.<ol.Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nvar _ol_TileCache_ = function(opt_highWaterMark) {\n\n  _ol_structs_LRUCache_.call(this, opt_highWaterMark);\n\n};\n\n_ol_.inherits(_ol_TileCache_, _ol_structs_LRUCache_);\n\n\n/**\n * @param {Object.<string, ol.TileRange>} usedTiles Used tiles.\n */\n_ol_TileCache_.prototype.expireCache = function(usedTiles) {\n  var tile, zKey;\n  while (this.canExpireCache()) {\n    tile = this.peekLast();\n    zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\n_ol_TileCache_.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  var key = this.peekFirstKey();\n  var tileCoord = _ol_tilecoord_.fromKey(key);\n  var z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(_ol_tilecoord_.getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default _ol_TileCache_;\n"]},"metadata":{},"sourceType":"module"}
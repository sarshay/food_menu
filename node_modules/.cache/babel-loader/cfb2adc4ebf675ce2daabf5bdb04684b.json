{"ast":null,"code":"var _ol_geom_flat_straightchunk_ = {};\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\n\n_ol_geom_flat_straightchunk_.lineString = function (maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n\n          m = 0;\n          start = i - stride;\n        }\n      }\n\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n};\n\nexport default _ol_geom_flat_straightchunk_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/geom/flat/straightchunk.js"],"names":["_ol_geom_flat_straightchunk_","lineString","maxAngle","flatCoordinates","offset","end","stride","chunkStart","chunkEnd","chunkM","m","start","acos","i","m12","m23","x1","y1","x12","y12","x23","y23","x2","y2","undefined","Math","sqrt"],"mappings":"AAAA,IAAIA,4BAA4B,GAAG,EAAnC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,4BAA4B,CAACC,UAA7B,GAA0C,UAASC,QAAT,EAAmBC,eAAnB,EAAoCC,MAApC,EAA4CC,GAA5C,EAAiDC,MAAjD,EAAyD;AACjG,MAAIC,UAAU,GAAGH,MAAjB;AACA,MAAII,QAAQ,GAAGJ,MAAf;AACA,MAAIK,MAAM,GAAG,CAAb;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,KAAK,GAAGP,MAAZ;AACA,MAAIQ,IAAJ,EAAUC,CAAV,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,GAA9C;;AACA,OAAKR,CAAC,GAAGT,MAAT,EAAiBS,CAAC,GAAGR,GAArB,EAA0BQ,CAAC,IAAIP,MAA/B,EAAuC;AACrC,QAAIgB,EAAE,GAAGnB,eAAe,CAACU,CAAD,CAAxB;AACA,QAAIU,EAAE,GAAGpB,eAAe,CAACU,CAAC,GAAG,CAAL,CAAxB;;AACA,QAAIG,EAAE,KAAKQ,SAAX,EAAsB;AACpBJ,MAAAA,GAAG,GAAGE,EAAE,GAAGN,EAAX;AACAK,MAAAA,GAAG,GAAGE,EAAE,GAAGN,EAAX;AACAF,MAAAA,GAAG,GAAGU,IAAI,CAACC,IAAL,CAAUN,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAA5B,CAAN;;AACA,UAAIH,GAAG,KAAKM,SAAZ,EAAuB;AACrBd,QAAAA,CAAC,IAAII,GAAL;AACAF,QAAAA,IAAI,GAAGa,IAAI,CAACb,IAAL,CAAU,CAACM,GAAG,GAAGE,GAAN,GAAYD,GAAG,GAAGE,GAAnB,KAA2BP,GAAG,GAAGC,GAAjC,CAAV,CAAP;;AACA,YAAIH,IAAI,GAAGV,QAAX,EAAqB;AACnB,cAAIQ,CAAC,GAAGD,MAAR,EAAgB;AACdA,YAAAA,MAAM,GAAGC,CAAT;AACAH,YAAAA,UAAU,GAAGI,KAAb;AACAH,YAAAA,QAAQ,GAAGK,CAAX;AACD;;AACDH,UAAAA,CAAC,GAAG,CAAJ;AACAC,UAAAA,KAAK,GAAGE,CAAC,GAAGP,MAAZ;AACD;AACF;;AACDQ,MAAAA,GAAG,GAAGC,GAAN;AACAG,MAAAA,GAAG,GAAGE,GAAN;AACAD,MAAAA,GAAG,GAAGE,GAAN;AACD;;AACDL,IAAAA,EAAE,GAAGM,EAAL;AACAL,IAAAA,EAAE,GAAGM,EAAL;AACD;;AACDb,EAAAA,CAAC,IAAIK,GAAL;AACA,SAAOL,CAAC,GAAGD,MAAJ,GAAa,CAACE,KAAD,EAAQE,CAAR,CAAb,GAA0B,CAACN,UAAD,EAAaC,QAAb,CAAjC;AACD,CApCD;;AAqCA,eAAeR,4BAAf","sourcesContent":["var _ol_geom_flat_straightchunk_ = {};\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\n_ol_geom_flat_straightchunk_.lineString = function(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n};\nexport default _ol_geom_flat_straightchunk_;\n"]},"metadata":{},"sourceType":"module"}
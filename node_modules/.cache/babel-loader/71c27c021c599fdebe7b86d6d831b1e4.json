{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_ from '../events.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_ContextEventType_ from '../webgl/contexteventtype.js';\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {ol.Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\n\nvar _ol_webgl_Context_ = function (canvas, gl) {\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n\n  this.gl_ = gl;\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglBufferCacheEntry>}\n   */\n\n  this.bufferCache_ = {};\n  /**\n   * @private\n   * @type {Object.<string, WebGLShader>}\n   */\n\n  this.shaderCache_ = {};\n  /**\n   * @private\n   * @type {Object.<string, WebGLProgram>}\n   */\n\n  this.programCache_ = {};\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n\n  this.currentProgram_ = null;\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n\n  this.hitDetectionFramebuffer_ = null;\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n\n  this.hitDetectionTexture_ = null;\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n\n  this.hitDetectionRenderbuffer_ = null;\n  /**\n   * @type {boolean}\n   */\n\n  this.hasOESElementIndexUint = _ol_array_.includes(_ol_.WEBGL_EXTENSIONS, 'OES_element_index_uint'); // use the OES_element_index_uint extension if available\n\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST, this.handleWebGLContextLost, this);\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED, this.handleWebGLContextRestored, this);\n};\n\n_ol_.inherits(_ol_webgl_Context_, _ol_Disposable_);\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n\n\n_ol_webgl_Context_.prototype.bindBuffer = function (target, buf) {\n  var gl = this.getGL();\n  var arr = buf.getArray();\n  var bufferKey = String(_ol_.getUid(buf));\n\n  if (bufferKey in this.bufferCache_) {\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    var\n    /** @type {ArrayBufferView} */\n    arrayBuffer;\n\n    if (target == _ol_webgl_.ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == _ol_webgl_.ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ? new Uint32Array(arr) : new Uint16Array(arr);\n    }\n\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n/**\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n\n\n_ol_webgl_Context_.prototype.deleteBuffer = function (buf) {\n  var gl = this.getGL();\n  var bufferKey = String(_ol_.getUid(buf));\n  var bufferCacheEntry = this.bufferCache_[bufferKey];\n\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n\n  delete this.bufferCache_[bufferKey];\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_webgl_Context_.prototype.disposeInternal = function () {\n  _ol_events_.unlistenAll(this.canvas_);\n\n  var gl = this.getGL();\n\n  if (!gl.isContextLost()) {\n    var key;\n\n    for (key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n\n    for (key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n\n    for (key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    } // delete objects for hit-detection\n\n\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\n\n\n_ol_webgl_Context_.prototype.getCanvas = function () {\n  return this.canvas_;\n};\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\n\n\n_ol_webgl_Context_.prototype.getGL = function () {\n  return this.gl_;\n};\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\n\n\n_ol_webgl_Context_.prototype.getHitDetectionFramebuffer = function () {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n\n  return this.hitDetectionFramebuffer_;\n};\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {ol.webgl.Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\n\n\n_ol_webgl_Context_.prototype.getShader = function (shaderObject) {\n  var shaderKey = String(_ol_.getUid(shaderObject));\n\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    var gl = this.getGL();\n    var shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {ol.webgl.Fragment} fragmentShaderObject Fragment shader.\n * @param {ol.webgl.Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\n\n\n_ol_webgl_Context_.prototype.getProgram = function (fragmentShaderObject, vertexShaderObject) {\n  var programKey = _ol_.getUid(fragmentShaderObject) + '/' + _ol_.getUid(vertexShaderObject);\n\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    var gl = this.getGL();\n    var program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n/**\n * FIXME empy description for jsdoc\n */\n\n\n_ol_webgl_Context_.prototype.handleWebGLContextLost = function () {\n  _ol_obj_.clear(this.bufferCache_);\n\n  _ol_obj_.clear(this.shaderCache_);\n\n  _ol_obj_.clear(this.programCache_);\n\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n/**\n * FIXME empy description for jsdoc\n */\n\n\n_ol_webgl_Context_.prototype.handleWebGLContextRestored = function () {};\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\n\n\n_ol_webgl_Context_.prototype.initHitDetectionFramebuffer_ = function () {\n  var gl = this.gl_;\n  var framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  var texture = _ol_webgl_Context_.createEmptyTexture(gl, 1, 1);\n\n  var renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuffer);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\n\n\n_ol_webgl_Context_.prototype.useProgram = function (program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    var gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n * @private\n */\n\n\n_ol_webgl_Context_.createTexture_ = function (gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S, opt_wrapS);\n  }\n\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(_ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n};\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n\n\n_ol_webgl_Context_.createEmptyTexture = function (gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n};\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n\n\n_ol_webgl_Context_.createTexture = function (gl, image, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n};\n\nexport default _ol_webgl_Context_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/webgl/context.js"],"names":["_ol_","_ol_Disposable_","_ol_array_","_ol_events_","_ol_obj_","_ol_webgl_","_ol_webgl_ContextEventType_","_ol_webgl_Context_","canvas","gl","canvas_","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","hasOESElementIndexUint","includes","WEBGL_EXTENSIONS","getExtension","listen","LOST","handleWebGLContextLost","RESTORED","handleWebGLContextRestored","inherits","prototype","bindBuffer","target","buf","getGL","arr","getArray","bufferKey","String","getUid","bufferCacheEntry","buffer","createBuffer","arrayBuffer","ARRAY_BUFFER","Float32Array","ELEMENT_ARRAY_BUFFER","Uint32Array","Uint16Array","bufferData","getUsage","deleteBuffer","isContextLost","disposeInternal","unlistenAll","key","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","getType","shaderSource","getSource","compileShader","getProgram","fragmentShaderObject","vertexShaderObject","programKey","program","createProgram","attachShader","linkProgram","clear","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texture","createEmptyTexture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","useProgram","createTexture_","opt_wrapS","opt_wrapT","createTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","undefined","TEXTURE_WRAP_S","TEXTURE_WRAP_T","width","height","texImage2D","RGBA","UNSIGNED_BYTE","image"],"mappings":"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","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_Disposable_ from '../disposable.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_ from '../events.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_webgl_ from '../webgl.js';\nimport _ol_webgl_ContextEventType_ from '../webgl/contexteventtype.js';\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {ol.Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nvar _ol_webgl_Context_ = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {Object.<string, ol.WebglBufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = _ol_array_.includes(\n      _ol_.WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.LOST,\n      this.handleWebGLContextLost, this);\n  _ol_events_.listen(this.canvas_, _ol_webgl_ContextEventType_.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n};\n\n_ol_.inherits(_ol_webgl_Context_, _ol_Disposable_);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.bindBuffer = function(target, buf) {\n  var gl = this.getGL();\n  var arr = buf.getArray();\n  var bufferKey = String(_ol_.getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    var /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == _ol_webgl_.ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == _ol_webgl_.ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {ol.webgl.Buffer} buf Buffer.\n */\n_ol_webgl_Context_.prototype.deleteBuffer = function(buf) {\n  var gl = this.getGL();\n  var bufferKey = String(_ol_.getUid(buf));\n  var bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_webgl_Context_.prototype.disposeInternal = function() {\n  _ol_events_.unlistenAll(this.canvas_);\n  var gl = this.getGL();\n  if (!gl.isContextLost()) {\n    var key;\n    for (key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\n_ol_webgl_Context_.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\n_ol_webgl_Context_.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\n_ol_webgl_Context_.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {ol.webgl.Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\n_ol_webgl_Context_.prototype.getShader = function(shaderObject) {\n  var shaderKey = String(_ol_.getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    var gl = this.getGL();\n    var shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {ol.webgl.Fragment} fragmentShaderObject Fragment shader.\n * @param {ol.webgl.Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\n_ol_webgl_Context_.prototype.getProgram = function(\n    fragmentShaderObject, vertexShaderObject) {\n  var programKey =\n      _ol_.getUid(fragmentShaderObject) + '/' + _ol_.getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    var gl = this.getGL();\n    var program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextLost = function() {\n  _ol_obj_.clear(this.bufferCache_);\n  _ol_obj_.clear(this.shaderCache_);\n  _ol_obj_.clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empy description for jsdoc\n */\n_ol_webgl_Context_.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\n_ol_webgl_Context_.prototype.initHitDetectionFramebuffer_ = function() {\n  var gl = this.gl_;\n  var framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  var texture = _ol_webgl_Context_.createEmptyTexture(gl, 1, 1);\n  var renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\n_ol_webgl_Context_.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    var gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n * @private\n */\n_ol_webgl_Context_.createTexture_ = function(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n        _ol_webgl_.TEXTURE_2D, _ol_webgl_.TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createEmptyTexture = function(\n    gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n      null);\n\n  return texture;\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\n_ol_webgl_Context_.createTexture = function(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = _ol_webgl_Context_.createTexture_(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\n  return texture;\n};\nexport default _ol_webgl_Context_;\n"]},"metadata":{},"sourceType":"module"}
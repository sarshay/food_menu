{"ast":null,"code":"import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_renderer_vector_ from '../vector.js';\n/**\n * @constructor\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\n\nvar _ol_renderer_canvas_VectorLayer_ = function (vectorLayer) {\n  _ol_renderer_canvas_Layer_.call(this, vectorLayer);\n  /**\n   * Declutter tree.\n   * @private\n   */\n\n\n  this.declutterTree_ = vectorLayer.getDeclutter() ? _ol_ext_rbush_(9) : null;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.dirty_ = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.renderedRevision_ = -1;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.renderedResolution_ = NaN;\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n\n  this.renderedRenderOrder_ = null;\n  /**\n   * @private\n   * @type {ol.render.canvas.ReplayGroup}\n   */\n\n  this.replayGroup_ = null;\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n\n  this.replayGroupChanged = true;\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n\n  this.context = _ol_dom_.createCanvasContext2D();\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorLayer_, _ol_renderer_canvas_Layer_);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\n_ol_renderer_canvas_VectorLayer_['handles'] = function (type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR;\n};\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorLayer} The layer renderer.\n */\n\n\n_ol_renderer_canvas_VectorLayer_['create'] = function (mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorLayer_(\n  /** @type {ol.layer.Vector} */\n  layer);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.disposeInternal = function () {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n  _ol_renderer_canvas_Layer_.prototype.disposeInternal.call(this);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.composeFrame = function (frameState, layerState, context) {\n  var extent = frameState.extent;\n  var pixelRatio = frameState.pixelRatio;\n  var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var rotation = viewState.rotation;\n  var projectionExtent = projection.getExtent();\n  var vectorSource =\n  /** @type {ol.source.Vector} */\n  this.getLayer().getSource();\n  var transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform); // clipped rendering if layer extent is set\n\n  var clipExtent = layerState.extent;\n  var clipped = clipExtent !== undefined;\n\n  if (clipped) {\n    this.clip(context, frameState,\n    /** @type {ol.Extent} */\n    clipExtent);\n  }\n\n  var replayGroup = this.replayGroup_;\n\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n\n    var layer =\n    /** @type {ol.layer.Vector} */\n    this.getLayer();\n    var drawOffsetX = 0;\n    var drawOffsetY = 0;\n    var replayContext;\n    var transparentLayer = layerState.opacity !== 1;\n    var hasRenderListeners = layer.hasListener(_ol_render_EventType_.RENDER);\n\n    if (transparentLayer || hasRenderListeners) {\n      var drawWidth = context.canvas.width;\n      var drawHeight = context.canvas.height;\n\n      if (rotation) {\n        var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      } // resize and clear\n\n\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    var alpha = replayContext.globalAlpha;\n\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n\n    _ol_render_canvas_.rotateAtOffset(replayContext, -rotation, width / 2, height / 2);\n\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !_ol_extent_.containsExtent(projectionExtent, extent)) {\n      var startX = extent[0];\n\n      var worldWidth = _ol_extent_.getWidth(projectionExtent);\n\n      var world = 0;\n      var offsetX;\n\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n\n      world = 0;\n      startX = extent[2];\n\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      } // restore original transform for render and compose events\n\n\n      transform = this.getTransform(frameState, 0);\n    }\n\n    _ol_render_canvas_.rotateAtOffset(replayContext, rotation, width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n\n      if (transparentLayer) {\n        var mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n\n  this.postCompose(context, frameState, layerState, transform);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer =\n    /** @type {ol.layer.Vector} */\n    this.getLayer();\n    /** @type {Object.<string, boolean>} */\n\n    var features = {};\n    var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n    /**\n     * @param {ol.Feature|ol.render.Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function (feature) {\n      var key = _ol_.getUid(feature).toString();\n\n      if (!(key in features)) {\n        features[key] = true;\n        return callback.call(thisArg, feature, layer);\n      }\n    }, null);\n    return result;\n  }\n};\n/**\n * @param {ol.events.Event} event Event.\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.handleFontsChanged_ = function (event) {\n  var layer = this.getLayer();\n\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.handleStyleImageChange_ = function (event) {\n  this.renderIfReadyAndVisible();\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.prepareFrame = function (frameState, layerState) {\n  var vectorLayer =\n  /** @type {ol.layer.Vector} */\n  this.getLayer();\n  var vectorSource = vectorLayer.getSource();\n  this.updateLogos(frameState, vectorSource);\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && !updateWhileAnimating && animating || !updateWhileInteracting && interacting) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n\n  var projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() && !_ol_extent_.containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n\n    var buffer = Math.max(_ol_extent_.getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - buffer;\n    extent[2] = projectionExtent[2] + buffer;\n  }\n\n  if (!this.dirty_ && this.renderedResolution_ == resolution && this.renderedRevision_ == vectorLayerRevision && this.renderedRenderOrder_ == vectorLayerRenderOrder && _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n  this.dirty_ = false;\n  var replayGroup = new _ol_render_canvas_ReplayGroup_(_ol_renderer_vector_.getTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.canvas.VectorLayer}\n   */\n\n  var renderFeature = function (feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n\n    if (styles) {\n      var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n    /**\n     * @param {ol.Feature} feature Feature.\n     */\n    function (feature) {\n      features.push(feature);\n    }, this);\n    features.sort(vectorLayerRenderOrder);\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      renderFeature(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n\n  replayGroup.finish();\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n  this.replayGroupChanged = true;\n  return true;\n};\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n\n\n_ol_renderer_canvas_VectorLayer_.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n\n  var loading = false;\n\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(replayGroup, feature, styles[i], _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(replayGroup, feature, styles, _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n  }\n\n  return loading;\n};\n\nexport default _ol_renderer_canvas_VectorLayer_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/renderer/canvas/vectorlayer.js"],"names":["_ol_","_ol_LayerType_","_ol_ViewHint_","_ol_dom_","_ol_events_","_ol_events_EventType_","_ol_ext_rbush_","_ol_extent_","_ol_render_EventType_","_ol_render_canvas_","_ol_render_canvas_ReplayGroup_","_ol_renderer_Type_","_ol_renderer_canvas_Layer_","_ol_renderer_vector_","_ol_renderer_canvas_VectorLayer_","vectorLayer","call","declutterTree_","getDeclutter","dirty_","renderedRevision_","renderedResolution_","NaN","renderedExtent_","createEmpty","renderedRenderOrder_","replayGroup_","replayGroupChanged","context","createCanvasContext2D","listen","labelCache","CLEAR","handleFontsChanged_","inherits","type","layer","CANVAS","getType","VECTOR","mapRenderer","prototype","disposeInternal","unlisten","composeFrame","frameState","layerState","extent","pixelRatio","skippedFeatureUids","managed","viewState","projection","rotation","projectionExtent","getExtent","vectorSource","getLayer","getSource","transform","getTransform","preCompose","clipExtent","clipped","undefined","clip","replayGroup","isEmpty","clear","drawOffsetX","drawOffsetY","replayContext","transparentLayer","opacity","hasRenderListeners","hasListener","RENDER","drawWidth","canvas","width","drawHeight","height","drawSize","Math","round","sqrt","alpha","globalAlpha","translate","size","rotateAtOffset","replay","getWrapX","canWrapX","containsExtent","startX","worldWidth","getWidth","world","offsetX","dispatchRenderEvent","mainContextAlpha","drawImage","restore","postCompose","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","thisArg","resolution","features","result","feature","key","getUid","toString","event","getVisible","changed","handleStyleImageChange_","renderIfReadyAndVisible","prepareFrame","updateLogos","animating","viewHints","ANIMATING","interacting","INTERACTING","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultOrder","buffer","max","getTolerance","getOverlaps","loadFeatures","renderFeature","styles","styleFunction","getStyleFunction","dirty","bind","forEachFeatureInExtent","push","sort","i","ii","length","finish","loading","Array","isArray","getSquaredTolerance"],"mappings":"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","sourcesContent":["import _ol_ from '../../index.js';\nimport _ol_LayerType_ from '../../layertype.js';\nimport _ol_ViewHint_ from '../../viewhint.js';\nimport _ol_dom_ from '../../dom.js';\nimport _ol_events_ from '../../events.js';\nimport _ol_events_EventType_ from '../../events/eventtype.js';\nimport _ol_ext_rbush_ from 'rbush';\nimport _ol_extent_ from '../../extent.js';\nimport _ol_render_EventType_ from '../../render/eventtype.js';\nimport _ol_render_canvas_ from '../../render/canvas.js';\nimport _ol_render_canvas_ReplayGroup_ from '../../render/canvas/replaygroup.js';\nimport _ol_renderer_Type_ from '../type.js';\nimport _ol_renderer_canvas_Layer_ from '../canvas/layer.js';\nimport _ol_renderer_vector_ from '../vector.js';\n\n/**\n * @constructor\n * @extends {ol.renderer.canvas.Layer}\n * @param {ol.layer.Vector} vectorLayer Vector layer.\n * @api\n */\nvar _ol_renderer_canvas_VectorLayer_ = function(vectorLayer) {\n\n  _ol_renderer_canvas_Layer_.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ?\n    _ol_ext_rbush_(9) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.renderedExtent_ = _ol_extent_.createEmpty();\n\n  /**\n   * @private\n   * @type {function(ol.Feature, ol.Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {ol.render.canvas.ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = _ol_dom_.createCanvasContext2D();\n\n  _ol_events_.listen(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n\n};\n\n_ol_.inherits(_ol_renderer_canvas_VectorLayer_, _ol_renderer_canvas_Layer_);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {ol.renderer.Type} type The renderer type.\n * @param {ol.layer.Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n_ol_renderer_canvas_VectorLayer_['handles'] = function(type, layer) {\n  return type === _ol_renderer_Type_.CANVAS && layer.getType() === _ol_LayerType_.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {ol.renderer.Map} mapRenderer The map renderer.\n * @param {ol.layer.Layer} layer The layer to be rendererd.\n * @return {ol.renderer.canvas.VectorLayer} The layer renderer.\n */\n_ol_renderer_canvas_VectorLayer_['create'] = function(mapRenderer, layer) {\n  return new _ol_renderer_canvas_VectorLayer_(/** @type {ol.layer.Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.disposeInternal = function() {\n  _ol_events_.unlisten(_ol_render_canvas_.labelCache, _ol_events_EventType_.CLEAR, this.handleFontsChanged_, this);\n  _ol_renderer_canvas_Layer_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.composeFrame = function(frameState, layerState, context) {\n\n  var extent = frameState.extent;\n  var pixelRatio = frameState.pixelRatio;\n  var skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var rotation = viewState.rotation;\n  var projectionExtent = projection.getExtent();\n  var vectorSource = /** @type {ol.source.Vector} */ (this.getLayer().getSource());\n\n  var transform = this.getTransform(frameState, 0);\n\n  this.preCompose(context, frameState, transform);\n\n  // clipped rendering if layer extent is set\n  var clipExtent = layerState.extent;\n  var clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {ol.Extent} */ (clipExtent));\n  }\n  var replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    var drawOffsetX = 0;\n    var drawOffsetY = 0;\n    var replayContext;\n    var transparentLayer = layerState.opacity !== 1;\n    var hasRenderListeners = layer.hasListener(_ol_render_EventType_.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      var drawWidth = context.canvas.width;\n      var drawHeight = context.canvas.height;\n      if (rotation) {\n        var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    var alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    _ol_render_canvas_.rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !_ol_extent_.containsExtent(projectionExtent, extent)) {\n      var startX = extent[0];\n      var worldWidth = _ol_extent_.getWidth(projectionExtent);\n      var world = 0;\n      var offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n      // restore original transform for render and compose events\n      transform = this.getTransform(frameState, 0);\n    }\n    _ol_render_canvas_.rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        var mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n  this.postCompose(context, frameState, layerState, transform);\n\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var layer = /** @type {ol.layer.Vector} */ (this.getLayer());\n    /** @type {Object.<string, boolean>} */\n    var features = {};\n    var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution,\n        rotation, hitTolerance, {},\n        /**\n         * @param {ol.Feature|ol.render.Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = _ol_.getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleFontsChanged_ = function(event) {\n  var layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {ol.events.Event} event Image style change event.\n * @private\n */\n_ol_renderer_canvas_VectorLayer_.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_renderer_canvas_VectorLayer_.prototype.prepareFrame = function(frameState, layerState) {\n\n  var vectorLayer = /** @type {ol.layer.Vector} */ (this.getLayer());\n  var vectorSource = vectorLayer.getSource();\n\n  this.updateLogos(frameState, vectorSource);\n\n  var animating = frameState.viewHints[_ol_ViewHint_.ANIMATING];\n  var interacting = frameState.viewHints[_ol_ViewHint_.INTERACTING];\n  var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  var frameStateExtent = frameState.extent;\n  var viewState = frameState.viewState;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var vectorLayerRevision = vectorLayer.getRevision();\n  var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = _ol_renderer_vector_.defaultOrder;\n  }\n\n  var extent = _ol_extent_.buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n  var projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !_ol_extent_.containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    var worldWidth = _ol_extent_.getWidth(projectionExtent);\n    var buffer = Math.max(_ol_extent_.getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - buffer;\n    extent[2] = projectionExtent[2] + buffer;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      _ol_extent_.containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  var replayGroup = new _ol_render_canvas_ReplayGroup_(\n      _ol_renderer_vector_.getTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {ol.Feature} feature Feature.\n   * @this {ol.renderer.canvas.VectorLayer}\n   */\n  var renderFeature = function(feature) {\n    var styles;\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction.call(feature, resolution);\n    } else {\n      styleFunction = vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n    }\n    if (styles) {\n      var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<ol.Feature>} */\n    var features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {ol.Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      renderFeature(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, renderFeature, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(ol.style.Style|Array.<ol.style.Style>)} styles The style or array of\n *     styles.\n * @param {ol.render.canvas.ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\n_ol_renderer_canvas_VectorLayer_.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  var loading = false;\n  if (Array.isArray(styles)) {\n    for (var i = 0, ii = styles.length; i < ii; ++i) {\n      loading = _ol_renderer_vector_.renderFeature(\n          replayGroup, feature, styles[i],\n          _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = _ol_renderer_vector_.renderFeature(\n        replayGroup, feature, styles,\n        _ol_renderer_vector_.getSquaredTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default _ol_renderer_canvas_VectorLayer_;\n"]},"metadata":{},"sourceType":"module"}
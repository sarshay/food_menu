{"ast":null,"code":"import _ol_ from './index.js';\nimport _ol_Collection_ from './collection.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\nimport _ol_MapBrowserEventHandler_ from './mapbrowsereventhandler.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapEvent_ from './mapevent.js';\nimport _ol_MapEventType_ from './mapeventtype.js';\nimport _ol_MapProperty_ from './mapproperty.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_TileQueue_ from './tilequeue.js';\nimport _ol_View_ from './view.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_functions_ from './functions.js';\nimport _ol_has_ from './has.js';\nimport _ol_layer_Group_ from './layer/group.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_Type_ from './renderer/type.js';\nimport _ol_size_ from './size.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\nimport _ol_transform_ from './transform.js';\n/**\n * @constructor\n * @extends {ol.Object}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\n\nvar _ol_PluggableMap_ = function (options) {\n  _ol_Object_.call(this);\n\n  var optionsInternal = _ol_PluggableMap_.createOptionsInternal(options);\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n\n  this.loadTilesWhileAnimating_ = options.loadTilesWhileAnimating !== undefined ? options.loadTilesWhileAnimating : false;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this.loadTilesWhileInteracting_ = options.loadTilesWhileInteracting !== undefined ? options.loadTilesWhileInteracting : false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.pixelRatio_ = options.pixelRatio !== undefined ? options.pixelRatio : _ol_has_.DEVICE_PIXEL_RATIO;\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n\n  this.logos_ = optionsInternal.logos;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.animationDelayKey_;\n  /**\n   * @private\n   */\n\n  this.animationDelay_ = function () {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n\n  this.coordinateToPixelTransform_ = _ol_transform_.create();\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n\n  this.pixelToCoordinateTransform_ = _ol_transform_.create();\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.frameIndex_ = 0;\n  /**\n   * @private\n   * @type {?olx.FrameState}\n   */\n\n  this.frameState_ = null;\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {ol.Extent}\n   */\n\n  this.previousExtent_ = null;\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n\n  this.viewPropertyListenerKey_ = null;\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n\n  this.viewChangeListenerKey_ = null;\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n\n  this.layerGroupPropertyListenerKeys_ = null;\n  /**\n   * @private\n   * @type {Element}\n   */\n\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (_ol_has_.TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%'; // prevent page zoom on IE >= 10 browsers\n\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n  /**\n   * @private\n   * @type {!Element}\n   */\n\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n  /**\n   * @private\n   * @type {!Element}\n   */\n\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  var overlayEvents = [_ol_events_EventType_.CLICK, _ol_events_EventType_.DBLCLICK, _ol_events_EventType_.MOUSEDOWN, _ol_events_EventType_.TOUCHSTART, _ol_events_EventType_.MSPOINTERDOWN, _ol_MapBrowserEventType_.POINTERDOWN, _ol_events_EventType_.MOUSEWHEEL, _ol_events_EventType_.WHEEL];\n\n  for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    _ol_events_.listen(this.overlayContainerStopEvent_, overlayEvents[i], _ol_events_Event_.stopPropagation);\n  }\n\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n  /**\n   * @private\n   * @type {ol.MapBrowserEventHandler}\n   */\n\n  this.mapBrowserEventHandler_ = new _ol_MapBrowserEventHandler_(this, options.moveTolerance);\n\n  for (var key in _ol_MapBrowserEventType_) {\n    _ol_events_.listen(this.mapBrowserEventHandler_, _ol_MapBrowserEventType_[key], this.handleMapBrowserEvent, this);\n  }\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n\n\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n\n  this.keyHandlerKeys_ = null;\n\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.WHEEL, this.handleBrowserEvent, this);\n\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.MOUSEWHEEL, this.handleBrowserEvent, this);\n  /**\n   * @type {ol.Collection.<ol.control.Control>}\n   * @protected\n   */\n\n\n  this.controls = optionsInternal.controls || new _ol_Collection_();\n  /**\n   * @type {ol.Collection.<ol.interaction.Interaction>}\n   * @protected\n   */\n\n  this.interactions = optionsInternal.interactions || new _ol_Collection_();\n  /**\n   * @type {ol.Collection.<ol.Overlay>}\n   * @private\n   */\n\n  this.overlays_ = optionsInternal.overlays;\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, ol.Overlay>}\n   */\n\n  this.overlayIdIndex_ = {};\n  /**\n   * @type {ol.renderer.Map}\n   * @private\n   */\n\n  this.renderer_ = optionsInternal.mapRendererPlugin['create'](this.viewport_, this);\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n\n  this.handleResize_;\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n\n  this.focus_ = null;\n  /**\n   * @private\n   * @type {Array.<ol.PostRenderFunction>}\n   */\n\n  this.postRenderFunctions_ = [];\n  /**\n   * @private\n   * @type {ol.TileQueue}\n   */\n\n  this.tileQueue_ = new _ol_TileQueue_(this.getTilePriority.bind(this), this.handleTileChange_.bind(this));\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n\n  this.skippedFeatureUids_ = {};\n\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.LAYERGROUP), this.handleLayerGroupChanged_, this);\n\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.VIEW), this.handleViewChanged_, this);\n\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.SIZE), this.handleSizeChanged_, this);\n\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.TARGET), this.handleTargetChanged_, this); // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n\n\n  this.setProperties(optionsInternal.values);\n  this.controls.forEach(\n  /**\n   * @param {ol.control.Control} control Control.\n   * @this {ol.PluggableMap}\n   */\n  function (control) {\n    control.setMap(this);\n  }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.ADD,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    event.element.setMap(this);\n  }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.REMOVE,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    event.element.setMap(null);\n  }, this);\n\n  this.interactions.forEach(\n  /**\n   * @param {ol.interaction.Interaction} interaction Interaction.\n   * @this {ol.PluggableMap}\n   */\n  function (interaction) {\n    interaction.setMap(this);\n  }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.ADD,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    event.element.setMap(this);\n  }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.REMOVE,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    event.element.setMap(null);\n  }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.ADD,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    this.addOverlayInternal_(\n    /** @type {ol.Overlay} */\n    event.element);\n  }, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.REMOVE,\n  /**\n   * @param {ol.Collection.Event} event Collection event.\n   */\n  function (event) {\n    var overlay =\n    /** @type {ol.Overlay} */\n    event.element;\n    var id = overlay.getId();\n\n    if (id !== undefined) {\n      delete this.overlayIdIndex_[id.toString()];\n    }\n\n    event.element.setMap(null);\n  }, this);\n};\n\n_ol_.inherits(_ol_PluggableMap_, _ol_Object_);\n/**\n * Add the given control to the map.\n * @param {ol.control.Control} control Control.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.addControl = function (control) {\n  this.getControls().push(control);\n};\n/**\n * Add the given interaction to the map.\n * @param {ol.interaction.Interaction} interaction Interaction to add.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.addInteraction = function (interaction) {\n  this.getInteractions().push(interaction);\n};\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link ol.Collection}.\n * @param {ol.layer.Base} layer Layer.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.addLayer = function (layer) {\n  var layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n/**\n * Add the given overlay to the map.\n * @param {ol.Overlay} overlay Overlay.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.addOverlay = function (overlay) {\n  this.getOverlays().push(overlay);\n};\n/**\n * This deals with map's overlay collection changes.\n * @param {ol.Overlay} overlay Overlay.\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.addOverlayInternal_ = function (overlay) {\n  var id = overlay.getId();\n\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n\n  overlay.setMap(this);\n};\n/**\n *\n * @inheritDoc\n */\n\n\n_ol_PluggableMap_.prototype.disposeInternal = function () {\n  this.mapBrowserEventHandler_.dispose();\n\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.WHEEL, this.handleBrowserEvent, this);\n\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  if (this.handleResize_ !== undefined) {\n    window.removeEventListener(_ol_events_EventType_.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n\n  this.setTarget(null);\n\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link ol.Feature feature} or\n *     {@link ol.render.Feature render feature} at the pixel, the second is\n *     the {@link ol.layer.Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : _ol_functions_.TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {Array.<ol.Feature|ol.render.Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n  var features = null;\n  this.forEachFeatureAtPixel(pixel, function (feature) {\n    if (!features) {\n      features = [];\n    }\n\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link ol.layer.Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, ol.layer.Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link ol.layer.Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.forEachLayerAtPixel = function (pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n\n  var thisArg = opt_this !== undefined ? opt_this : null;\n  var layerFilter = opt_layerFilter !== undefined ? opt_layerFilter : _ol_functions_.TRUE;\n  var thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, callback, thisArg, layerFilter, thisArg2);\n};\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : _ol_functions_.TRUE;\n  var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getEventCoordinate = function (event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {ol.Pixel} Pixel.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getEventPixel = function (event) {\n  var viewportPosition = this.viewport_.getBoundingClientRect();\n  var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [eventPosition.clientX - viewportPosition.left, eventPosition.clientY - viewportPosition.top];\n};\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getTarget = function () {\n  return (\n    /** @type {Element|string|undefined} */\n    this.get(_ol_MapProperty_.TARGET)\n  );\n};\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getTargetElement = function () {\n  var target = this.getTarget();\n\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {ol.Pixel} pixel Pixel position in the map viewport.\n * @return {ol.Coordinate} The coordinate for the pixel position.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getCoordinateFromPixel = function (pixel) {\n  var frameState = this.frameState_;\n\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getControls = function () {\n  return this.controls;\n};\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {ol.Collection.<ol.Overlay>} Overlays.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getOverlays = function () {\n  return this.overlays_;\n};\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {ol.Overlay} Overlay.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getOverlayById = function (id) {\n  var overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {ol.Collection.<ol.interaction.Interaction>} Interactions.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getInteractions = function () {\n  return this.interactions;\n};\n/**\n * Get the layergroup associated with this map.\n * @return {ol.layer.Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getLayerGroup = function () {\n  return (\n    /** @type {ol.layer.Group} */\n    this.get(_ol_MapProperty_.LAYERGROUP)\n  );\n};\n/**\n * Get the collection of layers associated with this map.\n * @return {!ol.Collection.<ol.layer.Base>} Layers.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getLayers = function () {\n  var layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {ol.Coordinate} coordinate A map coordinate.\n * @return {ol.Pixel} A pixel position in the map viewport.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getPixelFromCoordinate = function (coordinate) {\n  var frameState = this.frameState_;\n\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n/**\n * Get the map renderer.\n * @return {ol.renderer.Map} Renderer\n */\n\n\n_ol_PluggableMap_.prototype.getRenderer = function () {\n  return this.renderer_;\n};\n/**\n * Get the size of this map.\n * @return {ol.Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getSize = function () {\n  return (\n    /** @type {ol.Size|undefined} */\n    this.get(_ol_MapProperty_.SIZE)\n  );\n};\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {ol.View} The view that controls this map.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getView = function () {\n  return (\n    /** @type {ol.View} */\n    this.get(_ol_MapProperty_.VIEW)\n  );\n};\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.getViewport = function () {\n  return this.viewport_;\n};\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link ol.MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\n\n\n_ol_PluggableMap_.prototype.getOverlayContainer = function () {\n  return this.overlayContainer_;\n};\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link ol.MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\n\n\n_ol_PluggableMap_.prototype.getOverlayContainerStopEvent = function () {\n  return this.overlayContainerStopEvent_;\n};\n/**\n * @param {ol.Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {ol.Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n\n\n_ol_PluggableMap_.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  var frameState = this.frameState_;\n\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return _ol_structs_PriorityQueue_.DROP;\n  } // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n\n\n  var deltaX = tileCenter[0] - frameState.focus[0];\n  var deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\n\n\n_ol_PluggableMap_.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n  var type = opt_type || browserEvent.type;\n  var mapBrowserEvent = new _ol_MapBrowserEvent_(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent The event to handle.\n */\n\n\n_ol_PluggableMap_.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  var interactionsArray = this.getInteractions().getArray();\n  var i;\n\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (i = interactionsArray.length - 1; i >= 0; i--) {\n      var interaction = interactionsArray[i];\n\n      if (!interaction.getActive()) {\n        continue;\n      }\n\n      var cont = interaction.handleEvent(mapBrowserEvent);\n\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n/**\n * @protected\n */\n\n\n_ol_PluggableMap_.prototype.handlePostRender = function () {\n  var frameState = this.frameState_; // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n\n  var tileQueue = this.tileQueue_;\n\n  if (!tileQueue.isEmpty()) {\n    var maxTotalLoading = 16;\n    var maxNewLoads = maxTotalLoading;\n\n    if (frameState) {\n      var hints = frameState.viewHints;\n\n      if (hints[_ol_ViewHint_.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n\n      if (hints[_ol_ViewHint_.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  var postRenderFunctions = this.postRenderFunctions_;\n  var i, ii;\n\n  for (i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n\n  postRenderFunctions.length = 0;\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleSizeChanged_ = function () {\n  this.render();\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleTargetChanged_ = function () {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n  var targetElement;\n\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n\n    _ol_dom_.removeNode(this.viewport_);\n\n    if (this.handleResize_ !== undefined) {\n      window.removeEventListener(_ol_events_EventType_.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n    var keyboardEventTarget = !this.keyboardEventTarget_ ? targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [_ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYDOWN, this.handleBrowserEvent, this), _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYPRESS, this.handleBrowserEvent, this)];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      window.addEventListener(_ol_events_EventType_.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize(); // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleTileChange_ = function () {\n  this.render();\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleViewPropertyChanged_ = function () {\n  this.render();\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleViewChanged_ = function () {\n  if (this.viewPropertyListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewPropertyListenerKey_);\n\n    this.viewPropertyListenerKey_ = null;\n  }\n\n  if (this.viewChangeListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewChangeListenerKey_);\n\n    this.viewChangeListenerKey_ = null;\n  }\n\n  var view = this.getView();\n\n  if (view) {\n    this.viewport_.setAttribute('data-view', _ol_.getUid(view));\n    this.viewPropertyListenerKey_ = _ol_events_.listen(view, _ol_ObjectEventType_.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = _ol_events_.listen(view, _ol_events_EventType_.CHANGE, this.handleViewPropertyChanged_, this);\n  }\n\n  this.render();\n};\n/**\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.handleLayerGroupChanged_ = function () {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n\n  var layerGroup = this.getLayerGroup();\n\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [_ol_events_.listen(layerGroup, _ol_ObjectEventType_.PROPERTYCHANGE, this.render, this), _ol_events_.listen(layerGroup, _ol_events_EventType_.CHANGE, this.render, this)];\n  }\n\n  this.render();\n};\n/**\n * @return {boolean} Is rendered.\n */\n\n\n_ol_PluggableMap_.prototype.isRendered = function () {\n  return !!this.frameState_;\n};\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.renderSync = function () {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n\n  this.animationDelay_();\n};\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.render = function () {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n/**\n * Remove the given control from the map.\n * @param {ol.control.Control} control Control.\n * @return {ol.control.Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.removeControl = function (control) {\n  return this.getControls().remove(control);\n};\n/**\n * Remove the given interaction from the map.\n * @param {ol.interaction.Interaction} interaction Interaction to remove.\n * @return {ol.interaction.Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.removeInteraction = function (interaction) {\n  return this.getInteractions().remove(interaction);\n};\n/**\n * Removes the given layer from the map.\n * @param {ol.layer.Base} layer Layer.\n * @return {ol.layer.Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.removeLayer = function (layer) {\n  var layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n/**\n * Remove the given overlay from the map.\n * @param {ol.Overlay} overlay Overlay.\n * @return {ol.Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.removeOverlay = function (overlay) {\n  return this.getOverlays().remove(overlay);\n};\n/**\n * @param {number} time Time.\n * @private\n */\n\n\n_ol_PluggableMap_.prototype.renderFrame_ = function (time) {\n  var i, ii, viewState;\n  var size = this.getSize();\n  var view = this.getView();\n\n  var extent = _ol_extent_.createEmpty();\n\n  var previousFrameState = this.frameState_;\n  /** @type {?olx.FrameState} */\n\n  var frameState = null;\n\n  if (size !== undefined && _ol_size_.hasArea(size) && view && view.isDef()) {\n    var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    var layerStates = {};\n\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[_ol_.getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    viewState = view.getState();\n    var center = viewState.center;\n    var pixelResolution = viewState.resolution / this.pixelRatio_;\n    center[0] = Math.round(center[0] / pixelResolution) * pixelResolution;\n    center[1] = Math.round(center[1] / pixelResolution) * pixelResolution;\n    frameState =\n    /** @type {olx.FrameState} */\n    {\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: !this.focus_ ? center : this.focus_,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      logos: _ol_obj_.assign({}, this.logos_),\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    };\n  }\n\n  if (frameState) {\n    frameState.extent = _ol_extent_.getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      var moveStart = !this.previousExtent_ || !_ol_extent_.isEmpty(this.previousExtent_) && !_ol_extent_.equals(frameState.extent, this.previousExtent_);\n\n      if (moveStart) {\n        this.dispatchEvent(new _ol_MapEvent_(_ol_MapEventType_.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = _ol_extent_.createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    var idle = this.previousExtent_ && !frameState.viewHints[_ol_ViewHint_.ANIMATING] && !frameState.viewHints[_ol_ViewHint_.INTERACTING] && !_ol_extent_.equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new _ol_MapEvent_(_ol_MapEventType_.MOVEEND, this, frameState));\n\n      _ol_extent_.clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new _ol_MapEvent_(_ol_MapEventType_.POSTRENDER, this, frameState));\n  setTimeout(this.handlePostRender.bind(this), 0);\n};\n/**\n * Sets the layergroup of this map.\n * @param {ol.layer.Group} layerGroup A layer group containing the layers in\n *     this map.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.setLayerGroup = function (layerGroup) {\n  this.set(_ol_MapProperty_.LAYERGROUP, layerGroup);\n};\n/**\n * Set the size of this map.\n * @param {ol.Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.setSize = function (size) {\n  this.set(_ol_MapProperty_.SIZE, size);\n};\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.setTarget = function (target) {\n  this.set(_ol_MapProperty_.TARGET, target);\n};\n/**\n * Set the view for this map.\n * @param {ol.View} view The view that controls this map.\n * @observable\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.setView = function (view) {\n  this.set(_ol_MapProperty_.VIEW, view);\n};\n/**\n * @param {ol.Feature} feature Feature.\n */\n\n\n_ol_PluggableMap_.prototype.skipFeature = function (feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\n\n\n_ol_PluggableMap_.prototype.updateSize = function () {\n  var targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    var computedStyle = getComputedStyle(targetElement);\n    this.setSize([targetElement.offsetWidth - parseFloat(computedStyle['borderLeftWidth']) - parseFloat(computedStyle['paddingLeft']) - parseFloat(computedStyle['paddingRight']) - parseFloat(computedStyle['borderRightWidth']), targetElement.offsetHeight - parseFloat(computedStyle['borderTopWidth']) - parseFloat(computedStyle['paddingTop']) - parseFloat(computedStyle['paddingBottom']) - parseFloat(computedStyle['borderBottomWidth'])]);\n  }\n};\n/**\n * @param {ol.Feature} feature Feature.\n */\n\n\n_ol_PluggableMap_.prototype.unskipFeature = function (feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n/**\n * @type {Array.<ol.renderer.Type>}\n * @const\n */\n\n\n_ol_PluggableMap_.DEFAULT_RENDERER_TYPES = [_ol_renderer_Type_.CANVAS, _ol_renderer_Type_.WEBGL];\n/**\n * @const\n * @type {string}\n */\n\n_ol_PluggableMap_.LOGO_URL = 'data:image/png;base64,' + 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAAA3NCSVQICAjb4U/gAAAACXBI' + 'WXMAAAHGAAABxgEXwfpGAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAA' + 'AhNQTFRF////AP//AICAgP//AFVVQECA////K1VVSbbbYL/fJ05idsTYJFtbbcjbJllmZszW' + 'WMTOIFhoHlNiZszTa9DdUcHNHlNlV8XRIVdiasrUHlZjIVZjaMnVH1RlIFRkH1RkH1ZlasvY' + 'asvXVsPQH1VkacnVa8vWIVZjIFRjVMPQa8rXIVVkXsXRsNveIFVkIFZlIVVj3eDeh6GmbMvX' + 'H1ZkIFRka8rWbMvXIFVkIFVjIFVkbMvWH1VjbMvWIFVlbcvWIFVla8vVIFVkbMvWbMvVH1Vk' + 'bMvWIFVlbcvWIFVkbcvVbMvWjNPbIFVkU8LPwMzNIFVkbczWIFVkbsvWbMvXIFVkRnB8bcvW' + '2+TkW8XRIFVkIlZlJVloJlpoKlxrLl9tMmJwOWd0Omh1RXF8TneCT3iDUHiDU8LPVMLPVcLP' + 'VcPQVsPPVsPQV8PQWMTQWsTQW8TQXMXSXsXRX4SNX8bSYMfTYcfTYsfTY8jUZcfSZsnUaIqT' + 'acrVasrVa8jTa8rWbI2VbMvWbcvWdJObdcvUdszUd8vVeJaee87Yfc3WgJyjhqGnitDYjaar' + 'ldPZnrK2oNbborW5o9bbo9fbpLa6q9ndrL3ArtndscDDutzfu8fJwN7gwt7gxc/QyuHhy+Hi' + 'zeHi0NfX0+Pj19zb1+Tj2uXk29/e3uLg3+Lh3+bl4uXj4ufl4+fl5Ofl5ufl5ujm5+jmySDn' + 'BAAAAFp0Uk5TAAECAgMEBAYHCA0NDg4UGRogIiMmKSssLzU7PkJJT1JTVFliY2hrdHZ3foSF' + 'hYeJjY2QkpugqbG1tre5w8zQ09XY3uXn6+zx8vT09vf4+Pj5+fr6/P39/f3+gz7SsAAAAVVJ' + 'REFUOMtjYKA7EBDnwCPLrObS1BRiLoJLnte6CQy8FLHLCzs2QUG4FjZ5GbcmBDDjxJBXDWxC' + 'Brb8aM4zbkIDzpLYnAcE9VXlJSWlZRU13koIeW57mGx5XjoMZEUqwxWYQaQbSzLSkYGfKFSe' + '0QMsX5WbjgY0YS4MBplemI4BdGBW+DQ11eZiymfqQuXZIjqwyadPNoSZ4L+0FVM6e+oGI6g8' + 'a9iKNT3o8kVzNkzRg5lgl7p4wyRUL9Yt2jAxVh6mQCogae6GmflI8p0r13VFWTHBQ0rWPW7a' + 'hgWVcPm+9cuLoyy4kCJDzCm6d8PSFoh0zvQNC5OjDJhQopPPJqph1doJBUD5tnkbZiUEqaCn' + 'B3bTqLTFG1bPn71kw4b+GFdpLElKIzRxxgYgWNYc5SCENVHKeUaltHdXx0dZ8uBI1hJ2UUDg' + 'q82CM2MwKeibqAvSO7MCABq0wXEPiqWEAAAAAElFTkSuQmCC';\n/**\n * @param {olx.MapOptions} options Map options.\n * @return {ol.MapOptionsInternal} Internal map options.\n */\n\n_ol_PluggableMap_.createOptionsInternal = function (options) {\n  /**\n   * @type {Element|Document}\n   */\n  var keyboardEventTarget = null;\n\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ? document.getElementById(options.keyboardEventTarget) : options.keyboardEventTarget;\n  }\n  /**\n   * @type {Object.<string, *>}\n   */\n\n\n  var values = {};\n  var logos = {};\n\n  if (options.logo === undefined || typeof options.logo === 'boolean' && options.logo) {\n    logos[_ol_PluggableMap_.LOGO_URL] = 'https://openlayers.org/';\n  } else {\n    var logo = options.logo;\n\n    if (typeof logo === 'string') {\n      logos[logo] = '';\n    } else if (logo instanceof HTMLElement) {\n      logos[_ol_.getUid(logo).toString()] = logo;\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n\n\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n\n\n      logos[logo.src] = logo.href;\n    }\n  }\n\n  var layerGroup = options.layers instanceof _ol_layer_Group_ ? options.layers : new _ol_layer_Group_({\n    layers: options.layers\n  });\n  values[_ol_MapProperty_.LAYERGROUP] = layerGroup;\n  values[_ol_MapProperty_.TARGET] = options.target;\n  values[_ol_MapProperty_.VIEW] = options.view !== undefined ? options.view : new _ol_View_();\n  /**\n   * @type {Array.<ol.renderer.Type>}\n   */\n\n  var rendererTypes;\n\n  if (options.renderer !== undefined) {\n    if (Array.isArray(options.renderer)) {\n      rendererTypes = options.renderer;\n    } else if (typeof options.renderer === 'string') {\n      rendererTypes = [options.renderer];\n    } else {\n      _ol_asserts_.assert(false, 46); // Incorrect format for `renderer` option\n\n    }\n\n    if (rendererTypes.indexOf(\n    /** @type {ol.renderer.Type} */\n    'dom') >= 0) {\n      rendererTypes = rendererTypes.concat(_ol_PluggableMap_.DEFAULT_RENDERER_TYPES);\n    }\n  } else {\n    rendererTypes = _ol_PluggableMap_.DEFAULT_RENDERER_TYPES;\n  }\n  /**\n   * @type {olx.MapRendererPlugin}\n   */\n\n\n  var mapRendererPlugin;\n\n  var mapRendererPlugins = _ol_plugins_.getMapRendererPlugins();\n\n  outer: for (var i = 0, ii = rendererTypes.length; i < ii; ++i) {\n    var rendererType = rendererTypes[i];\n\n    for (var j = 0, jj = mapRendererPlugins.length; j < jj; ++j) {\n      var candidate = mapRendererPlugins[j];\n\n      if (candidate['handles'](rendererType)) {\n        mapRendererPlugin = candidate;\n        break outer;\n      }\n    }\n  }\n\n  if (!mapRendererPlugin) {\n    throw new Error('Unable to create a map renderer for types: ' + rendererTypes.join(', '));\n  }\n\n  var controls;\n\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new _ol_Collection_(options.controls.slice());\n    } else {\n      _ol_asserts_.assert(options.controls instanceof _ol_Collection_, 47); // Expected `controls` to be an array or an `ol.Collection`\n\n\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new _ol_Collection_(options.interactions.slice());\n    } else {\n      _ol_asserts_.assert(options.interactions instanceof _ol_Collection_, 48); // Expected `interactions` to be an array or an `ol.Collection`\n\n\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new _ol_Collection_(options.overlays.slice());\n    } else {\n      _ol_asserts_.assert(options.overlays instanceof _ol_Collection_, 49); // Expected `overlays` to be an array or an `ol.Collection`\n\n\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new _ol_Collection_();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    logos: logos,\n    overlays: overlays,\n    mapRendererPlugin: mapRendererPlugin,\n    values: values\n  };\n};\n\nexport default _ol_PluggableMap_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/pluggablemap.js"],"names":["_ol_","_ol_Collection_","_ol_CollectionEventType_","_ol_MapBrowserEvent_","_ol_MapBrowserEventHandler_","_ol_MapBrowserEventType_","_ol_MapEvent_","_ol_MapEventType_","_ol_MapProperty_","_ol_Object_","_ol_ObjectEventType_","_ol_TileQueue_","_ol_View_","_ol_ViewHint_","_ol_asserts_","_ol_dom_","_ol_events_","_ol_events_Event_","_ol_events_EventType_","_ol_extent_","_ol_functions_","_ol_has_","_ol_layer_Group_","_ol_obj_","_ol_plugins_","_ol_renderer_Type_","_ol_size_","_ol_structs_PriorityQueue_","_ol_transform_","_ol_PluggableMap_","options","call","optionsInternal","createOptionsInternal","loadTilesWhileAnimating_","loadTilesWhileAnimating","undefined","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","logos_","logos","animationDelayKey_","animationDelay_","renderFrame_","Date","now","bind","coordinateToPixelTransform_","create","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","document","createElement","className","TOUCH","style","position","overflow","width","height","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","CLICK","DBLCLICK","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","POINTERDOWN","MOUSEWHEEL","WHEEL","i","ii","length","listen","stopPropagation","mapBrowserEventHandler_","moveTolerance","key","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","mapRendererPlugin","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","getChangeEventType","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","setProperties","values","forEach","control","setMap","ADD","event","element","REMOVE","interaction","addOverlayInternal_","overlay","id","getId","toString","inherits","prototype","addControl","getControls","push","addInteraction","getInteractions","addLayer","layer","layers","getLayerGroup","getLayers","addOverlay","getOverlays","disposeInternal","dispose","unlisten","window","removeEventListener","RESIZE","cancelAnimationFrame","setTarget","forEachFeatureAtPixel","pixel","callback","opt_options","coordinate","getCoordinateFromPixel","hitTolerance","layerFilter","TRUE","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","opt_this","opt_layerFilter","opt_this2","thisArg","thisArg2","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventPixel","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","left","clientY","top","getTarget","get","getTargetElement","target","getElementById","frameState","apply","pixelToCoordinateTransform","slice","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getViewport","getOverlayContainer","getOverlayContainerStopEvent","tile","tileSourceKey","tileCenter","tileResolution","wantedTiles","DROP","getKey","deltaX","focus","deltaY","Math","log","sqrt","browserEvent","opt_type","type","mapBrowserEvent","interactionsArray","getArray","dispatchEvent","getActive","cont","handleEvent","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ANIMATING","INTERACTING","getTilesLoading","reprioritize","loadMoreTiles","postRenderFunctions","render","targetElement","unlistenByKey","removeLayerRenderers","removeNode","KEYDOWN","KEYPRESS","updateSize","addEventListener","handleViewPropertyChanged_","view","setAttribute","getUid","PROPERTYCHANGE","CHANGE","layerGroup","isRendered","renderSync","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","time","viewState","size","extent","createEmpty","previousFrameState","hasArea","isDef","getHints","layerStatesArray","getLayerStatesArray","layerStates","getState","center","pixelResolution","resolution","round","animate","index","assign","skippedFeatureUids","usedTiles","getForViewAndSize","rotation","renderFrame","Array","moveStart","equals","MOVESTART","createOrUpdateEmpty","idle","MOVEEND","clone","POSTRENDER","setTimeout","setLayerGroup","set","setSize","setView","skipFeature","featureUid","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","DEFAULT_RENDERER_TYPES","CANVAS","WEBGL","LOGO_URL","logo","HTMLElement","assert","href","src","rendererTypes","renderer","isArray","indexOf","concat","mapRendererPlugins","getMapRendererPlugins","outer","rendererType","j","jj","candidate","Error","join"],"mappings":"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","sourcesContent":["import _ol_ from './index.js';\nimport _ol_Collection_ from './collection.js';\nimport _ol_CollectionEventType_ from './collectioneventtype.js';\nimport _ol_MapBrowserEvent_ from './mapbrowserevent.js';\nimport _ol_MapBrowserEventHandler_ from './mapbrowsereventhandler.js';\nimport _ol_MapBrowserEventType_ from './mapbrowsereventtype.js';\nimport _ol_MapEvent_ from './mapevent.js';\nimport _ol_MapEventType_ from './mapeventtype.js';\nimport _ol_MapProperty_ from './mapproperty.js';\nimport _ol_Object_ from './object.js';\nimport _ol_ObjectEventType_ from './objecteventtype.js';\nimport _ol_TileQueue_ from './tilequeue.js';\nimport _ol_View_ from './view.js';\nimport _ol_ViewHint_ from './viewhint.js';\nimport _ol_asserts_ from './asserts.js';\nimport _ol_dom_ from './dom.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_Event_ from './events/event.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\nimport _ol_functions_ from './functions.js';\nimport _ol_has_ from './has.js';\nimport _ol_layer_Group_ from './layer/group.js';\nimport _ol_obj_ from './obj.js';\nimport _ol_plugins_ from './plugins.js';\nimport _ol_renderer_Type_ from './renderer/type.js';\nimport _ol_size_ from './size.js';\nimport _ol_structs_PriorityQueue_ from './structs/priorityqueue.js';\nimport _ol_transform_ from './transform.js';\n\n/**\n * @constructor\n * @extends {ol.Object}\n * @param {olx.MapOptions} options Map options.\n * @fires ol.MapBrowserEvent\n * @fires ol.MapEvent\n * @fires ol.render.Event#postcompose\n * @fires ol.render.Event#precompose\n * @api\n */\nvar _ol_PluggableMap_ = function(options) {\n\n  _ol_Object_.call(this);\n\n  var optionsInternal = _ol_PluggableMap_.createOptionsInternal(options);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : _ol_has_.DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n  this.logos_ = optionsInternal.logos;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.coordinateToPixelTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {ol.Transform}\n   */\n  this.pixelToCoordinateTransform_ = _ol_transform_.create();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?olx.FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {ol.Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (_ol_has_.TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  var overlayEvents = [\n    _ol_events_EventType_.CLICK,\n    _ol_events_EventType_.DBLCLICK,\n    _ol_events_EventType_.MOUSEDOWN,\n    _ol_events_EventType_.TOUCHSTART,\n    _ol_events_EventType_.MSPOINTERDOWN,\n    _ol_MapBrowserEventType_.POINTERDOWN,\n    _ol_events_EventType_.MOUSEWHEEL,\n    _ol_events_EventType_.WHEEL\n  ];\n  for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    _ol_events_.listen(this.overlayContainerStopEvent_, overlayEvents[i],\n        _ol_events_Event_.stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {ol.MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new _ol_MapBrowserEventHandler_(this, options.moveTolerance);\n  for (var key in _ol_MapBrowserEventType_) {\n    _ol_events_.listen(this.mapBrowserEventHandler_, _ol_MapBrowserEventType_[key],\n        this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.listen(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n\n  /**\n   * @type {ol.Collection.<ol.control.Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.interaction.Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new _ol_Collection_();\n\n  /**\n   * @type {ol.Collection.<ol.Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, ol.Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {ol.renderer.Map}\n   * @private\n   */\n  this.renderer_ = optionsInternal.mapRendererPlugin['create'](this.viewport_, this);\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {Array.<ol.PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {ol.TileQueue}\n   */\n  this.tileQueue_ = new _ol_TileQueue_(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_MapProperty_.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.VIEW),\n      this.handleViewChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.SIZE),\n      this.handleSizeChanged_, this);\n  _ol_events_.listen(this, _ol_Object_.getChangeEventType(_ol_MapProperty_.TARGET),\n      this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n      /**\n       * @param {ol.control.Control} control Control.\n       * @this {ol.PluggableMap}\n       */\n      function(control) {\n        control.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.controls, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.interactions.forEach(\n      /**\n       * @param {ol.interaction.Interaction} interaction Interaction.\n       * @this {ol.PluggableMap}\n       */\n      function(interaction) {\n        interaction.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n  _ol_events_.listen(this.interactions, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.ADD,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {ol.Overlay} */ (event.element));\n      }, this);\n\n  _ol_events_.listen(this.overlays_, _ol_CollectionEventType_.REMOVE,\n      /**\n       * @param {ol.Collection.Event} event Collection event.\n       */\n      function(event) {\n        var overlay = /** @type {ol.Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n};\n\n_ol_.inherits(_ol_PluggableMap_, _ol_Object_);\n\n\n/**\n * Add the given control to the map.\n * @param {ol.control.Control} control Control.\n * @api\n */\n_ol_PluggableMap_.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {ol.interaction.Interaction} interaction Interaction to add.\n * @api\n */\n_ol_PluggableMap_.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link ol.Collection}.\n * @param {ol.layer.Base} layer Layer.\n * @api\n */\n_ol_PluggableMap_.prototype.addLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {ol.Overlay} overlay Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {ol.Overlay} overlay Overlay.\n * @private\n */\n_ol_PluggableMap_.prototype.addOverlayInternal_ = function(overlay) {\n  var id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\n_ol_PluggableMap_.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.WHEEL,\n      this.handleBrowserEvent, this);\n  _ol_events_.unlisten(this.viewport_, _ol_events_EventType_.MOUSEWHEEL,\n      this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    window.removeEventListener(_ol_events_EventType_.RESIZE,\n        this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  _ol_Object_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, (ol.Feature|ol.render.Feature),\n *     ol.layer.Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link ol.Feature feature} or\n *     {@link ol.render.Feature render feature} at the pixel, the second is\n *     the {@link ol.layer.Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\n_ol_PluggableMap_.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {Array.<ol.Feature|ol.render.Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\n_ol_PluggableMap_.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  var features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {function(this: S, ol.layer.Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link ol.layer.Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, ol.layer.Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link ol.layer.Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\n_ol_PluggableMap_.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  var thisArg = opt_this !== undefined ? opt_this : null;\n  var layerFilter = opt_layerFilter !== undefined ?\n    opt_layerFilter : _ol_functions_.TRUE;\n  var thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, callback, thisArg,\n      layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {ol.Pixel} pixel Pixel.\n * @param {olx.AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\n_ol_PluggableMap_.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  var coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  var layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : _ol_functions_.TRUE;\n  var hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {ol.Pixel} Pixel.\n * @api\n */\n_ol_PluggableMap_.prototype.getEventPixel = function(event) {\n  var viewportPosition = this.viewport_.getBoundingClientRect();\n  var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getTarget = function() {\n  return (\n    /** @type {Element|string|undefined} */ this.get(_ol_MapProperty_.TARGET)\n  );\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\n_ol_PluggableMap_.prototype.getTargetElement = function() {\n  var target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {ol.Pixel} pixel Pixel position in the map viewport.\n * @return {ol.Coordinate} The coordinate for the pixel position.\n * @api\n */\n_ol_PluggableMap_.prototype.getCoordinateFromPixel = function(pixel) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {ol.Collection.<ol.control.Control>} Controls.\n * @api\n */\n_ol_PluggableMap_.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {ol.Collection.<ol.Overlay>} Overlays.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {ol.Overlay} Overlay.\n * @api\n */\n_ol_PluggableMap_.prototype.getOverlayById = function(id) {\n  var overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {ol.Collection.<ol.interaction.Interaction>} Interactions.\n * @api\n */\n_ol_PluggableMap_.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {ol.layer.Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getLayerGroup = function() {\n  return (\n    /** @type {ol.layer.Group} */ this.get(_ol_MapProperty_.LAYERGROUP)\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!ol.Collection.<ol.layer.Base>} Layers.\n * @api\n */\n_ol_PluggableMap_.prototype.getLayers = function() {\n  var layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {ol.Coordinate} coordinate A map coordinate.\n * @return {ol.Pixel} A pixel position in the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getPixelFromCoordinate = function(coordinate) {\n  var frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return _ol_transform_.apply(frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {ol.renderer.Map} Renderer\n */\n_ol_PluggableMap_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {ol.Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getSize = function() {\n  return (\n    /** @type {ol.Size|undefined} */ this.get(_ol_MapProperty_.SIZE)\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {ol.View} The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.getView = function() {\n  return (\n    /** @type {ol.View} */ this.get(_ol_MapProperty_.VIEW)\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link ol.MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\n_ol_PluggableMap_.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link ol.MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\n_ol_PluggableMap_.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {ol.Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {ol.Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n_ol_PluggableMap_.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  var frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return _ol_structs_PriorityQueue_.DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  var deltaX = tileCenter[0] - frameState.focus[0];\n  var deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\n_ol_PluggableMap_.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  var type = opt_type || browserEvent.type;\n  var mapBrowserEvent = new _ol_MapBrowserEvent_(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent The event to handle.\n */\n_ol_PluggableMap_.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  var interactionsArray = this.getInteractions().getArray();\n  var i;\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (i = interactionsArray.length - 1; i >= 0; i--) {\n      var interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      var cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\n_ol_PluggableMap_.prototype.handlePostRender = function() {\n\n  var frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  var tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    var maxTotalLoading = 16;\n    var maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      var hints = frameState.viewHints;\n      if (hints[_ol_ViewHint_.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[_ol_ViewHint_.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  var postRenderFunctions = this.postRenderFunctions_;\n  var i, ii;\n  for (i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  var targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      _ol_events_.unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    _ol_dom_.removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      window.removeEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    var keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYDOWN,\n          this.handleBrowserEvent, this),\n      _ol_events_.listen(keyboardEventTarget, _ol_events_EventType_.KEYPRESS,\n          this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      window.addEventListener(_ol_events_EventType_.RESIZE,\n          this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    _ol_events_.unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  var view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', _ol_.getUid(view));\n    this.viewPropertyListenerKey_ = _ol_events_.listen(\n        view, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = _ol_events_.listen(\n        view, _ol_events_EventType_.CHANGE,\n        this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\n_ol_PluggableMap_.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(_ol_events_.unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  var layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      _ol_events_.listen(\n          layerGroup, _ol_ObjectEventType_.PROPERTYCHANGE,\n          this.render, this),\n      _ol_events_.listen(\n          layerGroup, _ol_events_EventType_.CHANGE,\n          this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\n_ol_PluggableMap_.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\n_ol_PluggableMap_.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\n_ol_PluggableMap_.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(\n        this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {ol.control.Control} control Control.\n * @return {ol.control.Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {ol.interaction.Interaction} interaction Interaction to remove.\n * @return {ol.interaction.Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {ol.layer.Base} layer Layer.\n * @return {ol.layer.Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeLayer = function(layer) {\n  var layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {ol.Overlay} overlay Overlay.\n * @return {ol.Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\n_ol_PluggableMap_.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\n_ol_PluggableMap_.prototype.renderFrame_ = function(time) {\n  var i, ii, viewState;\n\n  var size = this.getSize();\n  var view = this.getView();\n  var extent = _ol_extent_.createEmpty();\n  var previousFrameState = this.frameState_;\n  /** @type {?olx.FrameState} */\n  var frameState = null;\n  if (size !== undefined && _ol_size_.hasArea(size) && view && view.isDef()) {\n    var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    var layerStates = {};\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[_ol_.getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    var center = viewState.center;\n    var pixelResolution = viewState.resolution / this.pixelRatio_;\n    center[0] = Math.round(center[0] / pixelResolution) * pixelResolution;\n    center[1] = Math.round(center[1] / pixelResolution) * pixelResolution;\n    frameState = /** @type {olx.FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: !this.focus_ ? center : this.focus_,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      logos: _ol_obj_.assign({}, this.logos_),\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = _ol_extent_.getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(\n        this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      var moveStart = !this.previousExtent_ ||\n                  (!_ol_extent_.isEmpty(this.previousExtent_) &&\n                  !_ol_extent_.equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n            new _ol_MapEvent_(_ol_MapEventType_.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = _ol_extent_.createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    var idle = this.previousExtent_ &&\n        !frameState.viewHints[_ol_ViewHint_.ANIMATING] &&\n        !frameState.viewHints[_ol_ViewHint_.INTERACTING] &&\n        !_ol_extent_.equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(\n          new _ol_MapEvent_(_ol_MapEventType_.MOVEEND, this, frameState));\n      _ol_extent_.clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(\n      new _ol_MapEvent_(_ol_MapEventType_.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {ol.layer.Group} layerGroup A layer group containing the layers in\n *     this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setLayerGroup = function(layerGroup) {\n  this.set(_ol_MapProperty_.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {ol.Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setSize = function(size) {\n  this.set(_ol_MapProperty_.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setTarget = function(target) {\n  this.set(_ol_MapProperty_.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {ol.View} view The view that controls this map.\n * @observable\n * @api\n */\n_ol_PluggableMap_.prototype.setView = function(view) {\n  this.set(_ol_MapProperty_.VIEW, view);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.skipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\n_ol_PluggableMap_.prototype.updateSize = function() {\n  var targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    var computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n */\n_ol_PluggableMap_.prototype.unskipFeature = function(feature) {\n  var featureUid = _ol_.getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @type {Array.<ol.renderer.Type>}\n * @const\n */\n_ol_PluggableMap_.DEFAULT_RENDERER_TYPES = [\n  _ol_renderer_Type_.CANVAS,\n  _ol_renderer_Type_.WEBGL\n];\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_PluggableMap_.LOGO_URL = 'data:image/png;base64,' +\n    'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAAA3NCSVQICAjb4U/gAAAACXBI' +\n    'WXMAAAHGAAABxgEXwfpGAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAA' +\n    'AhNQTFRF////AP//AICAgP//AFVVQECA////K1VVSbbbYL/fJ05idsTYJFtbbcjbJllmZszW' +\n    'WMTOIFhoHlNiZszTa9DdUcHNHlNlV8XRIVdiasrUHlZjIVZjaMnVH1RlIFRkH1RkH1ZlasvY' +\n    'asvXVsPQH1VkacnVa8vWIVZjIFRjVMPQa8rXIVVkXsXRsNveIFVkIFZlIVVj3eDeh6GmbMvX' +\n    'H1ZkIFRka8rWbMvXIFVkIFVjIFVkbMvWH1VjbMvWIFVlbcvWIFVla8vVIFVkbMvWbMvVH1Vk' +\n    'bMvWIFVlbcvWIFVkbcvVbMvWjNPbIFVkU8LPwMzNIFVkbczWIFVkbsvWbMvXIFVkRnB8bcvW' +\n    '2+TkW8XRIFVkIlZlJVloJlpoKlxrLl9tMmJwOWd0Omh1RXF8TneCT3iDUHiDU8LPVMLPVcLP' +\n    'VcPQVsPPVsPQV8PQWMTQWsTQW8TQXMXSXsXRX4SNX8bSYMfTYcfTYsfTY8jUZcfSZsnUaIqT' +\n    'acrVasrVa8jTa8rWbI2VbMvWbcvWdJObdcvUdszUd8vVeJaee87Yfc3WgJyjhqGnitDYjaar' +\n    'ldPZnrK2oNbborW5o9bbo9fbpLa6q9ndrL3ArtndscDDutzfu8fJwN7gwt7gxc/QyuHhy+Hi' +\n    'zeHi0NfX0+Pj19zb1+Tj2uXk29/e3uLg3+Lh3+bl4uXj4ufl4+fl5Ofl5ufl5ujm5+jmySDn' +\n    'BAAAAFp0Uk5TAAECAgMEBAYHCA0NDg4UGRogIiMmKSssLzU7PkJJT1JTVFliY2hrdHZ3foSF' +\n    'hYeJjY2QkpugqbG1tre5w8zQ09XY3uXn6+zx8vT09vf4+Pj5+fr6/P39/f3+gz7SsAAAAVVJ' +\n    'REFUOMtjYKA7EBDnwCPLrObS1BRiLoJLnte6CQy8FLHLCzs2QUG4FjZ5GbcmBDDjxJBXDWxC' +\n    'Brb8aM4zbkIDzpLYnAcE9VXlJSWlZRU13koIeW57mGx5XjoMZEUqwxWYQaQbSzLSkYGfKFSe' +\n    '0QMsX5WbjgY0YS4MBplemI4BdGBW+DQ11eZiymfqQuXZIjqwyadPNoSZ4L+0FVM6e+oGI6g8' +\n    'a9iKNT3o8kVzNkzRg5lgl7p4wyRUL9Yt2jAxVh6mQCogae6GmflI8p0r13VFWTHBQ0rWPW7a' +\n    'hgWVcPm+9cuLoyy4kCJDzCm6d8PSFoh0zvQNC5OjDJhQopPPJqph1doJBUD5tnkbZiUEqaCn' +\n    'B3bTqLTFG1bPn71kw4b+GFdpLElKIzRxxgYgWNYc5SCENVHKeUaltHdXx0dZ8uBI1hJ2UUDg' +\n    'q82CM2MwKeibqAvSO7MCABq0wXEPiqWEAAAAAElFTkSuQmCC';\n\n\n/**\n * @param {olx.MapOptions} options Map options.\n * @return {ol.MapOptionsInternal} Internal map options.\n */\n_ol_PluggableMap_.createOptionsInternal = function(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  var values = {};\n\n  var logos = {};\n  if (options.logo === undefined ||\n      (typeof options.logo === 'boolean' && options.logo)) {\n    logos[_ol_PluggableMap_.LOGO_URL] = 'https://openlayers.org/';\n  } else {\n    var logo = options.logo;\n    if (typeof logo === 'string') {\n      logos[logo] = '';\n    } else if (logo instanceof HTMLElement) {\n      logos[_ol_.getUid(logo).toString()] = logo;\n    } else if (logo) {\n      _ol_asserts_.assert(typeof logo.href == 'string', 44); // `logo.href` should be a string.\n      _ol_asserts_.assert(typeof logo.src == 'string', 45); // `logo.src` should be a string.\n      logos[logo.src] = logo.href;\n    }\n  }\n\n  var layerGroup = (options.layers instanceof _ol_layer_Group_) ?\n    options.layers : new _ol_layer_Group_({layers: options.layers});\n  values[_ol_MapProperty_.LAYERGROUP] = layerGroup;\n\n  values[_ol_MapProperty_.TARGET] = options.target;\n\n  values[_ol_MapProperty_.VIEW] = options.view !== undefined ?\n    options.view : new _ol_View_();\n\n  /**\n   * @type {Array.<ol.renderer.Type>}\n   */\n  var rendererTypes;\n\n  if (options.renderer !== undefined) {\n    if (Array.isArray(options.renderer)) {\n      rendererTypes = options.renderer;\n    } else if (typeof options.renderer === 'string') {\n      rendererTypes = [options.renderer];\n    } else {\n      _ol_asserts_.assert(false, 46); // Incorrect format for `renderer` option\n    }\n    if (rendererTypes.indexOf(/** @type {ol.renderer.Type} */ ('dom')) >= 0) {\n      rendererTypes = rendererTypes.concat(_ol_PluggableMap_.DEFAULT_RENDERER_TYPES);\n    }\n  } else {\n    rendererTypes = _ol_PluggableMap_.DEFAULT_RENDERER_TYPES;\n  }\n\n  /**\n   * @type {olx.MapRendererPlugin}\n   */\n  var mapRendererPlugin;\n\n  var mapRendererPlugins = _ol_plugins_.getMapRendererPlugins();\n  outer: for (var i = 0, ii = rendererTypes.length; i < ii; ++i) {\n    var rendererType = rendererTypes[i];\n    for (var j = 0, jj = mapRendererPlugins.length; j < jj; ++j) {\n      var candidate = mapRendererPlugins[j];\n      if (candidate['handles'](rendererType)) {\n        mapRendererPlugin = candidate;\n        break outer;\n      }\n    }\n  }\n\n  if (!mapRendererPlugin) {\n    throw new Error('Unable to create a map renderer for types: ' +  rendererTypes.join(', '));\n  }\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new _ol_Collection_(options.controls.slice());\n    } else {\n      _ol_asserts_.assert(options.controls instanceof _ol_Collection_,\n          47); // Expected `controls` to be an array or an `ol.Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new _ol_Collection_(options.interactions.slice());\n    } else {\n      _ol_asserts_.assert(options.interactions instanceof _ol_Collection_,\n          48); // Expected `interactions` to be an array or an `ol.Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new _ol_Collection_(options.overlays.slice());\n    } else {\n      _ol_asserts_.assert(options.overlays instanceof _ol_Collection_,\n          49); // Expected `overlays` to be an array or an `ol.Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new _ol_Collection_();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    logos: logos,\n    overlays: overlays,\n    mapRendererPlugin: mapRendererPlugin,\n    values: values\n  };\n\n};\nexport default _ol_PluggableMap_;\n"]},"metadata":{},"sourceType":"module"}
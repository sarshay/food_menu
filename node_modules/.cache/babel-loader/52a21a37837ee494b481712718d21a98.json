{"ast":null,"code":"var _ol_geom_flat_length_ = {};\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\n\n_ol_geom_flat_length_.lineString = function (flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  var i;\n\n  for (i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return length;\n};\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\n\n\n_ol_geom_flat_length_.linearRing = function (flatCoordinates, offset, end, stride) {\n  var perimeter = _ol_geom_flat_length_.lineString(flatCoordinates, offset, end, stride);\n\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n};\n\nexport default _ol_geom_flat_length_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/geom/flat/length.js"],"names":["_ol_geom_flat_length_","lineString","flatCoordinates","offset","end","stride","x1","y1","length","i","x2","y2","Math","sqrt","linearRing","perimeter","dx","dy"],"mappings":"AAAA,IAAIA,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,qBAAqB,CAACC,UAAtB,GAAmC,UAASC,eAAT,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAChF,MAAIC,EAAE,GAAGJ,eAAe,CAACC,MAAD,CAAxB;AACA,MAAII,EAAE,GAAGL,eAAe,CAACC,MAAM,GAAG,CAAV,CAAxB;AACA,MAAIK,MAAM,GAAG,CAAb;AACA,MAAIC,CAAJ;;AACA,OAAKA,CAAC,GAAGN,MAAM,GAAGE,MAAlB,EAA0BI,CAAC,GAAGL,GAA9B,EAAmCK,CAAC,IAAIJ,MAAxC,EAAgD;AAC9C,QAAIK,EAAE,GAAGR,eAAe,CAACO,CAAD,CAAxB;AACA,QAAIE,EAAE,GAAGT,eAAe,CAACO,CAAC,GAAG,CAAL,CAAxB;AACAD,IAAAA,MAAM,IAAII,IAAI,CAACC,IAAL,CAAU,CAACH,EAAE,GAAGJ,EAAN,KAAaI,EAAE,GAAGJ,EAAlB,IAAwB,CAACK,EAAE,GAAGJ,EAAN,KAAaI,EAAE,GAAGJ,EAAlB,CAAlC,CAAV;AACAD,IAAAA,EAAE,GAAGI,EAAL;AACAH,IAAAA,EAAE,GAAGI,EAAL;AACD;;AACD,SAAOH,MAAP;AACD,CAbD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,qBAAqB,CAACc,UAAtB,GAAmC,UAASZ,eAAT,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAChF,MAAIU,SAAS,GACTf,qBAAqB,CAACC,UAAtB,CAAiCC,eAAjC,EAAkDC,MAAlD,EAA0DC,GAA1D,EAA+DC,MAA/D,CADJ;;AAEA,MAAIW,EAAE,GAAGd,eAAe,CAACE,GAAG,GAAGC,MAAP,CAAf,GAAgCH,eAAe,CAACC,MAAD,CAAxD;AACA,MAAIc,EAAE,GAAGf,eAAe,CAACE,GAAG,GAAGC,MAAN,GAAe,CAAhB,CAAf,GAAoCH,eAAe,CAACC,MAAM,GAAG,CAAV,CAA5D;AACAY,EAAAA,SAAS,IAAIH,IAAI,CAACC,IAAL,CAAUG,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAb;AACA,SAAOF,SAAP;AACD,CAPD;;AAQA,eAAef,qBAAf","sourcesContent":["var _ol_geom_flat_length_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\n_ol_geom_flat_length_.lineString = function(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  var i;\n  for (i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\n_ol_geom_flat_length_.linearRing = function(flatCoordinates, offset, end, stride) {\n  var perimeter =\n      _ol_geom_flat_length_.lineString(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n};\nexport default _ol_geom_flat_length_;\n"]},"metadata":{},"sourceType":"module"}
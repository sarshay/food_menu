{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\food_menu\\\\src\\\\map\\\\map.js\";\nimport 'ol/ol.css';\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Map from \"ol/Map.js\";\nimport View from \"ol/View.js\";\nimport Overlay from \"ol/Overlay.js\";\nimport LayerTile from \"ol/layer/Tile.js\";\nimport SourceOSM from \"ol/source/OSM.js\";\nimport { fromLonLat } from 'ol/proj';\nimport { Vector as LayerVector } from 'ol/layer';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorSource from 'ol/source/Vector';\nimport { Fill, Style, Text } from 'ol/style'; // import './MapExample.css';\n\nimport FoodBankIcon from '@mui/icons-material/FoodBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sittwe = fromLonLat([92.8324102, 20.1598002]);\nconst yangon = fromLonLat([96.1735, 16.8409]);\nexport default class MyMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: sittwe,\n      zoom: 10\n    }; // const viewExtent = [1817379, 6139595, 1827851, 6143616];\n\n    this.map = new Map({\n      target: null,\n      // set this in componentDidMount\n      layers: [new LayerTile({\n        source: new SourceOSM(),\n        attributionsCollapsible: true // url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n\n      }), new LayerVector({\n        declutter: true,\n        source: new VectorSource({\n          format: new GeoJSON(),\n          url: 'data/geojson/vienna-streets.geojson'\n        }),\n        style: function (feature) {\n          style.getText().setText(feature.get('name'));\n          return style;\n        }\n      })],\n      view: new View({\n        // extent: viewExtent,\n        center: this.state.center,\n        zoom: this.state.zoom\n      })\n    });\n  }\n\n  updateMap(location, zoom) {\n    this.map.setTarget(\"map\");\n    this.setState({\n      center: location,\n      zoom: zoom\n    });\n    const overlay = new Overlay({\n      position: location,\n      element: ReactDOM.findDOMNode(this).querySelector('#overlay'),\n      positioning: 'center-center',\n      stopEvent: false\n    });\n    this.map.addOverlay(overlay);\n  }\n\n  componentDidMount() {\n    this.updateMap(yangon, 13);\n  }\n\n  componentWillUnmount() {\n    this.updateMap(yangon, 12);\n  }\n\n  refresh() {\n    this.map.getView().setCenter(this.state.center);\n    this.map.getView().setZoom(this.state.zoom);\n  }\n\n  render() {\n    this.refresh();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          style: {\n            width: \"100%\",\n            height: \"80vh\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"overlay\",\n          title: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(FoodBankIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this.updateMap(sittwe, 10),\n        children: \"sittwe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this.updateMap(yangon, 10),\n        children: \"yangon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/src/map/map.js"],"names":["React","Component","ReactDOM","Map","View","Overlay","LayerTile","SourceOSM","fromLonLat","Vector","LayerVector","GeoJSON","VectorSource","Fill","Style","Text","FoodBankIcon","sittwe","yangon","MyMap","constructor","props","state","center","zoom","map","target","layers","source","attributionsCollapsible","declutter","format","url","style","feature","getText","setText","get","view","updateMap","location","setTarget","setState","overlay","position","element","findDOMNode","querySelector","positioning","stopEvent","addOverlay","componentDidMount","componentWillUnmount","refresh","getView","setCenter","setZoom","render","width","height","e"],"mappings":"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","sourcesContent":["import 'ol/ol.css';\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Map from \"ol/Map.js\";\r\nimport View from \"ol/View.js\";\r\nimport Overlay from \"ol/Overlay.js\";\r\nimport LayerTile from \"ol/layer/Tile.js\";\r\nimport SourceOSM from \"ol/source/OSM.js\";\r\nimport {fromLonLat} from 'ol/proj';\r\n\r\nimport { Vector as LayerVector} from 'ol/layer';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport {Fill, Style, Text} from 'ol/style';\r\n// import './MapExample.css';\r\nimport FoodBankIcon from '@mui/icons-material/FoodBank';\r\n\r\nconst sittwe = fromLonLat( [92.8324102,20.1598002]);\r\nconst yangon = fromLonLat( [96.1735, 16.8409]);\r\n\r\nexport default class MyMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        center: sittwe,\r\n        zoom: 10 \r\n    };\r\n    // const viewExtent = [1817379, 6139595, 1827851, 6143616];\r\n    this.map = new Map({\r\n      target: null, // set this in componentDidMount\r\n      layers: [\r\n        new LayerTile({\r\n          source: new SourceOSM(),\r\n          attributionsCollapsible: true,\r\n          // url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n        }),\r\n        new LayerVector({\r\n          declutter: true,\r\n          source: new VectorSource({\r\n            format: new GeoJSON(),\r\n            url: 'data/geojson/vienna-streets.geojson',\r\n          }),\r\n          style: function (feature) {\r\n            style.getText().setText(feature.get('name'));\r\n            return style;\r\n          },\r\n        })\r\n      ],\r\n      view: new View({\r\n        // extent: viewExtent,\r\n        center: this.state.center,\r\n        zoom: this.state.zoom\r\n      })\r\n    });\r\n  }\r\n\r\n  updateMap(location,zoom){\r\n    this.map.setTarget(\"map\");\r\n    this.setState({ center: location, zoom: zoom });\r\n    const overlay = new Overlay({\r\n      position: location,\r\n      element: ReactDOM.findDOMNode(this).querySelector('#overlay'),\r\n      positioning: 'center-center',\r\n      stopEvent: false\r\n    });\r\n    this.map.addOverlay(overlay);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.updateMap(yangon,13)\r\n  }\r\n  componentWillUnmount() {\r\n    this.updateMap(yangon,12)\r\n  }\r\n  refresh() {\r\n    this.map.getView().setCenter(this.state.center);\r\n    this.map.getView().setZoom(this.state.zoom);\r\n  }\r\n  render() {\r\n    this.refresh();\r\n    return (\r\n        <div>\r\n        <div>\r\n            <div id=\"map\" style={{ width: \"100%\", height: \"80vh\" }}/>\r\n            <div id=\"overlay\" title=\"overlay\"><FoodBankIcon/></div>\r\n        </div>\r\n        \r\n        <button onClick={e => this.updateMap(sittwe,10)}>sittwe</button>\r\n        <button onClick={e => this.updateMap(yangon,10)}>yangon</button>\r\n        </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\n\nvar _ol_render_canvas_LineStringReplay_ = function (tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_LineStringReplay_, _ol_render_canvas_Replay_);\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\n\n\n_ol_render_canvas_LineStringReplay_.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n  var myBegin = this.coordinates.length;\n  var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  var moveToLineToInstruction = [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_canvas_LineStringReplay_.prototype.drawLineString = function (lineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], [_ol_render_canvas_Instruction_.BEGIN_PATH]);\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(lineStringGeometry, feature);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_canvas_LineStringReplay_.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], [_ol_render_canvas_Instruction_.BEGIN_PATH]);\n  var ends = multiLineStringGeometry.getEnds();\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n/**\n * @inheritDoc\n */\n\n\n_ol_render_canvas_LineStringReplay_.prototype.finish = function () {\n  var state = this.state;\n\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  }\n\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n/**\n * @inheritDoc.\n */\n\n\n_ol_render_canvas_LineStringReplay_.prototype.applyStroke = function (state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n    state.lastStroke = this.coordinates.length;\n  }\n\n  state.lastStroke = 0;\n\n  _ol_render_canvas_Replay_.prototype.applyStroke.call(this, state);\n\n  this.instructions.push([_ol_render_canvas_Instruction_.BEGIN_PATH]);\n};\n\nexport default _ol_render_canvas_LineStringReplay_;","map":{"version":3,"sources":["C:/xampp/htdocs/food_menu/node_modules/ol/render/canvas/linestringreplay.js"],"names":["_ol_","_ol_render_canvas_Instruction_","_ol_render_canvas_Replay_","_ol_render_canvas_LineStringReplay_","tolerance","maxExtent","resolution","pixelRatio","overlaps","declutterTree","call","inherits","prototype","drawFlatCoordinates_","flatCoordinates","offset","end","stride","myBegin","coordinates","length","myEnd","appendFlatCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","instructions","push","hitDetectionInstructions","drawLineString","lineStringGeometry","feature","state","strokeStyle","lineWidth","undefined","updateStrokeStyle","applyStroke","beginGeometry","SET_STROKE_STYLE","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","BEGIN_PATH","getFlatCoordinates","getStride","STROKE","endGeometry","drawMultiLineString","multiLineStringGeometry","ends","getEnds","i","ii","finish","lastStroke","reverseHitDetectionInstructions"],"mappings":"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","sourcesContent":["import _ol_ from '../../index.js';\nimport _ol_render_canvas_Instruction_ from '../canvas/instruction.js';\nimport _ol_render_canvas_Replay_ from '../canvas/replay.js';\n\n/**\n * @constructor\n * @extends {ol.render.canvas.Replay}\n * @param {number} tolerance Tolerance.\n * @param {ol.Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nvar _ol_render_canvas_LineStringReplay_ = function(\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  _ol_render_canvas_Replay_.call(this,\n      tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\n_ol_.inherits(_ol_render_canvas_LineStringReplay_, _ol_render_canvas_Replay_);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  var myBegin = this.coordinates.length;\n  var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n  var moveToLineToInstruction =\n      [_ol_render_canvas_Instruction_.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawLineString = function(lineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  var stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  var state = this.state;\n  var strokeStyle = state.strokeStyle;\n  var lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    _ol_render_canvas_Instruction_.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], [\n    _ol_render_canvas_Instruction_.BEGIN_PATH\n  ]);\n  var ends = multiLineStringGeometry.getEnds();\n  var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  var stride = multiLineStringGeometry.getStride();\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(\n        flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_render_canvas_LineStringReplay_.prototype.finish = function() {\n  var state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\n_ol_render_canvas_LineStringReplay_.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push([_ol_render_canvas_Instruction_.STROKE]);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  _ol_render_canvas_Replay_.prototype.applyStroke.call(this, state);\n  this.instructions.push([_ol_render_canvas_Instruction_.BEGIN_PATH]);\n};\nexport default _ol_render_canvas_LineStringReplay_;\n"]},"metadata":{},"sourceType":"module"}
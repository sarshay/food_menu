[{"C:\\xampp\\htdocs\\food_menu\\src\\index.js":"1","C:\\xampp\\htdocs\\food_menu\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\food_menu\\src\\template\\item\\index.js":"3","C:\\xampp\\htdocs\\food_menu\\src\\color.js":"4","C:\\xampp\\htdocs\\food_menu\\src\\page\\shop.js":"5","C:\\xampp\\htdocs\\food_menu\\src\\page\\home.js":"6","C:\\xampp\\htdocs\\food_menu\\src\\template\\appBar.js":"7","C:\\xampp\\htdocs\\food_menu\\src\\template\\item\\ItemThumbnail.js":"8","C:\\xampp\\htdocs\\food_menu\\src\\the-qr-reader.js":"9","C:\\xampp\\htdocs\\food_menu\\src\\map\\map.js":"10"},{"size":910,"mtime":1634185259829,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1634017079569,"results":"13","hashOfConfig":"12"},{"size":4918,"mtime":1634185259831,"results":"14","hashOfConfig":"12"},{"size":0,"mtime":1634034246976,"results":"15","hashOfConfig":"12"},{"size":3716,"mtime":1634185259830,"results":"16","hashOfConfig":"12"},{"size":315,"mtime":1634207300806,"results":"17","hashOfConfig":"12"},{"size":1349,"mtime":1634189783935,"results":"18","hashOfConfig":"12"},{"size":792,"mtime":1634185259831,"results":"19","hashOfConfig":"12"},{"size":3141,"mtime":1634189800540,"results":"20","hashOfConfig":"12"},{"size":2271,"mtime":1634210421117,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"13we9jk",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\food_menu\\src\\index.js",["48","49","50"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\n// import './style/app.scss';\r\nimport App from './page/shop';\r\nimport reportWebVitals from './reportWebVitals';import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport Home from './page/home';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route path={`/:topicId`}>\r\n          <App />\r\n        </Route>\r\n        <Route path={`/`}>\r\n          <Home/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["51","52"],"C:\\xampp\\htdocs\\food_menu\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\food_menu\\src\\template\\item\\index.js",["53","54","55","56"],"import * as React from 'react';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ItemThumbnail from './ItemThumbnail';\r\nimport { Button, CardMedia, IconButton, SwipeableDrawer, Typography } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport { Paper } from '@mui/material';\r\nimport { borderRadius } from '@mui/system';\r\nimport DeliveryDiningIcon from '@mui/icons-material/DeliveryDining';\r\n\r\n// fetfrom api url\r\n\r\nexport default function Items(props) {\r\n    const itemData = props.data\r\n    const [state, setState] = React.useState({\r\n        item: null,\r\n        isopen: false,\r\n    });\r\n    const [selectCat, setselectCat] = React.useState(null);\r\n\r\n    const toggleDrawer = (item, isopen) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({\r\n            item: item,\r\n            isopen: isopen\r\n        })\r\n    };\r\n\r\n    const updateSelectCategory = (event, newValue) => {\r\n        setselectCat(newValue)\r\n    }\r\n    const item_detail = (i) => (\r\n        <div className=\"container s\" style={{ minHeight: '100vh' }}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"auto\"\r\n                image={`${i.img}?w=200&fit=crop&auto=format`}\r\n                alt={i.title}\r\n                loading=\"lazy\"\r\n                className=\"sticky top0\"\r\n            />\r\n\r\n            <Paper\r\n                square elevation={0}\r\n                role=\"presentation\"\r\n                onKeyDown={toggleDrawer(i, false)}\r\n                sx={{\r\n                    p: 2,\r\n                    marginTop: '-20px',\r\n                }}\r\n                style={{\r\n                    position: 'relative',\r\n                    zIndex: 1,\r\n                    borderRadius: '20px 20px 0px 0px'\r\n                }}\r\n            >\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">{i.title}</Typography>\r\n                <p>Food is any substance consumed to provide nutritional support for an organism. Food is usually of plant, animal or fungal origin, and contains essential ...</p>\r\n            </Paper>\r\n            \r\n            <div style={{position:'fixed',top:'0',left:'0', zIndex: '1' }}>\r\n                <IconButton onClick={toggleDrawer(i, false)} sx={{ p: 2}}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    p: 1,\r\n                    m: 1,\r\n                }}\r\n            >\r\n                <Button variant=\"outlined\" endIcon={<DeliveryDiningIcon />}>\r\n                    ပို့ဆောင်ပေးပါ\r\n                </Button>\r\n            </Box>\r\n\r\n        </div>\r\n    );\r\n    // category List gen\r\n    const categories = []\r\n    itemData.map((item) => {\r\n        item.category.map((cat) => {\r\n            if (!categories.includes(cat)) {\r\n                categories.push(cat);\r\n            }\r\n        })\r\n    });\r\n    return (\r\n        <div className=\"container s\" style={{ transition: '1s' }}>\r\n            <Paper square elevation={0} className='container s sticky top0'>\r\n                <Tabs\r\n                    value={selectCat}\r\n                    onChange={updateSelectCategory}\r\n                    scrollButtons=\"auto\"\r\n                    variant=\"scrollable\"\r\n                >\r\n                    <Tab label=\"အားလုံး\" value={null} />\r\n\r\n                    {categories.map((cat) => (\r\n                        <Tab key={cat} label={cat} value={cat} />\r\n                    ))}\r\n                </Tabs>\r\n            </Paper>\r\n            <ImageList>\r\n                {itemData.map((item, i) => {\r\n                    if (item.category.includes(selectCat) || selectCat == null) {\r\n                        return (\r\n                            <ImageListItem key={i} onClick={toggleDrawer(item, true)}>\r\n                                <ItemThumbnail {...item} />\r\n                            </ImageListItem >\r\n                        )\r\n                    }\r\n                })}\r\n            </ImageList>\r\n            <SwipeableDrawer\r\n                className=\"container s\"\r\n                anchor='bottom'\r\n                open={state.isopen}\r\n                onClose={toggleDrawer(state.item, false)}\r\n                onOpen={toggleDrawer(state.item, true)}\r\n            >\r\n                {state.item == null ? '' : item_detail(state.item)}\r\n            </SwipeableDrawer>\r\n        </div>\r\n    );\r\n}","C:\\xampp\\htdocs\\food_menu\\src\\color.js",[],"C:\\xampp\\htdocs\\food_menu\\src\\page\\shop.js",["57","58"],"import * as React from 'react';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport Items from '../template/item';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport ShareSharpIcon from '@mui/icons-material/ShareSharp';\r\nimport data from '../demo-backend/shop/index.json'\r\nimport BottomAppBar from '../template/appBar';\r\n\r\n\r\nfunction shadeColor(color, percent) {\r\n\r\n  color = color.replace(/^#/, '')\r\n  if (color.length === 3) color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2]\r\n\r\n  var R = parseInt(color.substring(0, 2), 16);\r\n  var G = parseInt(color.substring(2, 4), 16);\r\n  var B = parseInt(color.substring(4, 6), 16);\r\n\r\n  R = parseInt(R * (100 + percent) / 100);\r\n  G = parseInt(G * (100 + percent) / 100);\r\n  B = parseInt(B * (100 + percent) / 100);\r\n\r\n  R = (R < 255) ? R : 255;\r\n  G = (G < 255) ? G : 255;\r\n  B = (B < 255) ? B : 255;\r\n\r\n  var RR = ((R.toString(16).length === 1) ? \"0\" + R.toString(16) : R.toString(16));\r\n  var GG = ((G.toString(16).length === 1) ? \"0\" + G.toString(16) : G.toString(16));\r\n  var BB = ((B.toString(16).length === 1) ? \"0\" + B.toString(16) : B.toString(16));\r\n  return \"#\" + RR + GG + BB;\r\n}\r\nconst colorShade = (col, amt) => {\r\n  col = col.replace(/^#/, '')\r\n  if (col.length === 3) col = col[0] + col[0] + col[1] + col[1] + col[2] + col[2]\r\n\r\n  let [r, g, b] = col.match(/.{2}/g);\r\n\r\n  r = parseInt(r * (175 + amt) / 100);\r\n  g = parseInt(g * (175 + amt) / 100);\r\n  b = parseInt(b * (175 + amt) / 100);\r\n\r\n  ([r, g, b] = [parseInt(r, 16) + amt, parseInt(g, 16) + amt, parseInt(b, 16) + amt])\r\n\r\n  r = Math.max(Math.min(255, r), 0).toString(16)\r\n  g = Math.max(Math.min(255, g), 0).toString(16)\r\n  b = Math.max(Math.min(255, b), 0).toString(16)\r\n\r\n\r\n  const rr = (r.length < 2 ? '0' : '') + r\r\n  const gg = (g.length < 2 ? '0' : '') + g\r\n  const bb = (b.length < 2 ? '0' : '') + b\r\n\r\n  return `#${rr}${gg}${bb}`\r\n}\r\nfunction adjust(color, amount) {\r\n  return '#' + color.replace(/^#/, '').replace(/../g, color => ('0' + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\r\n}\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#fff',\r\n    },\r\n    secondary:{\r\n      main:colorShade(data.theme_color,50 ),\r\n    },\r\n    background: {\r\n      default: data.theme_color,\r\n      paper: data.theme_color,\r\n    },\r\n    text: {\r\n      primary: '#fff',\r\n      // secondary:colorShade(data.theme_color,50 )\r\n    },\r\n  }\r\n});\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"profile\" style={{ color: '#fff', backgroundColor: ` ${data.theme_color}` }}>\r\n        <header\r\n          style={{\r\n            background: `url(${data.feature_image})`\r\n          }}\r\n        >\r\n          <div\r\n            className=\"info\"\r\n            style={{\r\n              color: '#fff',\r\n              paddingTop: '200px',\r\n              background: `linear-gradient(transparent, ${data.theme_color})`\r\n            }}\r\n          >\r\n            <div className=\" container s\">\r\n              <h1>{data.name}&nbsp;<CheckCircleIcon /></h1>\r\n              <p>{data.description}</p>\r\n              <ShareSharpIcon />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/* <Box sx={{ width: '100%', color: 'inherint' }}>\r\n          <Tabs value={value} onChange={handleChange} centered>\r\n            <Tab label=\"Item One\" />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n          </Tabs>\r\n        </Box> */}\r\n        <Items data={data.items}/>\r\n        <br />\r\n      </div>\r\n      <BottomAppBar/>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\xampp\\htdocs\\food_menu\\src\\page\\home.js",[],"C:\\xampp\\htdocs\\food_menu\\src\\template\\appBar.js",["59"],"import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport TheQrReader from './../the-qr-reader'\r\n\r\nexport default function BottomAppBar() {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"sticky\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\r\n                <Toolbar>\r\n                    <IconButton component={Link} to=\"/\" color=\"inherit\" aria-label=\"open drawer\">\r\n                        <HomeIcon />\r\n                    </IconButton>\r\n                    <TheQrReader />\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <IconButton color=\"inherit\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <IconButton color=\"inherit\">\r\n                        <MoreIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\food_menu\\src\\template\\item\\ItemThumbnail.js",[],"C:\\xampp\\htdocs\\food_menu\\src\\the-qr-reader.js",["60","61","62","63","64"],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\nimport { SwipeableDrawer } from '@mui/material';\r\nimport QrReader from 'react-qr-reader';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport beep from './media/beep-02.mp3'\r\nimport Fab from '@mui/material/Fab';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledFab = styled(Fab)({\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n});\r\n\r\n\r\nexport default function TheQrReader() {\r\n    let history = useHistory();\r\n    const [qrOpen, setqrOpen] = React.useState(false);\r\n    const [qrResult, setqrResult] = React.useState(null);\r\n\r\n    const qrOpener = (isopen) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setqrOpen(isopen)\r\n    };\r\n\r\n    const handleErrorScan = (error) => {\r\n        console.log(error)\r\n    }\r\n    const handleScan = (result) => {\r\n        if (result !== null) {\r\n            console.log(result);\r\n            setqrOpen(false)\r\n            // window.location.href = result;\r\n            // window.location.href = '?hello';\r\n            var pathArray = result.split('/');\r\n            var protocol = pathArray[0];\r\n            var path = pathArray[3];\r\n            var host = pathArray[2];\r\n\r\n\r\n            let audio = new Audio(beep)\r\n            if (window.location.origin.split('/')[2] == host) {\r\n                // our host \r\n                // play sound\r\n                audio.play()\r\n                history.push(path);\r\n            }\r\n            else {\r\n                // others url\r\n                window.location.href = result;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <StyledFab color=\"primary\" aria-label=\"scan qr\" onClick={qrOpener(true)} >\r\n                <QrCodeScannerIcon />\r\n            </StyledFab>\r\n\r\n            {qrOpen ?\r\n                <SwipeableDrawer\r\n                    className=\"container s\"\r\n                    anchor='bottom'\r\n                    open={qrOpen}\r\n                    onClose={qrOpener(false)}\r\n                    onOpen={qrOpener(true)}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            p: 1,\r\n                            m: 1,\r\n                            height: '80vh',\r\n                        }}\r\n                    >\r\n                        <QrReader\r\n                            delay={300}\r\n                            style={{ width: '300px' }}\r\n                            onError={handleErrorScan}\r\n                            onScan={handleScan}\r\n                        />\r\n                    </Box>\r\n                </SwipeableDrawer>\r\n                :\r\n                ''}\r\n        </React.Fragment>\r\n\r\n    )\r\n}","C:\\xampp\\htdocs\\food_menu\\src\\map\\map.js",[],{"ruleId":"65","severity":1,"message":"66","line":10,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":7},{"ruleId":"65","severity":1,"message":"69","line":11,"column":3,"nodeType":"67","messageId":"68","endLine":11,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":12,"column":3,"nodeType":"67","messageId":"68","endLine":12,"endColumn":12},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"65","severity":1,"message":"75","line":12,"column":10,"nodeType":"67","messageId":"68","endLine":12,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":94,"column":25,"nodeType":"78","messageId":"79","endLine":94,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":95,"column":33,"nodeType":"78","messageId":"79","endLine":95,"endColumn":35},{"ruleId":"76","severity":1,"message":"80","line":118,"column":41,"nodeType":"78","messageId":"81","endLine":118,"endColumn":43},{"ruleId":"65","severity":1,"message":"82","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":20},{"ruleId":"65","severity":1,"message":"83","line":56,"column":10,"nodeType":"67","messageId":"68","endLine":56,"endColumn":16},{"ruleId":"65","severity":1,"message":"84","line":10,"column":16,"nodeType":"67","messageId":"68","endLine":10,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"65","severity":1,"message":"85","line":24,"column":12,"nodeType":"67","messageId":"68","endLine":24,"endColumn":20},{"ruleId":"65","severity":1,"message":"86","line":24,"column":22,"nodeType":"67","messageId":"68","endLine":24,"endColumn":33},{"ruleId":"65","severity":1,"message":"87","line":47,"column":17,"nodeType":"67","messageId":"68","endLine":47,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":53,"column":54,"nodeType":"90","messageId":"91","endLine":53,"endColumn":56},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'borderRadius' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'shadeColor' is defined but never used.","'adjust' is defined but never used.","'useHistory' is defined but never used.","'qrResult' is assigned a value but never used.","'setqrResult' is assigned a value but never used.","'protocol' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]